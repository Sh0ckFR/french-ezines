FRHACK # 4

      _________       ________                                                                   
     (_________))    (________))                                                                      
    (___________)) (_____))  (_))                                                                        
   (_____))____   (_____))__(_))  ___                       ___                                     
  (___________)) (__________))   (___)                     (___)                                         
  (_____))       (_____))  (_))  (___)___  _______  ______ (___)___                                                          
  (_____))       (_____))  (_))  (_______)(_______)(  ____)(_______)                                                      
  (_____))       (_____))  (_))  (___) (_)(___)(__)( (____ (___()__)                                                
  (_____))       (_____))  (_))  (___) (_)(_______)(______)(___) (_)                                                       
                                                           _                              
 _____      ___  ___    _____    ______        ____    __ (_)   _  _                                  
(   __)    (  _)(_  )  (  _  )  (   ___)      (  _ )  (  )     | || |                   
 ) (__  __  )( \/ ) )  ) (_) (   ) (    __     )( (_)  )(      | || |
(   __)(__)(  )  (  ) ( (---) ) (   )  ) _)   (  ) (_)(  )     |__  | 
 ) (__      )(    )(   )(   )(   ) (__( )      )(   ( ))(         | |                
(_____)    (__)  (__) (__) (__) (_______)     (__)   (___)        |_|                                 

Url:      http://altern.org/frhack1                                     Irc:      Undernet #hack.fr
Mirror:   http://www.frhack.org


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-




                                    Disclamer


L'équipe de FrHack offre à votre disponibilité un Emag. Ce Emag n'a pour but que d'informer, donc nous
ne sommes nullement responsables des pertes de données informatiques que ces informations pourraient
occasionnellement causer, bien ou mal utilisées.

Vous introduire sans autorisation dans un autre système informatique, changer de quelques manières que
ce soit les fichiers que le système contient, est totalement illégal, que vous le fassiez consciemment ou
non. Bien sûr les textes compris dans ce Emag peuvent vous montrer à rentrer sur un ordinateur, mais
vous devez vous servir de ces textes que pour vous amusez, et combler votre soif de savoir et votre
esprit educatif jusqu'au prochain Emag.

Également, aucun des rédacteurs de FrHack ne peut être blâmer des dommages causés, accidentellement
ou non, à un ordinateur grâce à son article. 

De plus, FrHack s'engage à vous fournir le moins possible d'informations erronées. Si vous trouvez une
information erronée dans les textes qui suivent ce disclamer, dites-vous que l'erreur est humaine, et
veuillez nous faire part de cette information faussée.

Le contenu de ce Emag n'est pas décerné aux personnes suivantes. Personne travaillant pour le
gouvernement, policier, personne travaillant pour un partie politique ou une agence gouvernementale .

En continuant à lire ce Emag, vous agréez entierement à tout ce qui a été énoncé ci-dessus et vous vous
engagez à ne pas utiliser les informations contenues dans ce Emag de quelque maniere que ce soit ou qui
pourrait entrer en conflit avec la loi.

L'équipe de FrHack vous souhaite une bonne lecture, et espère que vous apprécierez notre Emag.

                                                      L'équipe de FrHack
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
                                    Sommaire

Article                            Auteur
Disclamer                          FrHack               
Introduction                       Snowcrach                                         
IPv6                               Xi9
Hack Novell                        Blue Wolf
La GRC                             Ewok                                   
Backdoor (rappel)                  Psykaos
Bug dans microsoft exchange        Ashmeu
Débuté en linux                    Bond007
Slogan                             Hack Fr
Linux: Historique, installation,   Snowcrach
configuration, sécurisation.
Conclusion                         Snowcrach                              

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                                   Introduction


Ce Emag va être plus petit que d'habitude. La raison est que nos articles vont être plus gros et aussi que
le monde se tannent de lire des Emags de 15-20 articles minimum. Une fois de plus, vous verez quelques
petits articles qui sont déjà parrus dans d'autres mags. Ce n'est pas du RIP, seulement un petit rappel.

                                                               Snowcrach
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                                      IPv6


Introduction 

Pourquoi une version 6 du protocole IP ?

La version actuelle du protocole IP (v4) a un espace d'adressage à 32 bits et se révèle insuffisant à
mesure du développement de l'Internet. Chaque connexion de réseau sur l'Internet nécessite une adresse
IP distincte. Certains périphériques disposent de plusieurs connexions réseau, ce qui a pour conséquence
un épuisement rapide des adresses IP pouvant encore être attribuées. On estime que les adresses IP à
32bits (IPv4) peuvent satisfaire plus de 2 100 000 réseaux pour un espace total de 3 720 millions
d'hôtes. Cependant le plan d'adressage IP n'est pas très efficace, car il est souvent necessaire d'allouer
de nouveaux numéros de réseau pour la connexion de réseaux par le biais de périphériques de relais de
couche Réseau tels que les routeurs. En somme le problème découle des classes d'adresses. Si l'on doit
utiliser une adresse de réseau pour une cinquantaine d'hôte, il reste 205 IP non utilisées. L'utilisation des
sous-réseaux (Masques IP) remédie en partie à ce problème. Mais quoi qu'il en soit, à court therme, il y
aura une pénurie d'adresse IP. IPv6 à été développé par l'IETF, dans le but de palier à ce phénomène de
pénurie en codant les adresses IP non plus sur 32 bits, mais sur 128. 

Quels sont les avantages d'IPv6 face à son prédécesseur ?

* IPv6 ou IP " new generation " a pour objectif de permettre l'adressage d'au moins un milliard de
réseaux, soit quatre fois plus qu'IPv4.
* Il conserve le principe de numéros de réseaux et des numéros d'hôtes.
* L'adressage hiérarchique de IPv6 permet un routage plus efficace.
* L'adresse IPv6 peut contenir une adresse IPv4 . (on place les 32 bits de IPv4 dans les bits de poids
faibles et on ajoute un préfixe fixé de 96 bits >> 80 bits à 0 suivis de 16 bits à 0 ou 1)
* IPv6 est conçu pour interopérer avec les sytèmes IPv4 (transition douce entre les deux systèmes IP)
* IPv6 est prévus pour les sytèmes portables. Ainsi il n'y a pas à changer de configuration suivant
l'endroit ou l'on se trouve.
* IPv6 prend en charge le chiffrement au niveau de la couche Internet ( qu'est ce que le chiffrement ? ) et
prend mieux en charge le trafic en temps réel (garantie sur le délai maximal de transmission de
datagrammes sur le réseau).

I) IPv6 trames, en-tête de trames

Principe d 'adressage d'IPv6

* Comme nous utilisons 128 bits, avec le principe décimal à séparateur à point (ex : 194. 199.229.99),
nous devrions utiliser une chaîne de 16 nombres décimaux séparés par des points. On note que ce
principe devient encombrant. Les concepteurs ont donc décidés d'utiliser les nombres hexadécimaux
avec des séparateurs à deux points ( : ). 
Ex :
Prenons l'adresse suivante :
48A6 :0000 :0000 :0000 :0000 :0DA3 :003F :0001

Première possibilité 
En omettant les 0 de tête :
48A6 :0 :0 :0 :0 :DA3 :3F :1

Deuxième possibilité
Supression des 0 (ou compression d'adresse)
48A6 : :DA3 :3F :1

Lors de la réception de l'adresse IP, il faudra la décompresser. Le principe est assez simple. On
regroupe tout ce qui se trouve à gauche des doubles deux points, puis ce qui se trouve à droite. On fait la
somme des mots de 16 bits (sur notre exemple il y en a 4), on peut ainsi déterminer le nombre de mots à
compléter (8-4=4). Il suffit juste de compléter l'adresse avec des mots à 0. L'adresse décompressée
devient : 48A6 :0 :0 :0 :0 :DA3 :3F. Note : on ne peut utiliser le double deux points qu'une seule fois dans
l'adresse, sans quoi cette drenière devient ambiguë : 5400 : :45A1 : :23A6 (impossible à décompresser)

IPv6 a un adressage étendu et porte les limites de 32 bits à 128 bits, 16 octets, 4 fois plus long que IPv4.
Le nombre d'adresse possible est de 2128 ou 1040 quelque chose comme :
340,282,366,920,938,463,463,374,607,431,768,211,456 machines possibles. En estimant la terre à
511,263,971,197,990 mètres carrés, il est possible déterminer que le nombre d'adresse au mètre carré
sur toute la surface de la Terre est de 1025 au mètre carré soit: 665,570,793,348,866,943,898,599. Et
environs 150 millions d'adresses par personne sur la planète. 15% des adresses sont déjà
prédéterminées. Dans celle-ci sont incluses les adresses avec un préfixe pour les adresses de type IPv4,
IPX, ISO-NSAP, Multicast, Unicast et les adresses local. Le reste (85%) est réservé pour usage futur et
non déterminer. La façon de déterminer les adresses IPv6 qui on la compatibilité IPv4 est appelée forme
mixée: lorsqu'on est dans un environnement IPv4 et IPv6, il est possible d'utiliser une représentation
textuelle de la forme: "x:x:x:x:x:x:d.d.d.d", où les 'x' sont les valeurs hexadécimales des 6 premiers champs
de 16 bits et les 'd' sont les valeurs décimales des 4 derniers champs de 8 bits de l'adresse .
Exemple:
::137.194.168.93

Format de l'en-tête IPv6

L'en-tête IPv6 se compose principalement d'une partie fixe de 40 octets, dont 16 octets pour l'adresse
d'origine et 16 octets pour l'adresse de destination. En plus de cette en-tête de base, on trouve parfois
des extensions pour :

* le routage (en-tête Routing)
* la fragmentation (en-tête Fragment)
* les options de destination (en-tête Destination Options)
* la fin des en-têtes (en-tête No Next)
* les options pas à pas (en-tête Hop-by-Hop Options)
* l'identification (en-tête Authentification)
* la sécurité (en-tête Encrypted Security Payload)
Les en-tête d'extension fournissent des renseignements qui servent pour le traitement d'IPv6. elles
décrivent des couches de sous-protocole ou des informations spécifiques. Elles seront traités uniquement
par le destinataire, les routeurs ne feront que les retransmettre.

En-tête principale d'IPv6

Vous trouverez les valeurs possibles des champs et leur signification en annexe 1. Nous n'avons pas juger
bon de les présenter ici, pour le simple fait que nous faisons une présentation générale du protocole IPv6
et non pas une référence utilisateur.

* Version (4bits):permet de déterminer la version du protocole IP, valeur 4 (IPv4) ou 6 (IPv6)
* Priority (4bits): grâce à ce champ, l'utilisateur peut attribuer un niveau de priorité aux datagrammes qu'il
transmet. C'est l'équivalent du champ Precedence (préséance) qui existait dans IPv4. On note deux
intervalles dans les 16 valeurs (2^4) que ce champ peut prendre.
- Valeurs 0 à 7 : spécifient une priorité de trafic pour laquelle la source founit un contrôle de congestion.
- Valeurs 8 à 15 : spéciefient une priorité de trafic qui ne se replie pas en cas de congestion. Il s'agit par
exemple de paquets en temps réel envoyés à débit constant.
* Flow Label (24bits) : permet d'identifier les datagrammes transmis et qu l'on veut voir traité d'une facon
particulière. Les datagrammes dont le champ Flow Label contiennent la même valeur apartiennent au
même " flux ". On entant par Flux un type de données similiares (video, 
son ...).
* Playload Lenght (16bits) : contient la taille des données contenues dans l'en-tête. Il ne tient pas compte
de l'en-tête IPv6 de base, et ne peut exéder 64Ko. Pour le transport de datagrammes plu important,
IPv6 fait appel à l'option jumbotram. On peut l'associer au champ Total Length d'IPv4. 
* Next Header (8bits) : identifie le type d'en-tête qui fait immédiatement suite l'en-tête de IPv6 base.
Cette valeur peut identifier un type de protocole (TCP SGMP UDP .... ) 
(voir annexe1 pour plus d'informations). 
* Hop Limit (8bits) : compteur à décrémentation permettant de définir une durée de vie datagramme, en
routeur traversé. C'est l'équivalent du champ TTL d'IPv4, à la différence que l'on ne définit plus la duréé
de vie en seconde.
* Adresses Source/Destinataire (32bits chacun) : champs contenant les adresse au nouveau format IPv6.

En-tête de routage (Routing)

Il est possible grâce à l'IPv6 d'imposer aux datagrammes un passage par des routeurs
spécifiquesL'en-tête de routage sert à spécifier un certain nombre de routeurs à traverser. Cela répond à
l'option de routage disponible à la source que l'on trouvait déjà dans l'IPv4. On identifie l'en-tête de
routage via la valeur 43 dans le champ Next Header de l'en-tête IPv6 de base. 

l'en-tête de Routage

* Next Header (8bits) : identifie le type de l'en-tête qui suit immédiatement l'en-tête de routage. Il peut
s'agir d'une autre en-tête d'extension IPv6 ou d'un protocole de transport de couche superieure (ULP).
* Hdr Ext Len (8bits) : indique la longueur de l' en-tête de routage, c'est-à-dire le nombre d'unités de 8
octets sans compter le premier.
* Routing Type (8bits) : correspond à une variante particulière de l' en-tête de routage. Couramment, on
se sert de 0 qui désigne la spécification IPv6.
* Segment Left (8bits) : indique le nombre de segments de routage restant. Ce nombre correspond au
nuds qui figurent explicitement dans la liste des nuds intermédiaires qu'il reste à visiter avant d'atteidre
la destination.
* Type-Specific Data (variable) : son format est déterminé par la valeur du champ Routing Type. Cette
longueure est calculée de manière à ce que la longueur totale de l'en-tête de routage soit un multiple de
huit, soit en nombre d'octets.
En cas d'erreur sur le champ Routing Type, le nud traite le paquet en s'appuyant sur la valeur du champ
segment Left. Si cette dernière est à 0, le noeud ignore simplement l' en-tête de routage et passe à l'
en-tête suivante, identifié par le champ Next Header. Si la valeur de Segment Left est différente de 0, le
paquet est rejetté. Une information d'erreur de paramétrage est transmise. Pour répondre à la question de
début de chapitre : dans l' en-tête de rouage, on autorise certains nuds à ignorer le routage imposé.
Type-Spécific Data défini la liste des adresses de routeurs qui autorisent le datagramme à ignorer la route
fixée par le routeur.

En-tête de fragment
Voilà un point qui sépare bien le protocole IPv4 d'IPv6. Contrairement à ce qui se passait dans IPv4,
seuls les nuds d'origine peuvent fragmenter les paquets IPv6, les routeurs ne peuvent plus le faire. Ainsi,
le neoud d'origine IPv6 connaît la taille du MTU (Unité de Transport Maximale). IPv6 implémente la
découverte de MTU de chemin pour connaître le MTU jusqu'à la destination. Le nud d'origine IPv6
insère une entête Fragment dans les paquets dont l'entête dépasse la MTU. On identifie l'entête de
Fragment par la valeur 44 du champ Next Header dans l'entête précédente

Signification des champs d'en-tête de Fragment :
* Reserved : Champ réservé de 8 bits qui vaut zéro à l'initialisation de la transmission et dont on ignore la
valeur au moment de la réception.
* Fragment Offset : Entier de 13 bits non signé qui indique le décalage des données qui font suite à
l'en-tête (le nombre correspond à des unités de 8 octets). On mesure le décalage par rapport au début
de la partie fragmentable du paquet d'origine.
* Res : Champ réservé de 2 bits qui vaut zéro à l'initialisation de la transmission et dont on ignore la
valeur au moment de la réception.
* Flag M : La valeur de ce champ est 1 pour tous les fragments, sauf le dernier pour lequel la valeur est
0.
* Identification : Champ de 32 bits. Pour chaque paquet qu'il doit fragmenter, le nud d'origine génère un
numéro d'identification. Il faut que les identificateurs permettent de distinguer les différents paquets
fragmentés que ce nud d'origine a pu envoyer avec les mêmes adresses dans les champs Adresse
Source et Adresse de Destination.

En-tête d'option de destination (Destination Option)

Cet en-tête sert à transporter des informations optionnelles qui n'interessent que le nud de destination.
On identifie l'en-tête Destination Option avec la valeur 60 dans le champ Next Header de l'en-tête
précédent.

* Next Header (8bits) : identifie le type d'en-tête suivante.
* Hdr Ext Len (8bits) : contient la longueur de l'en-tête de routage exprimée en nombre d'unités de huit
octets (sans compter les huits premiers).
* Options (variable) : la longueur totale de l'en-tête Destination Options est un entier multiple de huit
(nombre d'octets). 
Les valeurs dans Option servent pour l'en-tête Destination Option et pour l'en-tête Hop-by-Hop. Ces
valeurs sont des codes qui utilisent le format TLV (Type Longueur Valeur). Le type occupe un octet, la
longueur aussi. Les identificateurs de Type sont conçus de manière que les deux bits les plus forts
spécifient un traitement, au cas ou le nuds IPv6 ne reconnaitrait pas le types.

En-tête de fin d'en-tête (No Next)

Si le champ Next Header de l'en-tête IPv6 contient la valeur 59, cela signifie qu'il n'y a aucune en-tête qui
suit. Si Next Header est à 59, et que Playload Length indique la présence d'octets après la fin du champ
Next Header, ces derniers ne seront ignorés par le nud et transmis sans modification.

En-tête d'options pas à pas (Hop-by-Hop)

Cet en-tête contient des informations utiles qui intéressent tous les nuds intermédiaires que rencontre le
paquet pendant son acheminement. On spécifie l' en-tête Hop-by-Hop Options avec la valeur 0 dans le
champ Next Header précédent.

* Next Header (8bits) : identifie le type de l' en-tête qui suit.
* Hdr Ext Len (8bits) : la longueur de l' en-tête est mesurée en unités de huit octets, sans prendre compte
des huits premiers.
* Options (variable) : la longueur totale du champ Hop-by-Hop Options doit être un multiple de huit. Le
champ Options contient des valeurs codées au format TLV (type longueur valeur).

Option jumbo Playload

Cette option est utile pour les paquets dont le poids excède 65535 octets. Le champ Jumbo Payload
Length occupe 32 bits et représente la longueur du paquet exprimée en octet , sans tenir compte de
l'en-tête IPv6 , mais en tenant compte de l'en-tête Hop-by-Hop Options. Cette longueur devrait être
supérieure à 65535.Un paquet dont le champ Jumbo Paylod Length contient une valeur inférieure ou
égale à 65535 entraîne l'envoi d'un message ICMP Problème de paramètre , Code 0. Ce message
pointera le champ Option Type.

En-tête d'identification (Authentication)

Cet en-tête permet d'assurer l'intégrité et l'identification des datagrammes IP. L'en-tête sécurise les
datagrammes en y ajoutant des données d'autentification. Ces données reposent sur tous les champs dont
le contenu ne va pas changer au cours du transit. Pour spécifier l'en-tête d'identification , il faut affecter la
valeur 51 au champ Next Header de l'en-tête qui le précède. Grâce à l'en-tête d'identification , on peut
se rendre compte d'éventuelles altérations du paquet.

Signification de l'en-tête d'identification :

* Next Header : Sélecteur 8 bits qui identifie le type de l'en-tête suivant.
* Length : Champ de 8 bits qui spécifie la longueur du champ Authentification Data en nombre de mots
longs(32 bits). La valeur minimum de Length est 0 et convient à des cas particuliers pour lesquels aucun
algorithme d'identification n'est nécessaire.
* Reserved : Champ de 16 bits réservé pour un usage ultérieur. L'expéditeur lui affecte au départ des
valeurs nulles. Mais la valeur finale , que le destinataire ignore toujours , sera prise en compte dans le
calcul de l'identificateur.
* Security Parameters Index(SPI) : Valeur pseudo-aléatoire de 32 bits qui identifie la combinaison de
sécurité du datagramme. Une valeur de 0 indique l'absence de sécurisation. Les valeurs de SPI
comprises entre 1 et 255 sont réservées pour usage ultérieure par l'IANA . En général , l'IANA n'utilise
pas les valeurs réservées , à moins qu'elle soit explicitement spécifiée par RFC.
* Authentification Data : Champ à longueur variable , mais toujours un multiple de 32 bits. Ce champ
contient les données d'identification correspondant au paquet.

En-tête de sécurité ou Encrypted Security Payload

Cette en-tête permet d'assurer l'intégrité et la confidentialité des datagrammes IP.Mais l'ESP(Encrypted
Security Payload) n'offre aucune garantie de protection ou de non répudiation par les systèmes d'analyse
de trafic n'empêche ni la répudiation ni l'analyse de trafic. Avec certains algorithmes , l'en-tête
d'identification (Authentication) permet d'assurer la non répudiation.

L'en-tête ESP ajouté à l'en-tête Authentication permet d'affiner l'identification. ESP chiffre les données et
les place dans la partie de l'en-tête réservée aux données. ESP présente 2 modes de fonctionnement :

* le mode tunnel
Dans ce mode on place le datagramme de départ dans la partie chiffrée de l'en-tête ESP , puis on
incorpore la totalité de l'en-tête dans un nouveau datagramme dépourvu d'en-tête de sécurité. Les
en-têtes IP du datagramme non sécurisé permettent l'acheminement de datagramme chiffré jusqu'à sa
destination.
* le mode transport
Dans ce mode on insère l'en-tête ESP dans le datagramme qui précède immédiatement l'en-tête
Transport Layer Protocol. Ce mode ne surcharge pas la bande passante puisque l'on introduit ni en-têtes
chiffrées ni options.

Pour spécifier l'en-tête ESP , il faut affecter la valeur 50 au champ Next Header de l'en-tête qui le
précède. L'en-tête ESP se compose d'une en-tête non chiffrée suivi de données chiffrées. Les données
chiffrées recouvrent les champs protégés de l'en-tête ESP et les données elles-mêmes

IPv6 ... une révolution...

* Sources : site Internet.
Les informations suivantes proviennent de recherches que nous avons effectuées sur Internet. Elles nous
semblent d'un intérêt important pour bien comprendre le pourquoi et le comment d'IPv6, ainsi que les
changements à venir pour l'Internet. 

Les nouveaux besoins
Outre les problèmes soulevés en introduction, s'ajoutent de nouveaux besoins :

La mobilité des individus dans leur activité professionnelle et, par conséquent, de leurs outils de travail,
est à l'origine d'un nouveau type de besoins pour lesquels la téléphonie cellulaire ou les ordinateurs
portables sont désormais devenus incontournables. Ces technologies nécessitent un protocole adapté à la
mobilité, permettant une autoconfiguration du matériel et son utilisation à un coût le plus bas possible.
Mais surtout, la nature même de la mobilité du matériel rend obligatoires et nécessaires les procédures
d'authentification des usagers et de confidentialité des informations. 

Un autre marché émergeant non négligeable est celui des divertissements proposés par les chaînes de
télévision avec de nouveaux services tels que le pay per view ou la télévision interactive. Le
rapprochement entre la télévision haute-définition et l'informatique marqué par la récente explosion du
multimédia nécessite des protocoles capables de supporter de manière efficace ces évolutions à un
moindre coût. 

Il est donc du ressort de l'IETF d'imposer IPv6 dans le cadre d'une "immense infrastructure informatique
mondiale et interopérable créée dans l'espoir d'utiliser des protocoles ouverts", à l'opposée d'un "monde
de réseaux disjoints recourant à des protocoles contrôlés par des fournisseurs individuels". En vue
d'aboutir à cet objectif, l'IETF considère que le déploiement stratégique d'IPv6 doit se réaliser de la
manière la plus flexible possible, à savoir grâce à une totale compatibilité avec IPv4. La transition d'IPv4
à IPv6 est un enjeu pour l'IETF. 

Les nouveautés

En plus de la longueur d'adressage (vu précédement), IPv6 a la capacité de configurer automatiquement
un hôte TCP/IP avec une adresse IP. En simplifiant la configuration et la gestion d'adresses, cette
fonction plug and play aura un effet spectaculaire sur le coût des réseaux TCP/IP. Certains estiment que
cette réduction de coût suffit à couvrir les frais de passage en v6 en douze mois. La configuration
automatique signifie qu'un hôte peut obtenir immédiatement l'information nécessaire pour une connexion
Internet sans intervention humaine et sans saisir les adresses. Si un routeur ou un serveur d'adresses est
disponible, l'hôte détecte l'adresse du lien local qui n'est valable que pour le sous-réseau sur lequel il est
installé. Il ajoute ensuite un jeton unique pour compléter l'adresse IPv6 et envoie un message pour vérifier
s'il existe une duplication de l'adresse. S'il n'existe pas de double de cette adresse, le routeur ou le
serveur d'adresses est mis à jours avec cette nouvelle adresse.

IPv6 assure un meilleur transport des données multimédia, comme la vidéo (vidéoconférence) et l'audio.
Les premiers systèmes opérationnels (CU-SEEME, RealAudio...) mettent en avant la nécessité de ces
améliorations. Une des principales difficultés est que ces applications ont consommatrices de bandes
passante. Il faut donc réserver une largeur de bande suffisante et en même temps gérer le réseau et son
encombrement. IPv4 est inadapté à ce type de liaisons. Les problèmes de synchronisation sont
maintenant résolus: Une étiquette spéciale (Flow Label) permet au paquet entre deux adresses
spécifiques de recevoir une gestion particulière par le RSVP (Ressource Reservation Protocol) pour
assurer leur acheminement. Le Flow Label est dans l'entête principale et de longueur fixe. 

Les entreprises échangeant des informations à travers Internet ne peuvent admettre le piratage. IPv6
intègre la sécurité au plus bas niveau: dans le noyau (IP-Sec). IP-Sec permet l'authentification par l'entête
d'authentification (AH: Authentification Header) et le codage des données (ESP: Encapsulation Security
Payload). L'AH protège les réseaux contre les risques du routage de source et des attaques contre l'hôte,
tandis que l'ESP assure la confidentialité du contenu. Ces automatismes sont bien entendu transparents
pour les applications. Les fonctions IP-Sec sont basées sur signatures numériques. Les spécifications
d'IP-Sec ont défini des paramètres tels que les algorithmes d'authentification et de codage, ainsi que la clé
de distribution. Par défaut, l'authentification est basée sur MD5 et le codage sur le standard DES (Data
Encryption Standard). Le système est toutefois ouvert à d'autres choix techniques (selon les pays, un
certain niveau de codage est autorisé, ou pas). 

Les possibilités d'extention

Dans IPv6, les options sont rangées dans des en-têtes supplémentaires situés entre l'en-tête IPv6 et
l'en-tête du paquet de transport (T-PDU, Transport Protocol Data Unit ou Unités de données du service
de transport). La plupart des options dans les en-têtes IPv6 ne sont ni examinées, ni traitées par les
routeurs intermédiaires. Contrairement à IPv4, les options IPv6 peuvent être de longueur arbitraire
(multiple de 8 octets), il n'existe pas de taille limite. Une des caractéristiques d'IPv6 est la possibilité de
coder, dans les options, l'action qu'un routeur ou une station de travail doit réaliser si l'option est
inconnue, ce qui permet l'ajout de fonctionnalités supplémentaires dans un réseau déjà opérationnel avec
un minimum de perturbations. Lorsqu'il y a plus d'un en-tête supplémentaire utilisé dans le même paquet,
les en-têtes doivent apparaître dans l'ordre suivant: 

Le routage dans les réseaux IPv4/IPv6 : le tunnelage 

Les routeurs qui utilisent à la fois IPv4 et IPv6 peuvent être administrés à peu près de la même façon que
ceux qui sont administrés dans les réseaux utilisant uniquement IPv4. Les versions IPv6 des protocoles
de routages en vogue, tels que OSPF (Open Shortest Path) ou RIP (Routing Information Protocol) sont
souvent encore en cours de développement. Dans de nombreux cas, les administrateurs choisiront de
conserver la topologie logique IPv6 séparée du réseau IPv4, même si les deux partagent la même
infrastructure physique. Cela permet une administration séparée. Dans d'autres cas, il peut être
avantageux d'aligner les deux architectures en utilisant les mêmes limites de domaines, de région et de
sous-réseaux. Les deux approchent ont leurs avantages. Une architecture IPv6 séparée peut être utilisée
pour abolir le système d'adressage IPv4 inefficace et chaotique dont souffrent actuellement beaucoup
d'organisations. Une architecture IPv6 indépendante présente l'opportunité de construire un plan
d'adressage propre et hiérarchique qui facilitera grandement les connexions à un ou plusieurs ISPs. Cela
permet un numérotage efficace, un groupement de routes, et d'autres subtilités relatives à un routage
évolué. Dans la plupart des organisations, le déploiement d'IPv6 est en progression, mais il y a une
grande probabilité pour que tous les hôtes IPv6 n'aient pas une connectivité directe entre eux par des
routeurs IPv6. Souvent, des îlots avec une topologie IPv6 seront entourés par un océan d'IPv4.
Heureusement, les concepteurs d'IPv6 ont mis en oeuvre un mécanisme de transition permettant aux
hôtes IPv6 de communiquer par l'intermédiaire de réseaux IPv4. Les fondements de cette technique
reposent dans le transport d'IPv6 grâce au tunnelage IPv4, qui encapsule des paquets IPv6 dans des
paquets IPv4. 

Le transport IPv6 grâce au tunnelage IPv4.

Le tunnelage permet aux implémentations IPv6 déjà en place de tirer bénéfice des infrastructures IPv4
existantes sans entraîner aucun changement pour les composants IPv4. Un routeur ou un hôte avec une
pile duale à la 'limite' de la topologie IPv6 ajoute simplement une entête IPv4 à chaque paquet IPv6 et
l'expédie comme du trafic IPv4 à travers les liens existants. Les routeurs IPv4 font suivre ce trafic sans
avoir la connaissance de l'utilisation d'IPv6. A l'autre bout du tunnel, un autre routeur ou hôte avec une
pile duale décapsule le paquet IPv6 et le dirige vers sa destination finale en utilisant les protocoles IPv6
standards. Pour satisfaire les différents besoins administratifs, les mécanismes de transition IPv6 incluent
deux types de tunnelage : automatique et configuré. Pour construire des tunnels configurés, les
administrateurs définissent manuellement des correspondances d'adresses IPv6-IPv4 à chaque bout du
tunnel. De chaque côté du tunnel (c'est à dire, à l'extérieur du tunnel), le trafic est transmis avec les
adresses 128 bits complètes. Au point d'entrée d'un tunnel, une entrée de la table de routage est définie
manuellement pour dicter quelle adresses IPv4 est utilisée pour traverser le tunnel. Ceci nécessite une
certaine masse d'administration manuelle aux entrées et aux sorties des tunnels, mais le trafic est routé à
travers la topologie IPv4 dynamiquement, sans avoir la connaissance des routeurs IPv4. Les adresses
128 bits ne doivent en aucune façon s'aligner sur les adresses 32 bits. 

Les tunnels automatiques utilisent les adresses IPv6 compatibles IPv4 qui sont en fait des adresses
IPv4/IPv6 hybrides. Les adresses compatibles sont créées en ajoutant en tête des adresses 32 bits des
zéros pour arriver à une taille de 128 bits. Quand le trafic est transmis avec des adresses compatibles,
l'équipement présent au point d'entrée du tunnel peut automatiquement encapsuler le trafic en
convertissant simplement l'adresse IPv6 compatible IPv4 de 128 bits en une adresse IPv4 de 32 bits. A
l'autre bout du tunnel, l'entête IPv4 est retirée pour reformer l'adresse IPv6 originale. Le tunnelage
automatique permet aux hôtes IPv6 d'exploiter dynamiquement les réseaux IPv4 mais il nécessite
l'utilisation d'adresses IPv6 compatibles IPv4, ce qui supprime les bénéfices d'un espace d'adressage a
128 bits. 

Les noeuds IPv6 qui utilisent ces adresses compatibles IPv4 ne peuvent donc pas tirer d'avantage de
l'espace d'adressage étendu, mais ils peuvent exploiter les autres améliorations fournies par IPv6, telles
que les labels de flux, l'authentification, l'encryptage, le multicast et le anycast. Une fois qu'un noeud a
migre vers IPv6 avec un adressage compatible IPv4, la porte reste ouverte pour passer avec facilite au
système d'adressage IPv6 (avec heureusement l'aide des services d'auto-configuration IPv6).
L'adressage IPv6 compatible IPv4 signifie que l'administrateur peut ajouter des noeuds IPv6 tout en
conservant son architecture de sous-réseaux et d'adressage initiale. Le tunnelage automatique est
disponible lorsqu'on en a besoin, mais il n'est pas nécessaire dans les cas où des routeurs de rattachement
majeurs sont tous mis à jour en une seule étape pour inclure la pile IPv6. C'est quelque chose qui peut
être réalisé rapidement et efficacement quand les routeurs des réseaux de rattachement supportent une
configuration et des capacités de mise à jour à distance (par exemple, les routeurs Bay Networks Node
and Access Node). 

On peut reprocher aux membres de l'IETF de consacrer autant d'efforts dans l'élaboration de la transition
que dans les spécifications de base de protocole IPv6. Que cela soit vrai ou non, la combinaison des
tunnels, des adresses compatibles et des noeuds avec des piles duales assure que les administrateurs de
réseaux vont avoir une énorme marge de flexibilité et d'interoperations lorsqu'ils vont déployer IPv6. Les
services de transitions permettent aux organisations dont l'activité dépend des réseaux de tirer un gros
avantage des riches caractéristiques techniques d'IPv6. 

Au fur et à mesure de la migration de l'industrie vers IPv6, les serveurs DHCP et DNS sont modifiés
pour pouvoir traiter des adresses 128 bits, mais en terme de fonctionnalités, le changement est tout petit.
C'est généralement vrai pour les protocoles de routage intérieurs et extérieurs. Le protocole de routage
OSPF, synonyme de grandes performances avec IPv4, le standard de base, est le protocole IGP
(Interior Gateway Protocol) recommandé par l'IETF pour IPv6. OSPF est en cours de modification afin
de supporter totalement IPv6, permettant aux routeurs d'être adressés avec 128 bits. Les enregistrements
de liens de 32 bits de la version actuelle d'OSPF seront remplacés par des enregistrements de 128 bits.
En général, les bases de données d'état de liens OSPF, version IPv6, pour les routeurs de rattachement
tourneront en parallèle avec les bases de données des topologies IPv4. Dans un sens, les deux versions
d'OSPF vont opérer séparément, tout comme des moteurs de routage pour NetWare, DECnet,
AppleTalk... coexistent dans le même routeur sans trop d'interaction. Etant donné la nature limitée de la
mise à jour d'OSPF pour IPv6, les personnes capables d'administrer et d'exploiter OSPF pour IPv4
n'auront aucun problème pour s'adapter à la nouvelle version. On peut noter qu'il existe également une
version mise à jour pour IPv6 de RIP, généralement connue comme RIPng. 

Comme pour les protocoles de routage intérieurs, des travaux sont en cours pour créer des versions
compatibles IPv6 pour les protocoles de routage extérieurs, EGP (Exterior Gateways Protocols) qui sont
utilisés par les routeurs pour établir des liens d'accessibilités à travers le réseau de rattachement à Internet
entre de grandes entreprises, des fournisseurs d'accès et d'autres systèmes autonomes. 

Les routeurs de rattachement actuels utilisent BGP (Border Gateway Protocol) pour distribuer des
informations de routage utilisant CIDR à travers Internet. BGP est bien connu par les entreprises et les
providers et bénéficie d'une large installation à travers le réseau. En conséquence, BGP part dans une
position de favori pour l'utilisation avec IPv6. Actuellement, des travaux d'extension de BGP sont en
cours ce qui va permettre son utilisation pour échanger des informations d'accessibilité basées sur la
nouvelle architecture de l'espace d'adressage IPv6. 

QoS

Une qualité de service est offerte avec IPv6 pour pouvoir supporter les applications multimédia ou en
temps réels. Les champs "Flow Label" et "Priority" dans l'entête servirons comme indicateur à l'hôte pour
identifier les paquets nécessitant une manutention spéciale des routeurs compatible V6. Les routeurs
pourront ainsi procéder à un service en temps réel ou de qualité soutenue. Le champ de priorité utilisé
par l'émetteur pour indiquer l'ordre de traitement des paquets. La valeur de ce champ varie de 0 à 15. 0
à 7 pour la normalité et 8 à 15 pour le temps réel (audio vidéo). La qualité de service avec réservation de
bande passante sur l'internet est toujour en cours de développement et devrais être adopté sous peu
comme un RFC.

Multicast/Anycast/Unicast

Multicast étais déjà utilisé dans IPv4. C'est la classe D de IP. C'est un identificateur pour un groupe
d'interfaces. Une interface peut être associée à plusieurs groupes multicast. Il existe des groupes
permanents et des groupes temporaires de multicast.Anycast est un nouveau type d'adressage. Il identifie
qu'un noeud, parmi un groupe de noeud, doit recevoir l'information. L'interface de destination doit
spécifiquement être configuré pour savoir qu'elle est Anycast. C'est utiliser pour contrôler le ou les
chemins à suivre. Unicast est un genre d'adresse prédéterminé ou pré-typé. La partie haute de l'adresse
est fixée tandis que la partie basse peut varier. Ex: Comme les adresses de IPv4 dans IPv6, les adresses
IPv4 compatible IPv6, les adresses hiérarchique IPX, les adresses ISO-NSAP, l'adresse local
"loopback" et les adresses de lien PPP, les adresses qui proviennent de l'autoconfiguration et d'autres
adresses qui pourront être déterminées plus tard.

6BONE

Le 6Bone est le réseau virtuel mit en place pour assister le développement graduel de l'Internet sur des
équipements de catégorie IPv4 pour supporter le routage des trames IPv6. Étan donné que ces fonctions
ne sont pas encore intégrées dans les aiguilleurs, le réseau est composé d'îlot reliés par des liens point à
point appellé tunnel. Ces tunnels peuvent supporter directement IPv6. Il est prévu après un certain temps
que le 6Bone disparaisse, puisqu'il a été mis en place pour permettre aux aiguilleurs d'être mis en
production et tester la transmission des trames IPv6 en mode native. Le 6Bone sera remplacé de façon
transparent par les ISP (Internet Service Providers) et autres réseaux public Internet.

Conclusion

Lors de sa conception, IPv6 a été pensé comme le successeur d'IPv4. L'énorme parc de réseaux en
IPv4 sera certainement un frein au déploiement de la version 6, mais en aucun cas un problème: plusieurs
solutions transitoires sont envisageables. Chacun peut passer en douceur vers cet IP new generation, et
profiter des avantages qu'il apporte. L'espoir de faire passer de la vidéo ou des applications critiques sur
Internet ou autres grands réseaux n'est pas vain,il suffit d'attendre encore quelques temps... 

                                                         The FrHack Crew
                                                                     Xi9
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


                                   Hack Novell


Avant de commencer, il est peut etre bon de faire des petit rapel sur ce qu est un reseau novell.

Un reseau novell est composé d'un "serveur" dédier, de poste "client", et d'un cable qui les relis.

Le serveur dédié est bien entendu la partie sur la quelle est installé le systeme d exploitation NOVELL.
Le poste client seras un ordinateur muni d une carte réseau, conecté au cable.

Le serveur est un ordinateur sur le quel personne travaille il est rangé dans des pieces prevu a cet effet.
Salle climatisé ,ventillée ,neutre electriquement ... ca c'est la théorie en pratique j'en ai même vu dans les
WC d'une entreprise et ca marche. Pour le reconaitre facilement ,les ecrans sont très spécifique, pas de
souries, probablement un systeme de sauvegarde sur bande en facade de la machine.

Le poste "client" c est un pc bannal avec une carte reseau,les protocoles reseau installer .

Le cable est en genérale de deux types different 

-Cable coaxial(petit et noir) : identique au cable des antennes satelite de votre télévision. Il est composé :
-D'une partie centrale en métale conducteur (Ame).
-D'un isolan au tour de l'Ame.
-D'un tressage en acier au tour de l isolan (blindage).
-D'un isolant qui enferme le tout.
-Cable torsadé (petit est gris): Il est composé de 8 petit cable electrique(comme le fil du téléphone):
-Entouré d une feuille en metal (blindage). -Entouré d un isolant qui enferme le tout.

Le systeme d'exploitation novell tourne au tour d un arborescence semblable a celle d un disque dur :

il y a :

-la racine [ROOT]---|
dans la quelle on déclare des objets |---NDS---|
( soit un PAYS soit une NDS) | |Utilisateur
Les utilisateur et autre fonction du réseau |imprimante
sont déclares comme objet dans la nds . |impression
|-serveur-
|impression
|sauvegarde
|messagerie

Un peu de vocabulaire :

login : s authentifier au près du serveur et hériter les droit qui me sont attribués.
Admin = administrateur, c est la personne ayant le plus de droit sur le réseau :il peut TOUS faire.
file d impression : c est une sorte de spooler d imprimante qui utilise en fait de l espace disque sur le
serveur.. donc quant on imprime sur novell, c est dans un fichier sur le serveur.
serveur d impression : il est chargé de gérer les file d impressions.
volume : le disque dur novell est divisé en volume.. équivalant des partition sous dos.

Voila pour les revisons .

Je consider a ce niveau que vous avez un pc équipé d'une carte reseau connecté au cable réseau... ou d
un modem essayer de trouver un pc dans une piece fermée, et debranchez le buzzer du PC si possible
pour eviter d ameuter tous le cartier a chaque erreur reseau

Donc première chose a faire pour hacker un réseau novell c est d etre loguer au serveur.

Avec un pc connecté au reseau :

-sous win95/98 aller dans "voisinage réseau", trouver le serveur visé ( il peut y avoir plusieurs serveur sur
un même réseau) click droit sur le serveur puis "s attacher" ....

-sous win3.11/dos .. il faut taper a l invite ms-dos "f:login"

Avec un pc et un modem :

Ici c est plus dur .. en effet il va faloir trouver le N° de tel direct du serveur novell : Pour ca le mieux c est
le minitel .. la plus part des entreprise qui ont un serveur novell sont suffisament grosse pour avoir des
lignes numeris et donc des n° de tel qui ce suivent .... Donc vous prenez le tel du standard et essayer tous
les N° jusqu a avoir le porteuse ( faire gaffe que ca soit pas un fax !!!).

Ensuite sur son pc installer le client pour les reseau Novell disponible sur www.novell.com

et definir un connection d acces reseau a distance( comme votre connection internet) vers le n° que vous
avez trouvez .. si vous avez le bon N° on vous demande alors le login et on passe a la suite :)

un nom et mot de passe vas vous etre demandé
Comme il y a peu de chance que l administrateur vous donne son mot de passe voici quelques truck pour
avoir un accès minimal au serveur :

1 A l installation un utilisateurs Guest est créé en général les Admin. lefface .. mais faut tjrs essayer ..

2 Une méthode plus longue mais très efficace .. 

premier bug de novell il est possible de ce loguer en tant que serveur dimpression .. le problème va être
de trouver son nom ... voici quelque suggestion:

Guttember c est l inventeur de l imprimerie 
pserver c est le nom du fichier qui gère les impression sous novell
serveur_impr et autre variante 
hp brother cannon ... ou tous autre marque d imprimante pressente sur le réseau comptabilité, secrétariat
. ou tous autres service de l 'entreprise
Une fois loguer, vous allez pouvoir obtenir la liste détaillé des composants du réseau car sous novell on a
le droit de tous voir(pas de modifier de voir!!!)

pour cela il faut ce trouver dans le répertoire public du volume Système du serveur :

-sous win95/98 .. trouvé dans voisinage réseau le serveur visé cliquez 2 fois dessus ... 
puis deux fois sur le dossier public puis cherchez : nwadmin.exe. Sur certaine vertion de win95(la A et la
B), une erreur de DLL apparait, pas de Pb faite ok et tous marcheras quant meme -sous win3.11/dos
a l'invite dos taper : MAP s:=sys:\public
puis s:syscon 
A ce moment vous avez l utilitaire d admisitration a l ecrant et la Hooo joie vous pouvez parcouri l
arboresence du reseau.

Les parties importantes a noter sont : les nom de login (souvent les prenoms, ou les services de l
entreprise) de ce a qui vous desirer usurper l identité.

une fois les noms trouvés et notés (respectez les majuscule/minuscules). vous redemarez l ordinateur (
pour eviter les conflit de MAP) vous recomencer l opperation j usquace qu il vous demande votre nom ...
et la tapez le nom noté ....en ce qui concerne le mot de passe ... encore quelque sugestion :

le prenom bien sur
le nom noté au debut
le nom de famille 
le nom du service ou elle travaille
les noms visible dans son bureau....marque du telephone, poster sur le mur,marque du pc, faite jouer
votre imagination koi ....

Si ca marche pas sur internet vous trouverez tous un tas de prog pour trouver les pass de novell Mais
comme dirait certain ... c est lam de faire ca !!!.



                                                         The FrHack Crew
                                                               Blue Wolf
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                                     La GRC


J'ai malheureusement remarquer plusieurs fois que presque qu'aucun article parlant de la grc n'avais paru
a se jour bien des artcle traitant de la dst ont été écris mais aucun parler du manifique corps policier que
le canada possede.Cette article n'a pas pour but de dégrader la grc mais plutot d'énoncer qui je l'espère
sont en totalité véridique.Je ne peux pas a mon grand regret affirmer avec certitude que tous se que
j'énoncerai est vrai, mais je peux affirmer qu'il me vienne de source sur qui tienne en très grandes partis a
garder leurs anonymat.Mainteannt que mes remerciements sont fini je passe au contenu principale.

Quelque base sur la grc:
-J'aimerais tous d'abord précisé qu'il ne sont pas du tous puissant malgré tous se que vous pouvez avoir
entendu il ne possède pas grand pouvoir et ne sont pas très actif.
-Le département s'occupant du piratage informatique se nomme "Section des crime informatiques" et ne
compte que quelque personne pas plus de 5 le nom du responsable de se district se nomme Michel
Beaudoin il forme présentement les nouvelles personnes qui se joins a cette section
-Il sont pour la plupart des nuls en informatique et utilisent les autres pour arriver a leurs fins.
-Il gagne au minimum 60000$ par année

Personne les plus recherchés:
Désolé pour vous si vous souhaitiez vous faire arreter un jours vous ne devez pas seulement faire du
piratage de réseau et de site car vous n'etes pas assez lucratif pour la peine qu'il se donnerais a vous
attraper. J'ai pu savoir que la grc ne s intéresse pas le moins du monde au flooder,nukeurs ou ceux qui
joue avec des trojans meme si il le font en grande quantité. Il s'intéresse en particulier à ceux qui utilise
des accompte piraté ou a ceux qui vende des cd copier car il sont très facile a repérer et son assez
lucratif pour l'effort qu'il auront mis a fiare leur investigations.Je tiens a nuancer se que j'ai énoncer plus
haut il ne s'intéresse souvent pas au vrai hackers mais mais je n'ai pas dit jamais il s'intéresse
particulièrement a ceux qui ont une grande gueule et qui epuvent fiare bouger les choses.

Manière dont il procede:
-Pour les sites de hacks qui commencent a être trop fréquentés a leur gout il envoie un mail leurs disant
d'arreté sous peine de recevoir une amende et malheureusement a 90% des cas les personnes stop leur
activité.
-Pour les accomptes piratées il utilisent le talent des autres laisser moi vous expliquer.Tous d'abors les
providers identifie un account qui est suceptible d'être piraté(ex:quand y a 1024hres de faite apres
10jours ses pas normal)il ne ferme pas l'account tous de suite il place un "pop up" sur cette account se
qui fais que dès que cette account est online ils le savent alors quand quelqun se connect sur cette
account ils prennent le # de modem par la suite il appelle un tech de chez bell pour savoir quelle est le #
de téléphone qui est en comunication avec le modem (exemple) 238 # de ligne 349876-122 un coup qu
il possede les informations voulu il envoie un fax a la grc avec avec un copie de la comfirmation du tech
de bell pi ses la grc qui s'en va ramasser l'Argent le provider ne touche pas une cent meme si ses eux qui
se sont fiate crosser pi bell non plus. 
-Pour les vendeur de cd copiés il achete des cd a plusieurs reprises accumule des preuves sur toi puis te
bust par la suite
-Pour les hackers il ne peuvent régulièrement pas faire grand choses par manque de preuve alors il essaie
de te faire stooler du monde,il te demande ta collaboration car il sont nul ou te menace.De plus il peuvent
dire au personne de ton entourage que tu est un pirate(exemple:ton boss,famille)
-Pour les bust il cogne a votre porte si vous n'etes pas la il reviennent une autre fois quand vous ouvrez a
la porte il vous montre leur mandat rentre prenne votre matériel informatique et reparte d'apres se que j'ai
su se sopérations se sont toujours passé dans le calme.Avec le matériel buster la plupart du temps il le
revendent moi je dirais quasiment que ses du recelle mais tk
-La grc agis toujours sur les limites de la lois ils la connaissent la respecte mais ave s'en servir a leurs
avantages.
-Leur principale moyens de proceder est la peur et les menaces mais ne craigner pas stooler personne pi
rester poli mais affirmer vous si y aurais de quoi contre vous y vous le dirais de toute maniere alors fermer
vos yeules pi rester solidaire faites pas vos stool faut quand meme qu'ont se tienne. Le coût des amendes:
-Le gravage de cd est une des amendes les plus coûteuses quelqun m'a affirmer qu'il avais déja vu des
amendes grimper jusqu'a 30 000$ et je ne connais pas la limites des amendes pour le gravage 
-Les amendes pour les accounts piratés sont généralement des les alentours de 500$
-Et ceux pour le hack varie en moyenne entre 400$ et 5000$ Et toute se spetite amende ssont suivie d'un
dossier

Les preuves:
Bon pour les preuves la grc est très limités car les log de firewall ne sont plus considérer comme des
preuves mais peuvent servir pour en appuyer une par contre. Une des meilleur preuves que possèdes la
grc sont les stools plusieurs personnes ont été arreté car il ont été stooler ses dommage que nous
possedons ci peu de solidarité mais bon.Une autre excellente preuve est si l'admin réseau est devant son
screen pendant que vous hacker le réseau.Mais coté preuve c'est pas mal tous.

Conseil:
Voici quelques conseille pour ne pas vous fiare prendre:
1. Ne pas hacker
2. Ne pas aller crier a tous le monde les hack que vous avez faits
3. Réveler son identité le moins possible malgré que si la grc tiens a vous pogner il finirons par réussir se
n'est qu'une question de temps
Mot de la fin:
J'aimerias envoyer chier les suckers de la grc par pur plaisir mais sa déoule si y lise cette article pi qu'il
aime pas mon opinion qui se gene pas pour me mailer 

                                                         The FrHack Crew
                                                                   Ewoks
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                               Les backdoors (rappel)


certaines personnes on tendance a croire que les backdoor sont lame. Mais si l'on regarde de plus pret
leur utilisation et leur conception on peut facilement remarquer qu'elles sont Generalement Tres bien
élaborées et celui qui les a concue etais doué. voici les bases a connaitre au sujet des backdoor. 

1- La structure.

La structure d'une backdoor est directement reliée au type de OS sur laquelle elle est concue et au type
de OS auquel elle est destinée. En premier lieu, si elle est concue pour Win vous devez impérativement
inclure les options ci-dessou :

1- Control a distance des protocoles
2- Key logger
3- ouverture de port au besoin
2- Type de backdoor

Depuis que je suis sur le net je n'ai pu voir qu'une Quantitée tres infimes de backdoor. Les diférent type
Que jai pu voir etaient placés dans :

1- mIRC
2- Taupe (faite manuellement)
3- OCX
4- Soft habituel
5- Javascript
3- Forme d'apparition

1- Mirc
Elle apratait souvent sous une forme de commande CTCP (ping,port1,$) mais elle peut aussi aparaitre
sous forme de "hidden Query". Les backdoor mIRC sont Tres dangereuse car Elle vous donne access
aux comande de mIRC et bien qu'aucune commande n'afecte la supression des dossier il y aura toujour
le /run.

2- Taupe (Faite manuellement)
Ce type est tres simple, quelqun prend Vb et cree un petit programe qui dit : "salut" en clickant sur un
bouton mais aussi qui ouvre un ftp leech full acces sur le port 233523453245 admeton.

3- OCX
Cette nouvelle forme de composante devient de plus en plus dangereuse car elle s'insttalle et se
download automatiquement quand le browser internet est mal configurer. le danger reside dans le fait que
le OCX s'execute automatiquement et peut contenir des choses malsaintes :P.

4- Soft habituel
Cette backdoor est très peu courante puisque les lois sont bien établies sur les copyright mais certains
programmeur laisse la loi de coté et injecte literallement des Backdoor dans leur soft. Ce qui veut dire
que vous pouvez très bien acheter un soft dans un magasin et que le soft ai un keyloger intégré qui envoit
ces data a un site. Il y a aussi les soft codé par des hacker comme Backorifice qui lui, envoit tout ce que
vous fesez avec BO sur netninja.com (rumeur).

5- Javascript
Celle-ci aussi est d'une nouvelle génération car le java commence tout juste a être plus utiliser dans les
application de tout les jours. Desolé je n'ai pas encore vu de backdoor en java mais je sais qu'il exploite
les bug des navigateur comme la limite de caractere dans Ie4.

4- Methode de contraception :P

1- mIRC
si vous acepter un fichier texte qui peut influencer mIRC comme les .mrc ou .ini vérifiez toujour leur
contenu car meme si celui qui vous l'envoit n'a pas de mauvaises intentions, il y a peut etre eu une erreur
de difusion (vep sa peut ariver meme a moi).

2- Taupe (Faite manuellement)
Je crois que vous avez retenue la lecon de Prof JC`zic qui vous a apris a ne jamais accepter de .exe sur
le net

3- OCX
configurer votre navigateur internet pour qu'il demande la confirmation pour accepter un fichier .ocx

4- Soft habituel
Verifiez toujour le nom des compagnie qui programme le soft et acheter le plus possible ce qui est porduit
par les grosse compagnie (je cest que cest pas corect mais au moin c'est safe) au pir si vous ne voulez
pas donner d'argent au multinationales allezsur rootshell ou un autre site du genre et cherchez le nom du
soft.

5- javascript 
Patchez vous contre les plus récent bug.

5- Conclusion
C'est deja fini, je voudrait vous rapeler que l'utilisation d`une backdoor doit etre seulement en cas critique
ou desesperer. Désoler aussi de ne pas avoir mit de code source de backdoor mais bon ... Mon boulot
est d'informer et lancer des defi a l'intelligence et non de donner les solutions. 

                                                        The FrHack Crew
                                                                Psykaos
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                             Bug dans Microsoft Exchange


Salutation, chers confrères compagnon de travail que vous êtes tous ( Slurrp!!!). Aujourd'hui mes frères,
je vous ferai part de ma dernière découverte effectuées en surfant sur ma disquette contenant internet (est
po mal plusse grosse que vous pensez). Vous ne pensiez quad même pas que j'allais vous expliquer le
truc du Frigo ?!? Celle là elle est pour dans bien longtemps, car je tiens à garder secret le backdoor que
j'lui ai installer. ;) Bon, autrement dit vous saurez pas comment éviter de vous faire tapper dessus par les
autorités parentales à chaque fois que vous avez une fringale. Si vous êtes de ceux qui font leur épicerie
dans les petites chaines alimentaire, sachez que ce n'est pas ici qu'on vous montrera a pirater un
"compteur de caisse". ;) Alors commencons... 

J'ai récemment découvert Microsoft Exchange dans mes laboratoire de réseau, alors je me suis intéresser
à la recherche d'exploits possible afin de crasher ce service, et comme de fait, mes recherches ont encore
une fois porter fruit;). Microsux vous direz, Heyyyy oui je vous réponds !!! Encore une fois Microsoft a
su laisser un bug important dans son service de mail Exchange. Il s'agit en fait d'un buffer overflow qui
affecte la version suivante : Microsoft Exchange Internet Mail Service 5.0.1457.7. Alors ca s'explique
comme suit : Vous connaissez une business cheap qui roule sous WindowZ, parce que ca n'as pas été
tester sur les serveur Nt encore, donc soyez sélectif dans vos cibles. Donc, vous ouvrez un telnet sul
serveur mail (25) de exchange de la machine, et là Talalam !!! Le tour est joué. Non c pas aussi simple,
mais presque ! ;) Il y a 2 facon possible de faire l'overflow, la première étant : 

1- au prompt, taper : HELO
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 
(et ainsi de suite jusqu'au temps que vous aillez 2 pages minimum, puis pesez sur entrée).

2- au prompt, taper : HELO blehhhh
MAIL FROM :
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
(et ainsi de suite jusqu'au temps que vous aillez 2 pages minimum, puis pesez sur entrée).

et voilà, le serveur Exchange devrais crasher... Avouez que c'est plutôt simple comme truc pour faire
chialer les employés de la binerie du coin, amusant par contre ;)

Malheuresement Microsoft a sans doute été avisé de ce bug, donc l'exploit marche juste sous les versions
précédent la 5.5.

Petit msg d'intérêt général: Vous avez sans doute remarquer que je part une chronique d'électronique sur
la page de FrHack, donc si jamais vous avez des questions, commentaires, suggestions, ou encore des
txt et des montages intéressant a me faire part, n'hésitez pas à m'envoyer le tout accompagné d'un
mandat-poste au montant de 20 $ à ashmeu@godzworld.com ( Eeeeeee non 25 $ finalement, mon frigo
est vide hehe ) 

And don't forget, Always believe in GoDZWoRLD !! (thks to FlyADDiCT) 

                                                         The FrHack Crew
                                                                  Ashmeu
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                                  Débuté en linux


Salut , ici je vais vous expliquer les débuts sous Linux, ce qu'il faut faire et ce qu'il faut pas faire ainsi que
quelques petites astuces comme pour configurer votre x-window. 

Pour commencer, je voudrai dire que les informations ci-dessous sont pour Linux Slackware, c sur qu'il y
a des ressemblances entre chaque distribution mais ne vous demander pas pourquoi certaines
commandes ne marchent pas si vous avez redhat ou suse par exemple.

1- Installation de Linux
Premièrement , il faut créer des partition "fdisk" ou si vous ne voulez par formater je vous conseil de
prendre partition magic. Vous faites une partition Linux native ( obligatoire car c'est le système de fichier
racine qui va servir a stocker vos fichiers ) et Linux swap (facultative mais elle rendra votre système plus
rapide en remplacant les megs de Ram lorsque vous en manquez) . Après vos partition fait , moi je me
fais 2 disquette ( ce n'est pas la seule manière mais elle marche tres bien )une boot et une root . Voici
comment faire vos disquette mais avant une petite définition de ce qu'est une disquette boot et root:

Boot: c'est une disquette contenant un kernel qui peut être "booter". Root: c'est une disquette qui contient
les fichiers nécessaires pour runner Linux. 

1ere ( boot ) : tu vas dans le répertoire bootdsks et tu tape "rawrite bare.i a:" (noter que les fichier sont
différents pour chaque distribution ) . 

2ieme ( root ) : Après tu vas dans rootdsks et tu fais "rawrite color.gz a:" Maintenant que tes 2 disquettes
sont fait tu reboot et tu rentre la boot en premier, après tu attend qu'il te demande la root et tu échange
les disquettes. Ensuite , tu tape "cfdisk" et tu vérifie si tes partitions sont correct ( ici metter votre partition
Linux native et Linux swap ,si vous en avez fait une ). Une fois que tout est correct vous lancer "setup".
Une fois setup lancer, ca devient assez facile , dite vous que le plus dur est passer. Vous n'avez qu'à lire
et à choisir les option en conséquence. 

Prenons pour acquis que l'installation c bien passer et que Linux est maintenant installer. Bon alors tu
rentre ta disquette lilo ou t'as vmlinuz que tas fait pendant l'installation .

1- Quesque je fais maintenant??? Fait "adduser" et
rajoute toi un user ( parce que on travaille pas toujours en admin au risque d'effacer un fichier qu'il ne
fallait pas). Ensuite, tu fais "useradd nom-du-user" et après "passwd nom-du-user" 

N.B : Sous Linux, il y a une différence entre S(masjuscule) et s(minuscule) alors faite attention. Après
passons à la configuration du x-window ( horreur ) je dit ca parce que tu dois connaître ta carte
graphique par cur. Bon je vous ferai pas la configuration complète parce que ca me tente pas. Bon
vous avez 2 choix pour la soit "xf86config" ou pour le mode graphique "XF86Setup". Ici prenons
"xf86config" . bon je passe des question mais j'essaye de prendre seulement ceux qui pourrait poser
problème. -Do you want to enable Emulate3Buttons?
Si tas une souris 2 boutons, repond oui a ca car en pesant sur les 2 boutons en même temps ca va te faire
le 3ieme bouton. 
-Do you want to look at the card database? 
Bon ici regarde voir si ta carte est la et croise les doigts pour quelle le soit parce que sinon ca va mal, par
exemple si vous avez une monster fusion bien désolé mais elle est pas la ( du moins au moment ou jecrit
ce texte ) 
-Which one of these screen types do you intend to run by default (1-4)? prend 4 c'est les meilleures
résolutions 
-Enter a number to choose the corresponding RAMDAC. 
Bbon si tu n'as pas de RAMDAC bien pèse sur "q" casse toi pas la tête avec ca Maintenant fait "startx" .
Bon quelques petites commandes utiles (si t en redhat "setup" est très utile) 
- "netstat -a" pour vérifier tes ports 
- "kill" pour killer a peu près n'importe quoi ( un gars qui s'est connecter sur vous par exemple ) 
- "ps -a" pour avoir le PID ( c avec ca que tu kill tes affaires ) 
- "modprobe" pour tes modules 
- crtl-alt-backspace pour killer ton X ( quand il plante genre ) 
- alt-f1 alt-f2 etc... pour te promener entre tes "fenêtre" et crtl-alt-f* si tu es en X 
- "man commande" pour avoir de l'aide sur une commande
- "tar" pour les .tar ou .tar.gz 
- "gcc" pour compiler 
- "pico" "emacs" "vi" pour "editer" qqch 
- "chmod" faite un man la dessus :) 
- "chown" idem 
- "mount" si vous voulez aller sur votre partition windows ou votre disquette ou encore sur un CD
- "unmount" pour unmounter un affaire ..genre quand tu change de disquette tu "unmount" et après tu
"mount" 
2- j'ai une tonne de port d'ouvert en et en plus il y a un conard qui se connecte en telnet sur moi qui je
suis tanner de toujours le killer quesque je fais?

Bon je vous conseille fortement daller "editer" votre /etc/inetd.conf pour fermer vos ports en particulier
celui de votre telnet..ou vous pouvez toujours aller "editer" le /etc/hosts.allow ou /etc/hosts.deny pour
votre telnet
4- 2.0.26 ?????ouin ok voici comment upgrader votre kernel en quelque ligne. 
1- cp linux-2.0.36.tar.gz /usr/src 
2- cd /usr/src 
3- rm -rf linux ( vous pouver toujours le sauvegarder ca peut toujours etre pratique si ca plante.. ) 
4- tar -zxvf linux linux-2.0.36.tar.gz 
5- mv linux linux-2.0.36 
6- ln -s linux-2.0.34 linux 
7- cd /usr/include 
8- rm -rf asm linux scsi 
9- ln -s /usr/src/linux/include/asm-i386 asm 
10- ln -s /usr/src/linux/include/linux linux 
11- ln -s /usr/src/linux/include/scsi scsi 
12- cd /usr/src/linux 
13- make mrproper 
14- make menuconfig ( liser les question..c en mode graphique ) 
15- make dep 
16- make clean 
17- make zlilo 
18- make modules
19- make modules_install 
20- remplacer votre /vmlinuz par limage qu'il a fait...( generalment dans euh...rapele pu liser INSTALL ca
va vous le dire ;O )
21- reboot 
5- ARF! je veux un beau petit menu qui me demande quel OS je veux "loader" quand je ouvre mon
ordinateur ( BOOT MANAGER ) je suis taner des disquettes!!! bon ok vous devez "editer" votre
/etc/lilo.conf voici le mien: 

# LILO configuration file # generated by 'liloconfig' # # Start LILO global section boot = /dev/hda
#compact # faster, but won't work on all systems. prompt vga = normal # force sane state
# ramdisk = 0 # paranoia setting # End LILO global section # Linux bootable partition config begins
image = /vmlinuz root = /dev/hda2 label = Linux read-only # Non-UMSDOS filesystems should be
mounted read-only for checking # Linux bootable partition config ends # DOS bootable partition config
begins other = /dev/hda1 label = Win table = /dev/hda # DOS bootable partition config ends

Attention c juste un exemple, vérifier que tout est correct avant de taper "lilo" , après ca tout es ok.
Quand vous aller rebooter vous aurez votre boot manager ( TAB pour voir le menu ). 

Conslusion 
J'avais parler de ce qui fallait pas faire ..euh ..effacer pas votre /etc/passwd ! hehe

                                                         The FrHack Crew
                                                                 Bond007
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                                     Slogan


/msg #hack.fr Bon tlm, dite quelques choses d'intelligent qui va parraitre dans le mag.
[_koala] l'homme est un loup pour l'homme
[UnderTak_] The worst foe lies within the self
[Bond007] Canadian Government Issue - Ignorance is no Excuse
[ewoks] you are a sucker and you must die
[LoGiSTiK] A l`attaque d`un pierre nous leur envoyrons un rocher ...

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                   Linux: Historique, installation, configuration, sécurisation.


Linux fut inventé au courant de l'année 1991 par Linux Torvalds, un finlandais. Il avait acheté un
micro-ordinateur PC pour étudier la programmation de leur microprocesseur. Ne voulant pas utilisé
MsDos, il décida d'essayer un clone d'Unix. Cela se nommait Minix. Trouvant qu'il y avait trop de
limitation (la taille des éxécutables,systèmes de fichiers,temps de réponse ,etc) il décida de ré-écrire
certaines parties du système pour le rendre plus efficace. La première version de linux sortit en août 1991
et fut distribué par Internet.

Cette version était très limité, on se demande bien si elle ne l'était pas autant que Minix car il n'y avait
meme pas de gestionnaire de disquettes.

À sa sortie, plusieurs hackers se sont intéressés à son cas, et on découvert un embryon et on vu en lui la
base d'un système exploitable. Maintenant, des programmeurs du quatre coins de la planette se force
pour ammilioré Linux et son noyau, communiquant par le moyen d'Internet.

Linux offre toutes les fonctionnalités d'un clone Unix sur micro-ordinateurs PC-386. Il fournit un
environnement de travail multi-utilisateurs, plusieurs personnes peuvent utiliser la machine au même
moment, et multi-tâches, chaque utilisateur peut exécuter plusieurs programmes en parallèle. Le système
fonctionne en mode protégé, exécute du code 32 bits, contrairement à d'autres systèmes qui s'exécutent
en mode 16 bits et sont donc moins performants..., et utilise les mécanismes de protection du processeur
pour garantir qu'aucun processus ne peut perturber l'exécution des autres ou du système lui-même.

Le noyau implémente les sémantiques Unix : processus concurrents, chargement à la demande des
programmes exécutables avec partage de pages et copie en écriture, pagination, systèmes de fichiers,
support des protocoles réseau TCP/IP.

Il supporte, de plus, la majorité des périphériques existant dans le monde PC (y compris les cartes
sonores) et permet de relire les partitions MS/DOS, OS/2 et tous les formats standards de CD/ROM.

Les librairies de développement dans Linux sont basées sur les librairies GNU, de la "Free Software
Fundation". Ces libraries offrent un haut degré de comptabilité avec les différents "standards" Unix
(Posix, BSD, System V), ce qui permet de compiler facilement tout type d'application disponible au
niveau source pour Unix. Ces librairies existent sous forme de bibliothèques partagées, ce qui signifie que
le code des fonctions de librairie n'est chargé qu'une seule fois en mémoire et que les programmes
exécutables sont plus petits en taille sur les disques.

La plupart des utilitaires standards Unix sont disponibles sous Linux, aussi bien les commandes de base
que des applications plus evoluées, comme les compilateurs et éditeurs de texte. La plupart des ces
utilitaires sont des programmes GNU, qui supportent des extensions qu'on ne retrouve pas dans les
versions BSD ou System V de ces programmes, mais qui restent compatibles avec ces dernières.
Certains programmes, notamment les utilitaires réseau, sont des programmes BSD. En résumé,
pratiquement tout programme Unix diffusé sous forme de source peut être compilé sous Linux et
s'exécute parfaitement, grâce à la compatibilité implémentée dans le noyau et dans les librairies.

En plus des programmes standards, Linux supporte de "grosses" applications. On retrouve l'interface
graphique X Window (XFree86 3 basé sur X11R6), un environnement de développement très complet
comprenant toutes les bibliothèques standard, compilateurs et débogueurs disponibles sous Unix (C,
C++, Objective-C, Smalltalk, Fortran, Pascal, Lisp, Scheme, Ada, gdb, ...). L'utilisateur dispose
également d'outils très puissants de formatage de texte, comme nroff, TeX, et LaTeX.

Ce que l'on as de besoin
La configuration suivante est probablement la plus petite configuration possible sur laquelle Linux peut
fonctionner : 386SX/16, 2 Mo RAM, un lecteur 1.44 Mo ou 1.2 Mo, n'importe quelle carte vidéo
reconnue. Elle devrait vous permettre d'amorcer le système et de tester si Linux tourne sur votre machine,
mais vous ne serez pas en mesure de faire quoi que ce soit d'utile. (NDR : 4 Mo sont quasiment
indispensables.)

Pour y parvenir, vous aurez aussi besoin d'espace disque : 5 à 10 Mo devraient suffire pour un système
minimal ne comportant que les commandes les plus importantes et peut-être une ou deux petites
applications, comme par exemple un programme d'émulation de terminal. Ceci reste très, très limité et
très inconfortable, puisqu'il ne reste pas assez de place pour faire quoi que ce soit, sauf grâce à de
minuscules applications. Ceci n'est généralement pas recommandé, sauf pour tester si le noyau fonctionne
et bien sûr pour pouvoir se vanter des faibles ressources matérielles nécessaires.

Si vous souhaitez utiliser des programmes travaillant intensivement, comme gcc, X et TeX, vous voudrez
probablement un processeur plus rapide qu'un 386SX/16, qui devrait cependant suffire si vous êtes
patient.

En pratique, vous avez besoin d'au moins 4 Mo si vous n'utilisez pas X11 et d'au moins 8 Mo si vous
l'utilisez. De plus, si vous voulez que soient simultanément actifs plusieurs utilisateurs ou plusieurs gros
programmes (comme des compilations), plus de 4 Mo sont souhaitables. Tout fonctionnera avec moins
de RAM (même avec 2 Mo), mais Linux utilisera alors la mémoire virtuelle (le disque dur servant de
mémoire lente) et l'ensemble s'en trouvera considérablement ralenti, au point de s'avérer inutilisable.

La quantité d'espace disque nécessaire dépend des programmes que vous voulez installer. La série de
base des utilitaires, shells et programmes d'administration devrait tenir sur un peu moins de 10 Mo, plus
un peu de place pour les fichiers utilisateurs. Pour un système plus complet, Il est courant d'obtenir des
valeurs de l'ordre de 20/30 Mo si vous n'utilisez pas X Window, et 40 Mo sinon (il n'est ici question que
des binaires, les sources demeurent "nettement" plus encombrants). Ajoutez l'espace disque que vous
voulez réserver aux utilisateurs. Etant donné le prix de la mémoire de masse de nos jours, si vous achetez
une nouvelle machine, il est ridicule de l'équiper d'un disque dur de faible capacité. Prenez au moins 500
Mo, voire 1 Go ou plus, vous ne le regretterez pas.

Ajoutez plus de mémoire vive, de disque dur, un processeur plus rapide selon vos besoins, vos souhaits
et votre budget pour aller au-delà d'un système à peine utilisable. En général, la grosse différence entre
Linux et MS-DOS est qu'ajouter de la mémoire à Linux entraîne un gros gain de performances, ce qui
n'est pas vraiment le cas avec MS-DOS. Ceci est bien sûr en rapport avec la limite des 640 Ko
directement exploitables sous MS-DOS, qui n'a aucun sens sous Linux.

Si vous trouvez votre système trop lent, AJOUTEZ DE LA MEMOIRE avant de dépenser des sommes
folles pour un processeur plus puissant. Sur un 386, passer de 4 à 8 Mo de mémoire peut multiplier la
vitesse d'exécution par un facteur de 10 ou 20...

Unités centrales :

toutes celles qui exécutent des programmes en mode protégé 386 (tous les modèles de 386, 486, 586 et
686) conviennent. Les processeurs 286 et inférieurs pourront peut-être être exploités un jour par un
noyau plus petit appelé ELKS (Embeddable Linux Kernel Subset), mais n'espérez pas disposer alors des
mêmes fonctionnalités. Une version pour les processeurs 680x0 (avec x=2 plus MMU externe, 3 et 4)
pour Amiga et Atari se trouve dans le répertoire 680x0 des sites Linux. De nombreuses architectures
Alpha sont compatibles avec Linux, ainsi que certaines machines Sparc. Des portages vers PowerPC,
ARM et MIPS sont aussi en cours.

Architecture :

bus ISA et EISA. Le support du bus MCA est incomplet (voir plus haut). Les bus locaux (VLB et PCI)
sont supportés. Linux exploite le matériel de manière plus fine que MS-DOS, MS-Windows, et les
autres systèmes d'exploitation en général. Cela signifie que certains matériels marginaux qui conviennent
pour d'autres systèmes d'exploitation peuvent se révéler non fiables sous Linux. Linux est, entre autres, un
excellent testeur de mémoire...

RAM :

en théorie, jusqu'à un 1 Go; plus sur les plateformes 64 bits, mais cette quantité de mémoire n'a jamais
été testée. Attention : certaines personnes (dont Linus Torvalds) ont remarqué qu'ajouter de la mémoire
sans dans le même temps augmenter la quantité de cache peut ralentir la machine dans des proportions
considérables. Au-delà de 64 Mo, il faut spécifier la quantité de mémoire en paramètre lors de
l'amorçage car le BIOS des PC est limité et ne sait pas indiquer plus de 64 Mo.

Stockage des données :

les disques AT génériques (IDE, contrôleurs de disque dur 16 bit avec MFM ou RLL) sont reconnus,
comme les disques durs SCSI et les CD-ROMs dotés d'une interface SCSI adéquate. Les contrôleurs
génériques XT (contrôleurs 8 bits avec MFM ou RLL) nécessitent un pilote spécial intégré à la
distribution standard du noyau. Les cartes SCSI supportées sont : Adaptec 1542, 1522, 1740, et séries
27xx et 29xx, les contrôleurs Buslogic (à l'exception du "Flashpoint"), les contrôleurs basés sur le circuit
NCR53c810, les contrôleurs DPT, Seagate ST-01 et ST-02, les séries Future Domain TMC-88x (et
toute carte basé sur le processeur TMC950) et TMC 1660/1680, Ultrastor 14F, 24F, et 34F, Western
Digital wd7000, et d'autres. Les lecteurs de cartouches SCSI, QIC-02 et certains QIC-80 sont
également supportés. Plusieurs lecteurs de CD-ROM sont également gérés, dont Matsushita/Panasonic,
Mitsumi, Sony, Soundblaster, Toshiba, ATAPI (EIDE), et les lecteurs SCSI. Pour les références exactes
des modèles supportés, consultez le "Hardware HOWTO".

Vidéo :

les cartes VGA, EGA, CGA et Hercules fonctionnent en mode texte. Pour les modes graphiques, les
cartes Hercules, EGA, VGA normales, quelques cartes super VGA (la plupart des cartes à base de
puces ET-3000, ET-4000, Paradise et Trident), de nombreuses cartes S3 sont reconnues, ainsi que
8514/A, ATI MACH8, ATI MACH32. Linux utilise le serveur X XFree86, ce qui détermine quelles
cartes fonctionnent. Les performances de certaines cartes accélérées sont impressionnantes.

Attention si vous achetez une carte vidéo de marque Matrox : ce constructeur a longtemps refusé de
fournir les spécifications nécessaires à la programmation d'un pilote gratuit et en sources, permettant de
les exploiter sous Linux. Elles ne sont, pour l'instant, supportées efficacement que par des versions
commerciales de X Window (de marque "Metro-X" ou "Xinside"). Il existe, certes, un pilote pour les
cartes Matrox Millenium à partir de XFree86 3.2 et pour la Matrox Mystique à partir de XFree86 3.3,
mais il est encore minimal (il n'exploite pas toutes les fonctionnalités), et est considéré comme une version
béta.

Réseau :

Western Digital 80x3, ne1000, ne2000, 3com503, 3com509, 3com589 PCMCIA, Allied Telliesis
AT1500, la plupart des cartes LANCE, adaptateurs d-link pocket, SLIP, CSLIP, PLIP (IP sur ports
parallèles), PPP, et bien d'autres... De nouveaux pilotes paraissent régulièrement.

Ports série :

la plupart des cartes utilisant des UART 16450 et 16550, dont entre autres les AST Fourport, Usenet
Serial Card II, etc. Parmi les cartes série intelligentes reconnues, citons les gammes Cyclades Cyclom,
Comtrol Rocketport et Stallion (toutes gammes supportées par leurs constructeurs), et Digi (certains
modèles). Certains équipements RNIS, frame relay et pour ligne louée, sont également supportés.

Autres matériels :

Cartes Soundblaster, ProAudio Spectrum 16, Gravis Ultrasound, la plupart des autres cartes son,
plusieurs types de souris bus (Microsoft, Logitech, PS/2).

Programmes
La plupart des outils et des programmes classiques d'Unix ont été portés vers Linux, ce qui comprend
presque tous les programmes GNU et de nombreux clients X provenant de diverses sources. En fait, le
mot "portage" est souvent exagéré, puisqu'un grand nombre d'applications ont été compilées sans
modification ou presque en raison de la forte conformité à POSIX de Linux. Malheureusement, il n'existe
pour le moment qu'assez peu d'applications pour l'utilisateur final, mais cela a récemment commencé à
changer. Voici néanmoins une liste très réduite de programmes qui fonctionnent sous Linux.

Commandes Unix de base :

ls, tr, sed, awk, etc ... Pratiquement tout y est.

Outils de développement :

gcc, gdb, make, bison, flex, perl, rcs, cvs, prof. 

Langages et environnements :

C, C++, Objective C, Modula-3, Modula-2, Oberon, Ada95, Pascal, Fortran, ML, scheme, Tcl/tk,
Perl, Python, Common Lisp, et bien d'autres.

Environnements graphiques :

X11R5 (XFree86 2.x), X11R6 (XFree86 3.x), MGR.

Editeurs :

GNU Emacs, XEmacs, MicroEmacs, jove, ez, epoch, elvis (GNU vi), vim (clone vi), vile, joe, pico, jed
et bien d'autres.

Shells :

Bash (Bourne-shell compatible POSIX), zsh (incluant la compatibilité ksh), pdksh, tcsh, csh, rc, es, ash
(Bourne-shell utilisé par BSD) et bien d'autres.

Télécommunications :

Taylor (compatible BNU) UUCP, SLIP, CSLIP, PPP, kermit, szrz (Zmodem), minicom, pcomm,
xcomm, term/slap (exécute plusieurs shells, redirige les connexions réseau, et permet les affichages de
fenêtres X-Window, sur une seule ligne téléphonique) Seyon (programme de communication sous
X-Window) et de nombreux programmes de télécopie et de transmission de la voix. Bien entendu, les
accès distants en mode terminal par ligne série sont supportés en standard.

News et mail :

C-news, INN, trn, nn, tin, sendmail, smail, elm, mh, pine, etc.

Formateurs de texte :

TeX, LaTeX, groff, doc, ez, Linuxdoc-SGML, etc.

Jeux :

Nethack, de nombreux jeux sous X11, dont DOOM. L'un des jeux les plus passionnants consiste à
rechercher tous ceux qui sont disponibles sur les sites diffusant Linux...

Tous ces programmes (qui ne représentent pas le centième de ce qui existe) sont bien entendu
disponibles gratuitement. Les applications commerciales commencent à exister, demandez à votre
fournisseur si votre logiciel préféré a été porté sous Linux. 

Config du clavier
D'abord, comment configurer le clavier. Si vous avez raté cette étape à l'installation ou si vous avez
changé de clavier, vous devez : 

Choisir une table de clavier adéquate dans /usr/lib/kbd/keytables/; par exemple, fr-latin1.map y désigne le
clavier français Azerty. Editer le fichier /etc/sysconfig/keyboard pour qu'il contienne: 

KEYTABLE="/usr/lib/kbd/keytables/fr-latin1.map"

Pour configurer le taux de répétition et le délai du clavier, ajouter cette ligne dans /etc/rc.d/rc.sysinit ou, si
vous êtes sous Caldera, /etc/rc.d/rc.boot: 

/sbin/kbdrate -s -r 16 -d 500 # ce que vous voulez

Au prochain redémarrage, votre clavier fonctionnera convenablement. Pour recharger la configuration du
clavier sans avoir à réinitialiser la machine, placez-vous dans /etc/rc.d/init.d et tapez la commande
./keytable start. 

Sendmail
Sur certains systèmes, sendmail bloque la machine au démarrage. Vérifiez que votre fichier /etc/hosts
contient une ligne

127.0.0.1 localhost

Périphériques
Il peut manquer des périphériques en /dev/ (ou des liens vers les véritables périphériques). Vérifiez à quoi
correspondent vos souris, modems, et lecteur de CDROM, puis procédez comme suit : 

~# cd /dev
/dev# ln -s /dev/cua0 mouse
/dev# ln -s /dev/cua1 modem
/dev# ln -s /dev/hdb cdrom

et si vous le désirez, faites un chmod 666 sur ces périphériques (les vrais périphériques, pas les liens!)
pour les rendre accessibles à tous. Truc: sur certains portables, la souris est /dev/psaux; tenez en compte
en configurant X11. 

De plus, vous aurez envie de rendre le lecteur de disquettes accessible à tous par la commande chmod
666 /dev/fd*. Ceci peut entrainer des problèmes de sécurité, mais j'en ignore les détails. Tout
commentaire à ce propos est bienvenu. 

La souris
Le serveur de souris gpm est utile pour le copier/coller en mode console, et pour utiliser la souris dans
certaines applications. Vérifiez que vous avez un fichier /etc/sysconfig/mouse qui contient : 

MOUSETYPE="Microsoft"
XEMU3=yes

De plus, vous devez avoir un fichier /etc/rc.d/init.d/gpm. Bien sûr, il faut vous assurer que cette
configuration correspond bien à votre souris. Attention, sur certains portables MOUSETYPE vaut PS/2. 

Sous Caldera, tout ce que vous avez à faire est d'ajouter la ligne suivante à /etc/rc.d/rc.boot: 

/usr/bin/gpm

Repertoires de montage
Il est pratique d'avoir des points de montage pour la disquette et d'autres périphériques. Par exemple,
vous pouvez procéder comme suit : 

~# cd /mnt
/mnt# mkdir a: ; mkdir floppy ; mkdir cdrom ; mkdir win ; mkdir zip

Ceci crée des points de montage pour une disquette formatée DOS, une disquette formatée Ext2, un
CDROM, la partition DOS, et le lecteur Zip du port parallèle. 

Puis éditez le fichier /etc/fstab et ajoutez y les entrées suivantes : 

/dev/fd0 /mnt/a: msdos user,noauto 0 1
/dev/fd0 /mnt/floppy ext2 user,noauto 0 1
/dev/cdrom /mnt/cdrom iso9660 ro,user,noauto 0 1
/dev/sda4 /mnt/zip vfat user,noauto 0 1
/dev/hda1 /mnt/win vfat user,noauto 0 1

Bien évidemment, vous devez mettre le bon périphérique dans le premier champ. Pour accéder aux
partitions fat32, vous trouverez une rustine pour le noyau et des informations a
http://bmrc.berkeley.edu/people/chaffee/fat32.html. NdT: La rustine n'est plus nécessaire depuis le noyau
2.0.34. 

LiLo et LoadLin
Beaucoup d'utilisateurs veulent que leur PC puisse faire tourner à la fois Linux et DOS/Windows, et
veulent choisir au démarrage quel système utiliser. Supposons que /dev/hda1 contienne DOS/Windows,
tandis que /dev/hda2 contienne Linux. 

Procédez alors comme suit : 

~# fdisk
Using /dev/hda as default device!

Command (m for help):a
Partition number (1-4): 2

Command (m for help):w

~#

Ceci rend amorçable (bootable) la partition Linux. Cette étape devrait être effectuée par activate quand
on utilise le QuickInst de LILO, mais ne marche pas avec ma RedHat. 

Puis entrez le fichier /etc/lilo.conf suivant : 

boot = /dev/hda2
compact
delay = 50
# message = /boot/bootmesg.txt # écrivez le votre
root = current
image = /boot/vmlinuz # la première entrée lance Linux par défaut
label = linux
other = /dev/hda1
table = /dev/hda
label = dos

Maintenant lancez /sbin/lilo et c'est tout! LILO étant une partie critique de votre installation, je vous invite
vivement à en consulter la documentation. 

Pour démarrer Linux depuis DOS sans un arrêt explicite, mettez LOADLIN.EXE dans un répertoire (de
la partition DOS) inclus dans le chemin (path) du DOS, puis copiez votre noyau en C:\DOS\VMLINUZ
par exemple. Le fichier de commandes LINUX.BAT suivant démarrera Linux : 

rem linux.bat
smartdrv /C
loadlin c:\dos\vmlinuz root=/dev/hda2 r

Si vous utilisez Windows 95, modifiez les propriétés de ce fichier pour qu'il s'exécute en mode
MS-DOS.

MRB
Faire une copie de votre MBR avant d'installer Linux peut vous sauver la mise. Utilisez restorrb (inclus
dans le paquetage FIPS) avant l'installation, ou utilisez une disquette de secours Linux et lancez cette
commande: 

rescue:~# dd if=/dev/hda of=MBR bs=512 count=1

puis faites au moins deux copies du fichier MBR sur des disquettes. En cas de désastre, vous pourrez
réinstaller votre ancien MBR avec la commande: 

rescue:~# dd if=/mnt/MBR of=/dev/hda bs=446 count=1

en supposant que la disquette contenant le fichier MBR est montée sous /mnt. Vous pouvez également
utiliser la commande FDISK /MBR depuis une disquette de secours DOS.

Imprimantes
Les distributions RedHat et Caldera contiennent un bon outil de configuration, printtool; si vous n'utilisez
pas ces distributions, voici la configuration manuelle. 

On suppose que vous avez une imprimante non-PostScript que vous utilisez pour imprimer du texte brut
(par exemple du source en C) et des fichiers PostScript avec GhostScript qui est supposé être déjà
installé. 

Installer votre imprimante demande quelques étapes : 

Vérifiez sur quel port parallèle elle se trouve; essayez 

~# echo "hello, world" > /dev/lp0
~# echo "hello, world" > /dev/lp1

et notez laquelle de ces 2 commandes marche. 
Créer deux répertoires-tampons 


~# cd /var/spool/lpd
/var/spool/lpd/# mkdir raw ; mkdir postscript

Si votre imprimante imprime en escalier (comme la plupart des jets d'encre) vous avez besoin d'un filtre.
Essayez d'imprimer deux lignes avec : 

~# echo "premiere ligne" > /dev/lp1 ; echo "deuxieme ligne" > /dev/lp1

Si la sortie est de la forme

premiere ligne
deuxieme ligne

c'est que vous avec besoin du filtre. Créez alors un fichier /var/spool/lpd/raw/filter contenant 

#!/bin/sh
# fichier /var/spool/lpd/raw/filter
# Ce filtre d'impression supprime l'effet d'escalier
awk '{print $0, "\r"}'

puis rendez-le exécutable par chmod 755 /var/spool/lpd/raw/filter. Faites un filtre pour l'émulation
PostScript. Créez le fichier /var/spool/lpd/postscript/filter contenant : 

#!/bin/sh
# fichier /var/spool/lpd/postscript/filter
DEVICE=djet500
RESOLUTION=300x300
PAPERSIZE=a4
SENDEOF=

nenscript -TUS -ZB -p- |
if [ "$DEVICE" = "PostScript" ]; then
cat -
else
gs -q -sDEVICE=$DEVICE \
-r$RESOLUTION \
-sPAPERSIZE=$PAPERSIZE \
-dNOPAUSE \
-dSAFER \
-sOutputFile=- -
fi

if [ "$SENDEOF" != "" ]; then
printf "\004"
fi
(dans cet exemple on suppose une imprimante HP DeskJet. Adaptez-le à la vôtre). Enfin, ajoutez les
entrées suivantes dans /etc/printcap : 

# entrées dans /etc/printcap
lp|ps|PS|PostScript|djps:\
:sd=/var/spool/lpd/postscript:\
:mx#0:\
:lp=/dev/lp1:\
:if=/var/spool/lpd/postscript/filter:\
:sh:
raw:\
:sd=/var/spool/lpd/raw:\
:mx#0:\
:lp=/dev/lp1:\
:if=/var/spool/lpd/raw/filter:\
:sh:
Pour des configurations d'imprimante plus complexes ou plus exotiques, le Printing-HOWTO vous
attend. 

Utilisateurs de RedHat: sachez que le GSDEVICE choisi par printtool fonctionne, mais n'est pas
forcément le meilleur pour votre imprimante. Vous pouvez envisager de bricoler le fichier postscript.cfg;
j'y ai changé GSDEVICE de cdj500en djet500 et mes impressions sont maintenant beaucoup plus
rapides. 

Sécurisation
Dans cette partie, on vas voir comment sécuriser sa box. Premièrement, le philtre de packet.

La technologie de filtre de paquets est incluse dans le noyau de Linux . Le filtre doit agir dans la pile IP
du système . Pour utiliser cette technique vous allez devoir une fois de plus recompiler le noyau et
répondre YES aux questions suivantes:

IP: forwarding/gatewaying (CONFIG_IP_FORWARD) YES
IP: firewalling (CONFIG_IP_FIREWALL) YES
IP: firewall packet logging (CONFIG_IP_FIREWALL_VERBOSE) YES

Le noyau compilé , installé , redémarré vous allez être en mesure de configuré le FW. Pour cela on va
utilisé ipfadm . 
La syntaxe générale est:

ipfwadm-A commande paramètres [options]
ipfwadm -I commande paramètres [options]
ipfwadm -O commande paramètres [options]
ipfwadm -F commande paramètres [options]
ipfwadm -M [-l ou -s] [options]

Comme vous venez de le voir il y a cinq catégories: 
-A configuration de l'accounting (compatibité des paquets atteignant le système) .
-I règles à appliquer aux paquets TCP/IP en entrée .
-O règles à appliquer aux paquets TCP/IP en sortie . 
-F règles à appliquer aux paquets TCP/IP à router d'une interface à une autre . 
-M administration de l'IP Masquerading.

Perso je pourrais vous parler que des categories I , O , F , M.
ipfwadm possède de très nombreuses options que je vais pas décrire ici par ce j'ai pas envie. Lisez la
doc Linux . 

Avant de créer toute règles de filtre IP , vas falloir définir des règles de sécurité . 
Par exemple pour ma machine on va dire:
Toute connexion du réseau internet vers une machine interne est interdite .
De extérieur , on doit avoir accès au serveur de messagerie et au service DNS du firewall .

On va dire qu'on a un réseau interne de type 193.1.1.0/24 et qu'on est relié à un sous réseau de type
193.1.2.0/24 (entre le FW et le routeur) . Le FW ayant pour adresse 193.1.1.254 en interne (eth0) et
193.1.2.1 en externe (eth1) . 

Je vais maintenant dire quelques uns des filtres que j'applique

-ipfwadm -O -p accept 
La règle par défaut des paquets en sortie est accept (-p représente l'action par défaut)
- ipfwadm -I -p deny
La règle par défaut des paquets en entrée est deny .
-ipfwadm -F -p deny 
La règle par défaut des paquets à router en entrée est deny .
-ipfwadm -F -a accept -S 193.1.1.0/24 -D0/0 -P tcp 
Autorisation pour router tous les paquets TCP provenant de l'extérieur . 
-ipfwadm -I -a deny -S 193.1.1.0/24 -D0/0 -W eth1
Cette commande sert à lutter contre le SPOOFING (changer son adresse IP) en effet cette règle dit que
tous les paquets qui rentrent dans le sous réseau sécurisé et qui ont une adresse source correspondant à
une adresse du sous réseau (ce qui n'est pas logique) doivent être rejeté!
-ipfawadm -I -a accept -P udp -S0/0 -D 193.2.1.1 53 
-ipfawadm -I -a accept -P tcp -S0/0 -D 193.2.1.1 53 
Ces mesures disent que les accès au serveur DNS (port 53) sont accessible de n'importe où .
-ipfawadm -I -a accept -P udp -S0/0 -D 193.2.1.1 25
Accès au serveur SMTP du firewall de n'importe où .
Malheureusement on retrouve là le plus grand inconvenient des FW . En effet dans l'état actuelle système
on ne pourra pas faire fonctionner un client FTP du réseau interne avec un serveur situé à l'extérieur . Le
protocole FTP prévoit l'établissement d'une connexion du serveur FTP vers le client (du port 20 -> port
> 1024)

Mais il y a des solutions .
- Utiliser le client FTP en mode passif (A ce moment le client établit une connexion vers le serveur ftp)
- Utiliser un proxy(voir section suivante) installé sur le FW qui relaiera les requêtes de l'intérieur vers
extérieur .
- Utiliser l'IP masquerading .
- Ou alors rajouter cette règle 
ipfwadm -F -a accept -P tcp -S0/0 20 -D 193.1.1.0/24 1024-65535

Comment proteger son port telnet(23).

# # inetd.conf This file describes the services that will be available
# through the INETD TCP/IP super server. To re-configure
# the running INETD process, edit this file, then send the
# INETD process a SIGHUP signal.
#
# Version: @(#)/etc/inetd.conf 3.10 05/27/93
#
# Authors: Original taken from BSD UNIX 4.3/TAHOE.
# Fred N. van Kempen, 
#
# Modified for Debian Linux by Ian A. Murdock 
#
# Modified for RHS Linux by Marc Ewing 
#
# 
#
# Echo, discard, daytime, and chargen are used primarily for testing.
#
# To re-read this file after changes, just do a 'killall -HUP inetd'
#
#echo stream tcp nowait root internal
#echo dgram udp wait root internal
#discard stream tcp nowait root internal
#discard dgram udp wait root internal
#daytime stream tcp nowait root internal
#daytime dgram udp wait root internal
#chargen stream tcp nowait root internal
#chargen dgram udp wait root internal
#
# These are standard services.
#
#ftp stream tcp nowait root /usr/sbin/tcpd in.ftpd -l -a
telnet stream tcp nowait root /usr/sbin/tcpd in.telnetd
gopher stream tcp nowait root /usr/sbin/tcpd gn

# do not uncomment smtp unless you *really* know what you are doing.
# smtp is handled by the sendmail daemon now, not smtpd. It does NOT
# run from here, it is started at boot time from /etc/rc.d/rc#.d.
#smtp stream tcp nowait root /usr/bin/smtpd smtpd
#nntp stream tcp nowait root /usr/sbin/tcpd in.nntpd
#
# Shell, login, exec and talk are BSD protocols.
#
shell stream tcp nowait root /usr/sbin/tcpd in.rshd
login stream tcp nowait root /usr/sbin/tcpd in.rlogind
#exec stream tcp nowait root /usr/sbin/tcpd in.rexecd
talk dgram udp wait root /usr/sbin/tcpd in.talkd
ntalk dgram udp wait root /usr/sbin/tcpd in.ntalkd
#dtalk stream tcp waut nobody /usr/sbin/tcpd in.dtalkd
#
# Pop and imap mail services et al
#
pop-2 stream tcp nowait root /usr/sbin/tcpd ipop2d
pop-3 stream tcp nowait root /usr/sbin/tcpd ipop3d
imap stream tcp nowait root /usr/sbin/tcpd imapd
#
# The Internet UUCP service.
#
#uucp stream tcp nowait uucp /usr/sbin/tcpd /usr/lib/uucp/uucico -l
#
# Tftp service is provided primarily for booting. Most sites
# run this only on machines acting as "boot servers." Do not uncomment
# this unless you *need* it. 
#
#tftp dgram udp wait root /usr/sbin/tcpd in.tftpd
#bootps dgram udp wait root /usr/sbin/tcpd bootpd
#
# Finger, systat and netstat give out user information which may be
# valuable to potential "system crackers." Many sites choose to disable 
# some or all of these services to improve security.
#
# cfinger is for GNU finger, which is currently not in use in RHS Linux
#
finger stream tcp nowait root /usr/sbin/tcpd in.fingerd
#cfinger stream tcp nowait root /usr/sbin/tcpd in.cfingerd
#systat stream tcp nowait guest /usr/sbin/tcpd /bin/ps -auwwx
#netstat stream tcp nowait guest /usr/sbin/tcpd /bin/netstat -f inet
#
# Time service is used for clock syncronization.
#
time stream tcp nowait nobody /usr/sbin/tcpd in.timed
time dgram udp wait nobody /usr/sbin/tcpd in.timed
#
# Authentication
#
auth stream tcp nowait nobody /usr/sbin/in.identd in.identd -l -e -o
#
# End of inetd.conf

linuxconf stream tcp wait root /bin/linuxconf linuxconf --http
------------------------------------------------------------------------------------------------|

-===Tout les ports avec un # sont fermé exemple:#ftp stream tcp nowait root /usr/sbin/tcpd in.ftpd -l -a
(le port ftp/shell est fermé) ----------->Pour l`ouvrir tu n'a rien qu'a enlever le # .

Maintenant, votre box devrait être assez sécuritaire pour naviguer en tout sécurité sur l'Internet.

                                                         The FrHack Crew
                      Snowcrach, basé sur la feuille d'information Linux
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                                    Conclusion

Nous espérons que vous avez aimez notre emag #4 de FrHack. Nous n'allons pas en sortir d'autres car nous sommes en remaniment. Je tiens à remercier tous les collaborateurs de FrHack et tous ceux qui
viennent sur le channel quotidiennement pour que je garde le moral.
Remerciements spécials:
-Oktober, mon guru de linux préféré, qui malgré quelques embêtements, a dut quitter.
-Ashmeu, pour me suivre dans tous mes projets aussi fou qu'ils puissent l'être.
-Gabberman, notre mascotte. Qui nous a également aidé à registrer nos anciens sites et mirrors. 
Et tous les autres que j'ai oublié d'inclure. Si vous avez des questions ou des recommandations, veuillez nous les faire parvenir à: Frhack@hotmail.com

Snowcrach                                                                       



