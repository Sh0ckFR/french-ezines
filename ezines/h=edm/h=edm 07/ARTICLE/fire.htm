<html>
<body bgcolor="#000000" text="#FFFFFF">

<p align="center"><font size="4" color="#FF0000">lettres en feu</font></p>
<p>voici un petit effet simple est tr&eacute;s impressionnant, afficher des lettres enflamm&eacute; ! en 320x200 et 256 couleur</p>
<p><img src="hedmfire.gif" width="311" height="113"></p>
<p>non jean kevin, on fera pas de tete de mort enflamm&eacute; !</p>
<p>l&agrave; c'est pas tr&eacute;s impressionnant parce que ça bouge pas ! mais normalement ça fait un beau H=EDM2 en flammes !</p>
<p align="center"><font color="#FF0000" size="4"><b>Premiere etape : theorie : smooth vertical<br>
</b></font><font color="#FF8080">La th&eacute;orie, c'est quand on
comprend mais que ça ne marche pas. </font></p>

<p>comment ça marche ?</p>

<p>en fait c'est tout con ça repose sur une chose
essentielement.<br>
pour calculer chaque pixel on fait la moyenne des pixel qui se
trouve en dessous comme ça :<br>
O represente le pixel dont on veut determiner sa couleur<br>
X sont les points necessaire pour calculer sa couleur</p>

<table border="0">
    <tr>
        <td>X</td>
        <td>O</td>
        <td>X</td>
    </tr>
    <tr>
        <td>X</td>
        <td>X</td>
        <td>X</td>
    </tr>
    <tr>
        <td>X</td>
        <td>X</td>
        <td>X</td>
    </tr>
</table>

<p>on fait la moyenne des couleur de tout les X et on obtient la
couleur de O</p>

<p align="center"><font color="#FF0000" size="4"><b>Deuxieme
etape : pratique : les lettres !<br>
</b></font><font color="#FF8080">La pratique, c'est quand
ça marche mais que l'on ne comprend pas. </font></p>

<p>pour dessiner les lettres ? pas de casse tete juste 1 adresse
! une adresse ? YES ! mais quel adresse ?</p>

<p>F000F:A6EL</p>

<p>comment donc afficher les lettres grace a cette adresse ? et
bin comme ça :<br>
vram correspond a l'adresse de la memoire video</p>

<table border="0" cellpadding="3" cellspacing="3" width="100%"
bgcolor="#FF8000">
    <tr>
        <td bgcolor="#C0C0C0"><font color="#000000"><b>void </b>BltText(<b>char
        far </b>*text,<b> int </b>x, <b>int</b>
        y, <b>unsigned char</b> color,<b>unsigned
        char</b> G){<br>
        <b>int</b> offset = (y &lt;&lt; </font><font
        color="#0000FF">8</font><font color="#000000">) +
        (y&lt;&lt;</font><font color="#0000FF">6</font><font
        color="#000000">) + x, oldx=x;<br>
        <b>unsigned char far</b> *romptr, *charset = (<b>unsigned
        char far</b>*)</font><font color="#0000FF">0xF000FA6EL</font><font
        color="#000000">;<br>
        romptr = charset + (*text) * </font><font color="#0000FF">8</font><font
        color="#000000">;<br>
        <b>unsigned char </b>mask = </font><font
        color="#0000FF">0x80</font><font color="#000000">;<br>
        <b>while</b>(*text != <b>NULL</b>){</font><blockquote>
            <p><font color="#000000"><b>for</b>(<b>int
            </b>j = </font><font color="#0000FF">0</font><font
            color="#000000">; j&lt;</font><font color="#0000FF">8</font><font
            color="#000000">; j++){</font></p>
        </blockquote>
        <blockquote>
            <blockquote>
                <p><font color="#000000">mask = </font><font
                color="#0000FF">0x80</font><font color="#000000">;<br>
                <b>for</b>(<b>int</b> k =</font><font
                color="#0000FF">0</font><font color="#000000">;
                k&lt;G*</font><font color="#0000FF">8</font><font
                color="#000000">; k+=G){</font></p>
            </blockquote>
        </blockquote>
        <blockquote>
            <blockquote>
                <blockquote>
                    <p><font color="#000000"><b>if</b>(*romptr
                    &amp; mask)</font></p>
                    <blockquote>
                        <p><font color="#000000"><b>for</b>(<b>int</b>
                        xx = </font><font color="#0000FF">0</font><font
                        color="#000000">;xx&lt;G;xx++)</font></p>
                        <blockquote>
                            <p><font color="#000000"><b>for</b>(<b>int</b>
                            yy =</font><font color="#0000FF"> 0</font><font
                            color="#000000">;yy&lt;G;yy++)</font></p>
                            <blockquote>
                                <p><font color="#000000">vram[offset
                                + k + xx +(yy*</font><font
                                color="#0000FF">320</font><font
                                color="#000000">)] = color;</font></p>
                            </blockquote>
                        </blockquote>
                    </blockquote>
                </blockquote>
            </blockquote>
        </blockquote>
        <blockquote>
            <blockquote>
                <blockquote>
                    <p><font color="#000000">mask = (mask
                    &gt;&gt; </font><font color="#0000FF">1</font><font
                    color="#000000">);</font></p>
                </blockquote>
                <p><font color="#000000">}</font></p>
            </blockquote>
        </blockquote>
        <blockquote>
            <blockquote>
                <p><font color="#000000">offset += </font><font
                color="#0000FF">320</font><font color="#000000">*G;<br>
                romptr++;</font></p>
            </blockquote>
            <p><font color="#000000">}</font></p>
        </blockquote>
        <p><font color="#000000">x += G*</font><font
        color="#0000FF">8</font><font color="#000000">;<br>
        text++;</font></p>
        <p><font color="#000000"><b>if</b>(text[</font><font
        color="#0000FF">0</font><font color="#000000">] == </font><font
        color="#0000FF">13</font><font color="#000000">){</font></p>
        <blockquote>
            <p><font color="#000000">text++;<br>
            y+=</font><font color="#0000FF">10</font><font
            color="#000000">*G;<br>
            x=oldx;</font></p>
        </blockquote>
        <p><font color="#000000">}</font></p>
        <p><font color="#000000">offset = (y&lt;&lt;</font><font
        color="#0000FF">8</font><font color="#000000">) +
        (y&lt;&lt;</font><font color="#0000FF">6</font><font
        color="#000000">) + x;<br>
        romptr = charset + (*text) * </font><font color="#0000FF">8</font><font
        color="#000000">;<br>
        }<br>
        }</font></p>
        </td>
    </tr>
</table>

<p>maintenant voyons voir pour notre feu, il nous faut une
palette mais pas une pallette de 256 couleur car j'ai essayai et
c trop long a gerer une grosse palette !</p>

<p>on va donc utiliser une pallette de 33 couleur ! pourquoi 33 ?
parce que 666 c'est le chiffre du diable et que si on le divise
par 2 ça donne 333 et si on enleve 300 ça donne 33 ! mon
explication vous convient ? non ? tant pis !</p>

<p>bref il nous faut du jaune et du rouge donc voila le code :</p>

<table border="0" cellpadding="3" cellspacing="3" width="100%"
bgcolor="#FF8000">
    <tr>
        <td bgcolor="#C0C0C0"><font color="#000000"><b>void</b>
        palette_degrader(<b>void</b>){<br>
        <b>int</b> B=</font><font color="#0000FF">0</font><font
        color="#000000">,G=</font><font color="#0000FF">0</font><font
        color="#000000">,R=</font><font color="#0000FF">0</font><font
        color="#000000">;<br>
        <b>bool</b> c1=<b>false</b>,c2=<b>false</b>;<br>
        <b>for</b> (<b>int</b> i=</font><font
        color="#0000FF">33</font><font color="#000000">;i&gt;</font><font
        color="#0000FF">0</font><font color="#000000">;i--){<br>
        outp(</font><font color="#0000FF">0x3C8</font><font
        color="#000000">, i);<br>
        outp(</font><font color="#0000FF">0x3C9</font><font
        color="#000000">, R);<br>
        outp(</font><font color="#0000FF">0x3C9</font><font
        color="#000000">, G);<br>
        outp(</font><font color="#0000FF">0x3C9</font><font
        color="#000000">, B);<br>
        <br>
        <b>if</b> ((R&lt;</font><font color="#0000FF">60</font><font
        color="#000000">)&amp;&amp;(!c1)) R=R+</font><font
        color="#0000FF">10</font><font color="#000000">;<br>
        <b>if</b> ((G&lt;</font><font color="#0000FF">60</font><font
        color="#000000">)&amp;&amp;(!c1)) G=G+</font><font
        color="#0000FF">5</font><font color="#000000">;<br>
        <b>if</b> ((G&gt;=</font><font color="#0000FF">60</font><font
        color="#000000">)&amp;&amp;(!c1)) c1=<b>true</b>;<br>
        <b>if</b> ((G&gt;</font><font color="#0000FF">0</font><font
        color="#000000">)&amp;&amp;(c1)&amp;&amp;(!c2)) G=G-</font><font
        color="#0000FF">10</font><font color="#000000">;<br>
        <b>if</b> (G&lt;</font><font color="#0000FF">0</font><font
        color="#000000">) G=</font><font color="#0000FF">0</font><font
        color="#000000">;<br>
        <b>if</b> ((G==</font><font color="#0000FF">0</font><font
        color="#000000">)&amp;&amp;(c1)&amp;&amp;(!c2)) c2=<b>true</b>;<br>
        <b>if</b> ((R&gt;</font><font color="#0000FF">0</font><font
        color="#000000">)&amp;&amp;(c2)) R=R-</font><font
        color="#0000FF">3</font><font color="#000000">;<br>
        <b>if</b> (R&lt;</font><font color="#0000FF">0</font><font
        color="#000000">) R=</font><font color="#0000FF">0</font><font
        color="#000000">;<br>
        <b>if</b> ((R==</font><font color="#0000FF">0</font><font
        color="#000000">)&amp;&amp;(c2)) c2=<b>true</b>;<br>
        }<br>
        }</font></td>
    </tr>
</table>

<p>voila, le code est nul a chiez mes c'est pas grave :) !</p>

<p>vous pouvez inverser R et G et ainsi obtenir un superbe effet
:</p>

<p><img src="croqvert.gif" width="392" height="167"></p>

<p>trop top puissant :)</p>

<p>&nbsp;</p>

<p align="center"><font color="#FF0000" size="4"><b>Troisi&eacute;me
etape : la gestion graphique :</b></font></p>

<p>et oui car on va pas utiliser ces saloperie de BGI la con !<br>
on va utiliser le celebre mode 13h !</p>

<p>pour ouvrir ce mode il faut faire :</p>

<p>mov AH,0<br>
mov AL,0x13<br>
int 10h</p>

<p>et pour le fermer :</p>

<p>mov AH,0<br>
mov AL,0x03<br>
int 10h</p>

<p>mais vous voyez, c'est de l'asm ! et c'est pour ça que c'est
bien :) !</p>

<p>pour placer un pixel sur l'ecran a l'emplacement x,y, on fait
:<br>
vram[x+y*320]=couleur du point;<br>
c pas super simple ça ? :)</p>

<p align="center"><font color="#FF0000" size="4"><b>Quatri&eacute;me
etape : rapidit&eacute; :</b></font></p>

<p>la memoire video n'est pas top super rapide en plus ecrire
dessus point par point pendant que l'ecran est en train
d'afficher le truc, c pas super ! :)</p>

<p>alors au lieu d'ecrire sur la memoire video, on va ecrire sur
la ram ! c tout simple rappeler vous notre pointeur
&quot;vram&quot; pointe sur la memoire video, ils suffit donc de
lui dire de pointer autre part ! et apr&eacute;s on copie tout dans la
memoire video !</p>

<p>pour pointer autrepart on fait ça :</p>

<p>vram = (unsigned char far*)farmalloc(70000L);</p>

<p>pour copier la page &agrave; l'ecran :</p>

<p>unsigned char far* scrn = (unsigned char far *)0xA0000000L;<br>
unsigned char far* virscrn = &amp;vram[0];<br>
asm{<br>
push ds<br>
les di, scrn<br>
lds si, virscrn<br>
mov cx, 35000<br>
rep movsw<br>
pop ds<br>
}</p>

<p>pour liberer la ram et faire pointer &quot;vram&quot; sur la
memoire video :</p>

<p>farfree(vram);<br>
vram = (unsigned char far*)0xA0000000L;</p>

<p align="center"><font color="#FF0000" size="4"><b>Cinqui&eacute;me
etape : Conclusion<br>
</b></font><font color="#FF8080">Souvent th&eacute;orie et
pratique se rejoignent: rien ne marche et on n'y comprend rien. </font></p>

<p>ouep bah je crois que tout est dit ... j'ai surement oubli&eacute;
plein de truc, mais j'espere que tout le monde a compris, la
source est livr&eacute; avec dans : fire.zip</p>

<p>pour tout commentaire, <a href="mailto:croqmort@ifrance.com">croqmort@ifrance.com</a></p>

<p>je tient a remercier : Pri$m pour ses documents sur le mode
13h</p>

<p align="right">CROQMORT</p>
</body>
</html>
