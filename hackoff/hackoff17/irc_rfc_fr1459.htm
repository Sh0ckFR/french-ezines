<HTML>
<HEAD>
<META content="text/html; charset=ISO-8859-1" http-equiv=Content-Type><TITLE>RFC 1459 - Francais</TITLE>
<META content="irc rfc internet chat" http-equiv=keywords>
</HEAD>
<BODY>
<TABLE border=0 width=100%>
  <TR>
    <TD>Groupe de Travail R&eacute;seau</TD>
    <TD align=right>J. Oikarinen</TD></TR>

  <TR>
    <TD>Requ&ecirc;te pour commentaires: 1459 
    <TD align=right>D. Reed</TD></TR>

  <TR>
    <TD></TD>
    <TD align=right>Mai 1993</TD></TR>
  </TBODY>
  </TABLE>

<P>
<CENTER>
<H1>Protocole de discussions relay&eacute;es par internet (IRC)</H1>
</CENTER>

<H3>Statut de ce m&eacute;mo </H3>
Ce m&eacute;mo d&eacute;fini un protocole exp&eacute;rimental pour la 
communaut&eacute; internet. Des discussions et suggestions 
d'am&eacute;liorations sont attendues. Veuillez vous r&eacute;f&eacute;rer 
&agrave; la version courante de &quot;IAB Official Protocol Standards&quot; pour 
conna&icirc;tre l'&eacute;tat de standardisation et le statut de ce protocole. 
La distribution de ce m&eacute;mo n'est pas limit&eacute;e. 
<H3>R&eacute;sum&eacute;</H3>
Le protocole IRC a &eacute;t&eacute; d&eacute;velopp&eacute; au cours des 4 
derni&egrave;res ann&eacute;es. Il a &eacute;t&eacute; initialement 
impl&eacute;ment&eacute; pour permettre aux utilisateurs d'un BBS pour discuter 
entre eux. Maintenant, il est utilis&eacute; sur un r&eacute;seau mondial de 
serveurs et de clients, et a du mal &agrave; g&eacute;rer sa croissance. Au 
cours des deux derni&egrave;res ann&eacute;es, le nombre moyen d'utilisateurs 
connect&eacute;s au r&eacute;seau IRC principal a &eacute;t&eacute; 
multipli&eacute; par 10.
<P>Le protocole IRC et un protocole en mode texte, dont le client le plus simple 
est n'importe quel programme de TCP capable de se connecter &agrave; un serveur.
<P>
<H3>Table des mati&egrave;res</H3>

<PRE>   <A href="irc_rfc_fr1459.htm#1">1.  Introduction</A>
      <A href="irc_rfc_fr1459.htm#11">1.1  Serveurs</A>
      <A href="irc_rfc_fr1459.htm#12">1.2  Clients</A>
         <A href="irc_rfc_fr1459.htm#121">1.2.1 Op&eacute;rateurs</A>
      <A href="irc_rfc_fr1459.htm#13">1.3 Canaux</A>
      <A href="irc_rfc_fr1459.htm#131">1.3.1 Op&eacute;rateurs de canaux</A>
   <A href="irc_rfc_fr1459.htm#2">2. Sp&eacute;cification IRC</A>
      <A href="irc_rfc_fr1459.htm#21">2.1 Aper&ccedil;u</A>
      <A href="irc_rfc_fr1459.htm#22">2.2 Les jeux de caract&egrave;res</A>
      <A href="irc_rfc_fr1459.htm#23">2.3 Messages</A>
         <A href="irc_rfc_fr1459.htm#231">2.3.1 Le format de message en 'pseudo' BNF</A>
      <A href="irc_rfc_fr1459.htm#24">2.4 R&eacute;ponses num&eacute;riques</A>
   <A href="irc_rfc_fr1459.htm#3">3. Concepts IRC</A>
      <A href="irc_rfc_fr1459.htm#31">3.1 Communication un &agrave; un</A>
      <A href="irc_rfc_fr1459.htm#32">3.2 Un &agrave; plusieurs</A>
         <A href="irc_rfc_fr1459.htm#321">3.2.1 A une liste</A>
         <A href="irc_rfc_fr1459.htm#322">3.2.2 A un groupe (canal)</A>
         <A href="irc_rfc_fr1459.htm#323">3.2.3 A un masque d'h&ocirc;te/de serveur</A>
      <A href="irc_rfc_fr1459.htm#33">3.3 Un &agrave; tous</A>
         <A href="irc_rfc_fr1459.htm#331">3.3.1 Client &agrave; client</A>
         <A href="irc_rfc_fr1459.htm#332">3.3.2 Client &agrave; serveur</A>
         <A href="irc_rfc_fr1459.htm#333">3.3.3 Serveur &agrave; serveur</A>
   <A href="irc_rfc_fr1459.htm#4">4. D&eacute;tails des messages</A>
      <A href="irc_rfc_fr1459.htm#41">4.1 Etablissement de connection</A>
         <A href="irc_rfc_fr1459.htm#411">4.1.1 Message PASSWORD </A>
         <A href="irc_rfc_fr1459.htm#412">4.1.2 Message NICK</A>
         <A href="irc_rfc_fr1459.htm#413">4.1.3 Message USER</A>
         <A href="irc_rfc_fr1459.htm#414">4.1.4 Message SERVER</A>
         <A href="irc_rfc_fr1459.htm#415">4.1.5 Message OPER</A>
         <A href="irc_rfc_fr1459.htm#416">4.1.6 Message QUIT</A>
         <A href="irc_rfc_fr1459.htm#417">4.1.7 Message SQUIT</A>
      <A href="irc_rfc_fr1459.htm#42">4.2 Op&eacute;rations sur les canaux</A>
         <A href="irc_rfc_fr1459.htm#421">4.2.1 Message JOIN</A>
         <A href="irc_rfc_fr1459.htm#422">4.2.2 Message PART</A>
         <A href="irc_rfc_fr1459.htm#423">4.2.3 Message MODE</A>
            <A href="irc_rfc_fr1459.htm#4231">4.2.3.1 Les modes des canaux</A>
            <A href="irc_rfc_fr1459.htm#4232">4.2.3.2 Les modes des utilisateurs</A>
         <A href="irc_rfc_fr1459.htm#424">4.2.4 Message TOPIC</A>
         <A href="irc_rfc_fr1459.htm#425">4.2.5 Message NAMES</A>
         <A href="irc_rfc_fr1459.htm#426">4.2.6 Message LIST</A>
         <A href="irc_rfc_fr1459.htm#427">4.2.7 Message INVITE</A>
         <A href="irc_rfc_fr1459.htm#428">4.2.8 Message KICK</A>
      <A href="irc_rfc_fr1459.htm#43">4.3 Requ&ecirc;tes et commandes des serveurs</A>
         <A href="irc_rfc_fr1459.htm#431">4.3.1 Message VERSION</A>
         <A href="irc_rfc_fr1459.htm#432">4.3.2 Message STATS</A>
         <A href="irc_rfc_fr1459.htm#433">4.3.3 Message LINKS</A>
         <A href="irc_rfc_fr1459.htm#434">4.3.4 Message TIME</A>
         <A href="irc_rfc_fr1459.htm#435">4.3.5 Message CONNECT</A>
         <A href="irc_rfc_fr1459.htm#436">4.3.6 Message TRACE</A>
         <A href="irc_rfc_fr1459.htm#437">4.3.7 Message ADMIN</A>
         <A href="irc_rfc_fr1459.htm#438">4.3.8 Message INFO</A>
      <A href="irc_rfc_fr1459.htm#44">4.4 Envoi de messages</A>
         <A href="irc_rfc_fr1459.htm#441">4.4.1 Messages priv&eacute;s</A>
         <A href="irc_rfc_fr1459.htm#442">4.4.2 NOTICE</A>
      <A href="irc_rfc_fr1459.htm#45">4.5 Requ&ecirc;tes bas&eacute;es sur les utilisateurs</A>
         <A href="irc_rfc_fr1459.htm#451">4.5.1 Message WHO</A>
         <A href="irc_rfc_fr1459.htm#452">4.5.2 Message WHOIS</A>
         <A href="irc_rfc_fr1459.htm#453">4.5.3 Message WHOWAS</A>
      <A href="irc_rfc_fr1459.htm#46">4.6 Messages divers</A>
         <A href="irc_rfc_fr1459.htm#461">4.6.1 Message KILL </A>
         <A href="irc_rfc_fr1459.htm#462">4.6.2 Message PING</A>
         <A href="irc_rfc_fr1459.htm#463">4.6.3 Message PONG</A>
         <A href="irc_rfc_fr1459.htm#464">4.6.4 Message ERROR</A>
   <A href="irc_rfc_fr1459.htm#5">5. Messages optionnels</A>
      <A href="irc_rfc_fr1459.htm#51">5.1 Message AWAY</A>
      <A href="irc_rfc_fr1459.htm#52">5.2 Commande REHASH</A>
      <A href="irc_rfc_fr1459.htm#53">5.3 Commande RESTART</A>
      <A href="irc_rfc_fr1459.htm#54">5.4 Message SUMMON</A>
      <A href="irc_rfc_fr1459.htm#55">5.5 Message USER</A>
      <A href="irc_rfc_fr1459.htm#56">5.6 Commande OPERWALL</A>
      <A href="irc_rfc_fr1459.htm#57">5.7 Message USERHOST</A>
      <A href="irc_rfc_fr1459.htm#58">5.8 Message ISON</A>
   <A href="irc_rfc_fr1459.htm#6">6. R&eacute;ponses </A>
      <A href="irc_rfc_fr1459.htm#61">6.1 R&eacute;ponses d'erreur</A>
      <A href="irc_rfc_fr1459.htm#62">6.2 R&eacute;ponses aux commandes</A>
      <A href="irc_rfc_fr1459.htm#63">6.3 Nombres r&eacute;serv&eacute;s</A>
   <A href="irc_rfc_fr1459.htm#7">7. Authentification des clients et serveurs</A>
   <A href="irc_rfc_fr1459.htm#8">8. Impl&eacute;mentations actuelles</A>
      <A href="irc_rfc_fr1459.htm#81">8.1 Protocole R&eacute;seau: TCP</A>
         <A href="irc_rfc_fr1459.htm#811">8.1.1 Support des sockets Unix</A>
      <A href="irc_rfc_fr1459.htm#82">8.2 Traitement des commandes</A>
      <A href="irc_rfc_fr1459.htm#83">8.3 Distribution de messages</A>
      <A href="irc_rfc_fr1459.htm#84">8.4 La vie d'une connection</A>
      <A href="irc_rfc_fr1459.htm#85">8.5 Etablissement d'une connection serveur &agrave; client</A>
      <A href="irc_rfc_fr1459.htm#86">8.6 Etablissement d'une connection serveur/serveur</A>
         <A href="irc_rfc_fr1459.htm#861">8.6.1 Echange des informations d'&eacute;tat des serveurs &agrave; la connection</A>
      <A href="irc_rfc_fr1459.htm#87">8.7 Terminaison des connections serveur/client</A>
      <A href="irc_rfc_fr1459.htm#88">8.8 Terminaison des connections serveur/serveur</A>
      <A href="irc_rfc_fr1459.htm#9">8.9 Suivi des changements de pseudonymes</A>
      <A href="irc_rfc_fr1459.htm#8_10">8.10 Contr&ocirc;le d'inondation des clients</A>
      <A href="irc_rfc_fr1459.htm#8_11">8.11 Recherches non bloquantes</A>
         <A href="irc_rfc_fr1459.htm#8_11_1">8.11.1 Recherche du nom d'h&ocirc;te (DNS)</A>
         <A href="irc_rfc_fr1459.htm#8_11_2">8.11.2 Recherche du nom d'utilisateur (IDENT)</A>
      <A href="irc_rfc_fr1459.htm#8_12">8.12 Fichier de configuration</A>
         <A href="irc_rfc_fr1459.htm#8_12_1">8.12.1 Autorisation des connections de clients</A>
         <A href="irc_rfc_fr1459.htm#8_12_2">8.12.2 Op&eacute;rateurs</A>
         <A href="irc_rfc_fr1459.htm#8_12_3">8.12.3 Autorisation des connections de serveurs</A>
         <A href="irc_rfc_fr1459.htm#8_12_4">8.12.4 Admin</A>
      <A href="irc_rfc_fr1459.htm#8_13">8.13 Appartenance &agrave; un canal.</A>
   <A href="irc_rfc_fr1459.htm#9">9. Probl&egrave;mes actuels</A>
      <A href="irc_rfc_fr1459.htm#91">9.1 Localisation</A>
      <A href="irc_rfc_fr1459.htm#92">9.2 Identifiants</A>
         <A href="irc_rfc_fr1459.htm#921">9.2.1 Pseudonymes</A>
         <A href="irc_rfc_fr1459.htm#922">9.2.2 Canaux</A>
         <A href="irc_rfc_fr1459.htm#923">9.2.3 Serveurs</A>
      <A href="irc_rfc_fr1459.htm#93">9.3 Algorithmes</A>
   <A href="irc_rfc_fr1459.htm#_10">10. Support actuel et disponibilit&eacute;</A>
   <A href="irc_rfc_fr1459.htm#_11">11. Consid&eacute;rations de s&eacute;curit&eacute;</A>
   <A href="irc_rfc_fr1459.htm#_12">12. Adresses des auteurs</A>
</PRE>

<H1><A name=1>1.</A> Introduction</H1>
Le protocole IRC (Internet Relay Chat) a &eacute;t&eacute; con&ccedil;u pendant 
de nombreuses ann&eacute;es pour l'usage de conf&eacute;rences en mode texte. Ce 
document d&eacute;crit le protocole IRC actuel.
<P>Le protocole IRC a &eacute;t&eacute; d&eacute;velopp&eacute; sur des 
syst&egrave;mes utilisant le protocole r&eacute;seau TCP/IP, bien qu'il n'y ait 
pas de raison que cela reste la seule sph&egrave;re dans laquelle il 
op&egrave;re.
<P>L'IRC, en lui-m&ecirc;me, est un syst&egrave;me de 
t&eacute;l&eacute;conf&eacute;rence qui (gr&acirc;ce &agrave; l'utilisation d'un 
mod&egrave;le client/serveur) et se pr&ecirc;te &agrave; une ex&eacute;cution 
sur de nombreuses machines, de fa&ccedil;on distribu&eacute;e. Une configuration 
type comprend un processus unique (le serveur) qui fourni un point 
d'acc&egrave;s pour les clients (ou d'autres serveurs), et qui traite 
l'acheminement / le multiplexage requis de messages, ainsi que d'autres 
fonctions. 
<H2><A name=11>1.1</A> Serveurs</H2>
Le serveur est la colonne vert&eacute;brale de l'IRC. Il fournit un point auquel 
peuvent les clients peuvent se connecter pour parler entre eux, et un point 
auquel les autres serveurs peuvent se connecter, formant un r&eacute;seau IRC. 
La seule configuration de r&eacute;seau autoris&eacute;e est celle d'un arbre 
[voir Fig. 1] o&ugrave; chaque serveur agit comme un noeud central pour la 
partie du r&eacute;seau qu'il voit.<BR>
<PRE>                         [ Serveur 15 ]  [ Serveur 13 ] [ Serveur 14]
                                 /                \         /
                                /                  \       /
        [ Serveur 11 ] ------ [ Serveur 1 ]       [ Serveur 12]
                              /        \          /
                             /          \        /
                  [ Serveur 2 ]          [ Serveur 3 ]
                    /       \                      \
                   /         \                      \
           [ Serveur 4 ]    [ Serveur 5 ]         [ Serveur 6 ]
            /    |    \                           /
           /     |     \                         /
          /      |      \____                   /
         /       |           \                 /
[ Serveur 7 ] [ Serveur 8 ] [ Serveur 9 ]   [ Serveur 10 ]

                                  :
                               [ etc. ]
                                  :
[ Fig. 1. Format d'un r&eacute;seau de serveur IRC ]
</PRE>

<H2><A name=12>1.2</A> Clients</H2>
Un client est un truc qui se connecte &agrave; un serveur et qui n'est pas un 
autre serveur. Chaque client est diff&eacute;renci&eacute; des autres clients 
par un pseudonyme unique ayant une longueur maximale de neuf (9) 
caract&egrave;res. Voir les r&egrave;gles de grammaire du protocole pour ce qui 
est autoris&eacute; et ce qui ne l'est pas dans un pseudonyme. En plus de leur 
pseudonyme, tous les serveurs doivent conna&icirc;tre les informations suivantes 
sur tous les clients : le vrai nom de l'h&ocirc;te sur lequel le client est 
ex&eacute;cut&eacute;, le nom de l'utilisateur du client sur cet h&ocirc;te, et 
le serveur auquel le client est connect&eacute;.
<P>
<H3><A name=121>1.2.1</A> Op&eacute;rateurs</H3>
Pour permettre de maintenir un niveau d'ordre raisonnable dans un r&eacute;seau 
IRC, une cat&eacute;gorie de clients sp&eacute;ciale (les op&eacute;rateurs) est 
autoris&eacute;e &agrave; ex&eacute;cuter des fonctions de maintenance 
g&eacute;n&eacute;rale sur le r&eacute;seau. Bien que les pouvoirs donn&eacute;s 
aux op&eacute;rateurs peuvent &ecirc;tre consid&eacute;r&eacute;s comme 
'dangereux', ils sont n&eacute;anmoins indispensables. Les op&eacute;rateurs 
doivent &ecirc;tre capable de faire certaines t&acirc;ches de base, telles que 
la d&eacute;connexion de la reconnection aux serveurs, ce qui est 
n&eacute;cessaire pour pr&eacute;venir les probl&egrave;mes &agrave; long terme 
de mauvais routage r&eacute;seau. Etant donn&eacute; cette 
n&eacute;cessit&eacute;, le protocole d&eacute;crit ici n'autorise que les 
op&eacute;rateurs &agrave; effectuer ces fonctions. Voir les section <A 
href="irc_rfc_fr1459.htm#417">4.1.7</A> 
(SQUIT) et <A 
href="irc_rfc_fr1459.htm#435">4.3.5</A> 
(CONNECT).
<P>Un pouvoir plus controvers&eacute; des op&eacute;rateurs est la 
possibilit&eacute; de retirer par la force un utilisateur connect&eacute; au 
r&eacute;seau, c'est &agrave; dire que les op&eacute;rateurs peuvent clore une 
connection entre un client et un serveur. La justification &agrave; cela est 
d&eacute;licate puisque son abus est &agrave; la fois destructif et ennuyant. 
Pour plus de d&eacute;tails concernant ce type d'actions, voir la section <A 
href="irc_rfc_fr1459.htm#461">4.6.1</A> 
(KILL).
<P>
<H2><A name=13>1.3</A> Les canaux </H2>
Un canal est groupe nomm&eacute; d'un ou plusieurs clients qui recevront tous 
les messages adress&eacute;s &agrave; ce canal. Les canaux sont 
cr&eacute;&eacute;s implicitement quand le premier client y acc&egrave;de, et le 
canal dispara&icirc;t lorsque le dernier client le quitte. Tant qu'un canal 
existe, tous les clients peuvent y acc&eacute;der en utilisant le nom du canal.
<P>Les noms de canaux sont des cha&icirc;nes de caract&egrave;res 
(commen&ccedil;ant par un caract&egrave;re '&amp;' ou '#') d'une longueur 
maximale de 200 caract&egrave;res. En dehors du fait que le premier 
caract&egrave;re doive &ecirc;tre un '&amp;' ou un '#', la seule restriction sur 
le nom d'un canal est qu'il ne peut pas contenir d'espace (' '), de 
contr&ocirc;le G (^G ou ASCII 7), ou de virgule (',' qui est utilis&eacute;e 
comme s&eacute;parateur de liste dans le protocole).
<P>Il y a deux types de canaux autoris&eacute;s par ce protocole. L'un est un 
canal distribu&eacute;, qui est connu de tous les serveurs connect&eacute;s au 
r&eacute;seau. Ces canaux commencent par un '#'. L'autre type de canal, 
reconnaissable &agrave; leur nom qui commence par un '&amp;', est marqu&eacute; 
comme n'&eacute;tant accessible qu'aux clients du serveur o&ugrave; le canal 
existe. En plus de ces deux types, il existe diff&eacute;rents modes de canaux, 
permettant de modifier leur comportement individuel. Voir la section <A 
href="irc_rfc_fr1459.htm#423">4.2.3</A> 
(commande MODE) pour avoir plus de d&eacute;tails &agrave; ce sujet. 
<P>Pour cr&eacute;er un nouveau canal, ou pour faire partie d'un canal existant, 
un utilisateur doit acc&eacute;der au canal. Si le canal n'existe pas avant 
l'acc&egrave;s, le canal est cr&eacute;&eacute; et l'utilisateur cr&eacute;ateur 
devient op&eacute;rateur de canal. Si le canal existait d&eacute;j&agrave; au 
moment de l'acc&egrave;s, l'autorisation ou non d'acc&egrave;s d&eacute;pend du 
mode du canal. Par exemple, si le canal est en &quot;invit&eacute;s 
uniquement&quot; (+i), vous ne pourrez joindre le canal que si vous &ecirc;tes 
invit&eacute;s. Le protocole sp&eacute;cifie qu'un utilisateur peux &ecirc;tre 
membre de plusieurs canaux &agrave; la fois, mais une limite de dix (10) canaux 
est recommand&eacute;e comme &eacute;tant amplement suffisante aussi bien pour 
les utilisateurs novices que pour les experts. Voir la section <A 
href="irc_rfc_fr1459.htm#8_13">8.13</A> 
pour plus d'informations &agrave; ce sujet. 
<P>Si le r&eacute;seau IRC devient disjoint en raison d'une division entre deux 
serveurs, le canal, de chaque c&ocirc;t&eacute;, est compos&eacute; de ceux des 
clients qui sont connect&eacute;s aux serveurs du c&ocirc;t&eacute; respectif de 
la division, et disparaissent d'un des c&ocirc;t&eacute;s de la division. 
Lorsque la division est soign&eacute;e, les serveurs se reconnectant se 
communiquent entre eux qui, d'apr&egrave;s eux, est dans chaque canal, et le 
mode de ce canal. Si le canal existe des deux cot&eacute;s, les acc&egrave;s et 
les modes sont interpr&eacute;t&eacute;s de fa&ccedil;on inclusive pour que les 
deux c&ocirc;t&eacute;s de la nouvelle connection soient d'accord sur quels 
clients sont dans quels canaux et quels modes ont les canaux. 
<H3><A name=131>1.3.1</A> Les op&eacute;rateurs de canaux</H3>
Les op&eacute;rateurs de canaux (aussi appel&eacute;s &quot;chanop&quot;) sur un 
canal donn&eacute;, sont consid&eacute;r&eacute;s comme &eacute;tant 
propri&eacute;taires du &quot;canal&quot;. A ce titre, les op&eacute;rateurs de 
canaux sont dot&eacute;s de certains pouvoirs qui leur permettent de garder le 
contr&ocirc;le et une forme sanit&eacute; &agrave; leur canal. En tant que 
propri&eacute;taire d'un canal, un op&eacute;rateur de canal n'est pas tenu 
d'avoir de raisons pour agir, bien que si leur action sont 
g&eacute;n&eacute;ralement antisociales ou abusives, il pourrait &ecirc;tre 
raisonable de demander a un op&eacute;rateur IRC d'intervenir, ou pour les 
utilisateur de simplement quitter et aller ailleurs pour former leur propre 
canal. 
<P>Les commandes r&eacute;serv&eacute;es aux op&eacute;rateurs de canaux sont 
:<BR>KICK - Ejecte un client d'un canal<BR>MODE - Change le mode d'un 
canal<BR>INVITE - Invite un client dans un canal &agrave; acc&egrave;s sur 
invitation (mode +i)<BR>TOPIC - Change le titre du canal, dans un canal en mode 
+t<BR>
<P>Un op&eacute;rateur de canal est identifi&eacute; par un symbole '@' devant 
son pseudonyme &agrave; chaque fois qu'il est utilis&eacute; en association avec 
le canal (c'est &agrave; dire lors des r&eacute;ponses aux commandes NAMES, WHO 
et WHOIS) 
<H1><A name=2>2.</A> La sp&eacute;cification IRC</H1>

<H2><A name=21>2.1</A> Aper&ccedil;u</H2>
Le protocole d&eacute;crit ici vaut aussi bien pour les connections des serveurs 
que pour celles des clients. N&eacute;anmoins, il y a plus de restrictions sur 
les connections des clients (qui sont consid&eacute;r&eacute;s comme plus 
douteuses) que les connections des serveurs. 
<H2><A name=22>2.2</A> Les jeux de caract&egrave;res</H2>
Aucun jeu de caract&egrave;res n'est impos&eacute;. Le protocole est bas&eacute; 
sur un jeu de caract&egrave;re de huit (8) bits, qui forment un octet ; 
cependant, certains codes sont utilis&eacute;s en tant que codes de 
contr&ocirc;le, et agissent comme d&eacute;limiteurs de messages. 
<P>Ind&eacute;pendamment du fait qu'il s'agisse d'un protocole 8 bits, les 
d&eacute;limiteurs et les mots-cl&eacute;s sont tels que le protocole est 
utilisable d'un terminal USASCII et d'une connection telnet. 
<P>Etant donn&eacute;e l'origine scandinave de l'IRC, les caract&egrave;res {}| 
sont consid&eacute;r&eacute;s comme &eacute;tant respectivement les 
&eacute;quivalent en minuscules des caract&egrave;res []\. Ceci est 
particuli&egrave;rement important pour d&eacute;terminer l'&eacute;quivalence de 
deux pseudonymes. 
<H2><A name=23>2.3</A> Messages</H2>
Les serveurs et les clients s'envoient chacun des messages qui peuvent ou non 
g&eacute;n&eacute;rer une r&eacute;ponse. Si le message contient une commande 
valide, comme il est d&eacute;crit dans les sections suivantes, le client 
devrait s'attendre &agrave; une r&eacute;ponse comme sp&eacute;cifi&eacute;, 
mais il n'est pas conseill&eacute; d'attendre &eacute;ternellement une 
r&eacute;ponse. La communication de client &agrave; serveur, et de serveur 
&agrave; serveur est essentiellement de nature asynchrone. 
<P>Chaque message IRC peut contenir jusqu'&agrave; trois parties : le 
pr&eacute;fixe (optionnel), la commande, et les param&egrave;tre de la commande 
(il peut y en avoir jusqu'&agrave; 15). Le pr&eacute;fixe, la commande, et tous 
les param&egrave;tres sont s&eacute;par&eacute;s par un (ou plusieurs) 
caract&egrave;re(s) ASCII espace (0x20). 
<P>La pr&eacute;sence d'un pr&eacute;fixe est indiqu&eacute;e par un simple 
caract&egrave;re ASCII deux-points (':', 0x3b), qui doit &ecirc;tre le premier 
caract&egrave;re du message. Il ne doit pas y avoir de trou (d'espace blanc) 
entre les deux-points et le pr&eacute;fixe. Le pr&eacute;fixe est utilis&eacute; 
pour indiquer la v&eacute;ritable origine du message. S'il n'y a pas de 
pr&eacute;fixe, le message est consid&eacute;r&eacute; comme ayant pour origine 
la connection de laquelle il est issu. Les clients ne doivent pas utiliser de 
pr&eacute;fixe lorsqu'ils envoient un message d'eux-m&ecirc;mes. S'il utilise un 
pr&eacute;fixe, le seul valable est le pseudonyme associ&eacute; au client. Si 
la source identifi&eacute;e par le pr&eacute;fixe n'est pas trouv&eacute;e dans 
la base de donn&eacute;e interne du serveur, ou si la source est 
enregistr&eacute;e avec une liaison diff&eacute;rente de celle avec laquelle le 
message est arriv&eacute;, le serveur doit ignorer le message en silence. 
<P>La commande doit soit &ecirc;tre soit une commande IRC valide, soit un nombre 
de trois (3) chiffres repr&eacute;sent&eacute;s en texte ASCII. 
<P>Les messages IRC sont toujours des lignes de caract&egrave;res 
termin&eacute;s par une paire CR-LF (retour chariot - saut de ligne), et ces 
messages ne doivent pas d&eacute;passer 512 caract&egrave;res de long, en 
comptant tous les caract&egrave;res y compris le CR-LF final. 
C'est-&agrave;-dire, qu'il y a un maximum de 510 caract&egrave;res pour la 
commande et ses param&egrave;tres. Il n'y a pas de syst&egrave;me permettant une 
ligne de continuation de message. Voir la section <A 
href="irc_rfc_fr1459.htm#7">7</A> 
pour les impl&eacute;mentations actuelles. 
<H3><A name=231>2.3.1</A> Le format de message en 'pseudo' BNF</H3>
Les messages du protocole doivent &ecirc;tre extrait du flux continu d'octets. 
La solution actuelle consiste &agrave; d&eacute;signer deux caract&egrave;res 
donn&eacute;s, CR et LF, comme s&eacute;parateurs de messages. Les messages 
vides sont ignor&eacute;s en silence, ce qui permet l'usage d'une suite de CR-LF 
entre les messages sans probl&egrave;mes suppl&eacute;mentaires. 
<P>Le message extrait est d&eacute;compos&eacute; en un &lt;pr&eacute;fixe&gt;, 
&lt;commande&gt; et liste de param&egrave;tres correspondant soit au composant 
&lt;milieu&gt; ou &lt;fin&gt;. 
<P>La repr&eacute;sentation BNF de ceci est :<BR>&lt;message&gt; ::= [':' 
&lt;pr&eacute;fixe&gt; &lt;espace&gt; ] &lt;command&gt; &lt;params&gt; 
&lt;crlf&gt; <BR>&lt;pr&eacute;fixe&gt; ::= &lt;nom de serveur&gt; | 
&lt;pseudo&gt; [ '!' &lt;utilisateur&gt; ] [ '@' &lt;h&ocirc;te&gt; ] 
<BR>&lt;command&gt; ::= &lt;lettre&gt; { &lt;lettre&gt; } | &lt;nombre&gt; 
&lt;nombre&gt; &lt;nombre&gt; <BR>&lt;espace&gt; ::= ' ' { ' ' } 
<BR>&lt;params&gt; ::= &lt;espace&gt; [ ':' &lt;fin&gt; | &lt;milieu&gt; 
&lt;params&gt; ]<BR><BR>&lt;milieu&gt; ::= &lt;Toute s&eacute;quence <B>non 
vide</B> d'octets &agrave; l'exclusion de ESPACE, NUL, CR, LF, le premier 
d'entre eux &eacute;tant diff&eacute;rent de ':'&gt; <BR>&lt;fin&gt; ::= 
&lt;Toute suite, &eacute;ventuellement vide, d'octets, &agrave; l'exception de 
NUL, CR et LF &gt; <BR>&lt;crlf&gt; ::= CR LF 
<P>NOTES:<BR>1) &lt;espace&gt; est constitu&eacute; uniquement de 
caract&egrave;re(s) ESPACE (0x20). Notez particuli&egrave;rement que la 
TABULATION et tout autre caract&egrave;re de contr&ocirc;le sont 
consid&eacute;r&eacute;s comme ESPACE-NON-BLANC. 
<P>2) Apr&egrave;s avoir extrait la liste de param&egrave;tre, tous les 
param&egrave;tres sont &eacute;gaux, et correspondent soit &agrave; 
&lt;milieu&gt; soit &agrave; &lt;fin&gt;. &lt;Fin&gt; est une simple astuce 
syntaxique pour autoriser ESPACE dans le param&egrave;tre. 
<P>3) Le fait que CR et LF ne puissant pas appara&icirc;tre dans la cha&icirc;ne 
param&egrave;tre est une simple assertion. Cela pourrait changer dans le futur. 
<P>4) Le caract&egrave;re NUL n'est pas sp&eacute;cial dans la construction du 
message, et pourrait a priori &ecirc;tre &agrave; l'int&eacute;rieur d'un 
message, mais cela complexifierait la gestion ordinaire des cha&icirc;nes en C. 
C'est pourquoi NUL n'est pas autoris&eacute; dans les messages. 
<P>5) Le dernier param&egrave;tre peut &ecirc;tre une cha&icirc;ne vide. 
<P>6) L'utilisation d'un pr&eacute;fixe &eacute;tendu ([ '!' &lt;utilisateur&gt; 
] [ '@' &lt;h&ocirc;te&gt; ]) ne doit pas &ecirc;tre utilis&eacute; dans la 
communication entre serveurs, et est destin&eacute; uniquement &agrave; la 
communication serveur vers client, dans le but de fournir au client des 
informations utiles &agrave; propos de l'origine du message sans 
n&eacute;cessiter de requ&ecirc;tes suppl&eacute;mentaires. 
<P>La plupart des messages du protocole sp&eacute;cifient une s&eacute;mantique 
additionnelle, et la syntaxe pour les cha&icirc;nes de param&egrave;tres 
extraites est dict&eacute;e par leur position dans la liste. Par exemple, de 
nombreuses commandes de serveurs vont consid&eacute;rer que le premier 
param&egrave;tre apr&egrave;s la commande est la liste de destinataires, ce qui 
peut &ecirc;tre d&eacute;crit avec :<BR>&lt;destinataire&gt; ::= 
&lt;&agrave;&gt; [ &quot;,&quot; &lt; destinataire &gt; ] <BR>&lt;&agrave;&gt; 
::= &lt;canal&gt; | &lt; utilisateur &gt; '@' &lt;nom de serveur&gt; | 
&lt;pseudo&gt; | &lt;masque&gt; <BR>&lt;canal&gt; ::= ('#' | '&amp;') 
&lt;cha&icirc;ne canal&gt; <BR>&lt;nom de serveur&gt; ::= &lt;h&ocirc;te&gt; 
<BR>&lt;h&ocirc;te&gt; ::= voir RFC 952 [DNS:4] pour les d&eacute;tails sur les 
noms d'h&ocirc;te autoris&eacute;s <BR>&lt;pseudo&gt; ::= &lt;lettre&gt; { 
&lt;lettre&gt; | &lt;nombre&gt; | &lt;sp&eacute;cial&gt; } <BR>&lt;masque&gt; 
::= ('#' | '$') &lt;cha&icirc;ne canal&gt; <BR>&lt;cha&icirc;ne canal&gt; ::= 
&lt;n'importe quel code 8bits except&eacute; ESPACE, BELL, NUL, CR, LF et 
virgule (,)&gt; 
<P>Les autres param&egrave;tres sont :<BR>&lt;utilisateur&gt; ::= &lt;non 
blanc&gt; { &lt; non blanc &gt; } <BR>&lt;lettre&gt; ::= 'a' ... 'z' | 'A' ... 
'Z' <BR>&lt;nombre&gt; ::= '0' ... '9' <BR>&lt;sp&eacute;cial&gt; ::= '-' | '[' 
| ']' | '\' | '`' | '^' | '{' | '}' 
<P>&lt; non blanc &gt; ::= &lt; n'importe quel code 8bits except&eacute; ESPACE 
(0x20), NUL(0x0), CR(0xd), et LF(0xa) &gt;<BR>
<H2><A name=24>2.4</A> R&eacute;ponses num&eacute;riques</H2>
La plupart des messages envoy&eacute;s aux serveurs g&eacute;n&egrave;re une 
r&eacute;ponse. Les r&eacute;ponses les plus courantes sont des r&eacute;ponses 
num&eacute;riques, aussi bien pour les messages d'erreurs que pour les 
r&eacute;ponses normales. La r&eacute;ponse num&eacute;rique est envoy&eacute; 
comme un message contenant le pr&eacute;fixe de l'exp&eacute;diteur, le nombre 
de trois chiffres, et le destinataire de la r&eacute;ponse. Une r&eacute;ponse 
num&eacute;rique ne peut pas &eacute;maner d'un client, et tout message de ce 
style re&ccedil;u par un serveur doit &ecirc;tre ignor&eacute; silencieusement. 
Hormis cela, une r&eacute;ponse num&eacute;rique est un message comme un autre, 
si ce n'est que le mot-cl&eacute; est compos&eacute; de trois chiffres, 
plut&ocirc;t que d'une suite de lettre. Une liste des r&eacute;ponses possible 
est fournie &agrave; la section <A 
href="irc_rfc_fr1459.htm#6">6</A>. 

<H1><A name=3>3.</A> Concepts IRC</H1>
Cette section d&eacute;crit les concepts sous-jacents &agrave; l'organisation du 
protocole IRC et comment les impl&eacute;mentations actuelles d&eacute;livrent 
les diff&eacute;rentes classes de messages. 
<P>
<PRE>
                          1--\
                              A        D---4
                          2--/ \      /
                                B----C
                               /      \
                              3        E
   Serveurs: A, B, C, D, E         Clients: 1, 2,3, 4

                    [ Fig. 2. Exemple d'un petit r&eacute;seau IRC ]
</PRE>

<H2><A name=31>3.1</A> Communication un &agrave; un</H2>
La communication sur une base un &agrave; un n'a lieu que par les clients, 
&eacute;tant donn&eacute; que la plupart du trafic serveur/serveur n'est pas 
caus&eacute; par les serveurs qui se parlent entre eux. Afin de fournir un moyen 
s&eacute;curis&eacute; pour les clients de parler entre eux, il est 
n&eacute;cessaire que tous les serveurs, pour atteindre un client, soient 
capables d'envoyer un message dans une seule direction sur l'arbre des 
connections. Le chemin d'un message remis est le plus court entre deux points 
sur l'arbre. 
<P>Les exemples suivants se r&eacute;f&egrave;rent tous &agrave; la figure 2 
ci-dessus. 
<DL>
  <DT>Exemple 1 : 
  <DD>Un message entre les clients 1et 2 n'est vu que par le serveur A, qui 
  l'envoi directement au client 2.<BR>
  <DT>Exemple 2 : 
  <DD>Un message entre les clients 1 et 3 est vu par les serveurs A &amp; B, et 
  par le client 3. Aucun autre client n'est autoris&eacute; &agrave; voir le 
  message.<BR>
  <DT>Exemple 3 : 
  <DD>Un message entre les clients 2 et 4 n'est vu que par les serveurs A, C, C 
  &amp; D et par le client 4.<BR></DD></DL>

<H2><A name=32>3.2</A> Un &agrave; plusieurs</H2>
Le but principal d'IRC est de fournir un forum qui permette de r&eacute;aliser 
des conf&eacute;rences de fa&ccedil;on simple et efficace (conversation un 
&agrave; plusieurs). L'IRC offre plusieurs moyens d'accomplir cela, chacun avec 
des buts diff&eacute;rents. 
<H3><A name=321>3.2.1</A> A une liste</H3>
Le moyen le moins efficace d'avoir une conversation un &agrave; plusieurs 
consiste, pour chaque client, &agrave; parler &agrave; une 'liste' 
d'utilisateurs. La fa&ccedil;on dont cela &agrave; lieu est triviale : chaque 
client donne une liste de destinataires auxquels le message doit &ecirc;tre 
d&eacute;livr&eacute;, et le serveur d&eacute;coupe le message et en distribue 
une copie &agrave; chacun des destinataires. Ce n'est pas aussi efficace que 
l'utilisation d'un groupe puisque la liste de destinataire est 
d&eacute;compos&eacute;e et la distribution a lieu sans v&eacute;rifier que le 
message soit envoy&eacute; en double sur un m&ecirc;me chemin. 
<H3><A name=322>3.2.2</A> A un groupe (canal)</H3>
Sur IRC, un canal a un r&ocirc;le &eacute;quivalent &agrave; celui d'un groupe 
de multi-diffusion ; leur existence est dynamique (ils vont et viennent au fur 
et &agrave; mesure que les gens acc&egrave;dent et quittent les canaux) et la 
conversation qui a lieu sur un canal n'est envoy&eacute; qu'aux serveurs qui ont 
des utilisateurs sur ce canal. Cette action est alors 
r&eacute;p&eacute;t&eacute;e par chaque combinaison client/serveur 
jusqu'&agrave; ce que le message original est atteint tous les membres d'un 
canal. 
<P>Les exemples suivants se r&eacute;f&egrave;rent tous &agrave; la figure 2. 
<DL>
  <DT>Exemple 4 : 
  <DD>Pour tout canal qui contient un seul client, les messages du canal vont au 
  serveur et nul par ailleurs.<BR>
  <DT>Exemple 5 : 
  <DD>Il y a deux clients dans un canal. Tous les messages traversent le chemin 
  comme s'ils &eacute;taient des messages priv&eacute;s entre les deux clients 
  en dehors du canal.<BR>
  <DT>Exemple 6 : 
  <DD>Les clients 1, 2 et 3 sont dans un canal. Tous les messages 
  adress&eacute;s &agrave; un canal sont envoy&eacute;s &agrave; tous les 
  clients, et &agrave; ceux des serveurs qui serraient travers&eacute; par le 
  message s'il &eacute;tait un message priv&eacute; entre deux clients. Si le 
  client 1 envoie un message, il est envoy&eacute; au client 2, et par le 
  serveur B, au client 3.&lt; </DD></DL>

<H3><A name=323>3.2.3</A> A un masque d'h&ocirc;te/de serveur</H3>
Afin de fournir aux op&eacute;rateurs IRC un m&eacute;canisme pour envoyer des 
messages &agrave; un grand nombre d'utilisateurs apparent&eacute;s, on fournit 
des masques de serveurs et d'h&ocirc;tes. Ces messages sont envoy&eacute;s 
&agrave; ceux des serveurs et des h&ocirc;tes dont l'adresse correspond au 
masque. Ces messages ne sont envoy&eacute;s qu'aux endroits o&ugrave; il y a des 
utilisateurs, de fa&ccedil;on similaire a celle des canaux. 
<H2><A name=33>3.3</A> Un &agrave; tous</H2>
Les messages un &agrave; tous peuvent &ecirc;tre d&eacute;crit comme des 
messages de type diffusion, envoy&eacute;s &agrave; tous les clients, les 
serveurs, ou les deux. Sur un grand r&eacute;seau d'utilisateurs et de serveurs, 
un simple message peut g&eacute;n&eacute;rer beaucoup de trafic, puisqu'il est 
envoy&eacute; &agrave; travers le r&eacute;seau pour atteindre toutes les 
destinations. 
<P>Pour certains messages, il est n&eacute;cessaire de les diffuser &agrave; 
tous les serveurs, de fa&ccedil;on &agrave; ce que les informations de statut de 
chaque serveur soient raisonnablement identiques entre tous les serveurs. 
<H3><A name=331>3.3.1</A> Client &agrave; client</H3>
Il n'y a pas de classe de message qui, &agrave; partir d'un simple message, 
r&eacute;sulte en un message envoy&eacute; &agrave; tous les autres clients. 
<H3><A name=332>3.3.2</A> Client &agrave; serveur</H3>
La plupart des commandes qui r&eacute;sultent en un changement d'&eacute;tat 
(tels que l'appartenance &agrave; un canal, le mode d'un canal, le statut d'un 
utilisateur, etc.) doivent &ecirc;tre, par d&eacute;faut, envoy&eacute;s 
&agrave; tous les serveurs, et cet envoi ne peut pas &ecirc;tre 
alt&eacute;r&eacute; par le client. 
<H3><A name=333>3.3.3</A> Serveur &agrave; serveur</H3>
Bien que la plupart des messages entre les serveurs soient distribu&eacute;s 
&agrave; 'tous' les autres serveurs, cela n'est n&eacute;cessaire que pour les 
messages qui affectent soit un utilisateur, soit un canal, soit un serveur. 
Etant donn&eacute; que cela constitue l'essentiel des &eacute;l&eacute;ments de 
l'IRC, la quasi-totalit&eacute; des messages issus d'un serveur est 
diffus&eacute;e &agrave; tous les autres serveurs connect&eacute;s. 
<H2><A name=4>4.</A> D&eacute;tails des messages</H2>
Les pages suivantes d&eacute;crivent les messages reconnus par les serveurs IRC 
et les clients. Toutes les commandes d&eacute;crites dans cette section doivent 
&ecirc;tre impl&eacute;ment&eacute;es par tous les serveurs utilisant ce 
protocole. 
<P>Si la r&eacute;ponse est ERR_NOSUCHSERVER est re&ccedil;ue, cela signifie que 
le param&egrave;tre &lt;serveur&gt; n'a pas &eacute;t&eacute; trouv&eacute;. Le 
serveur ne doit alors plus envoyer d'autres r&eacute;ponses pour cette commande. 

<P>Le serveur auquel un client est connect&eacute; doit traiter le message 
complet, et retourner les messages d'erreur appropri&eacute;s. Si le serveur 
rencontre une erreur fatale en d&eacute;composant un message, une erreur doit 
&ecirc;tre envoy&eacute; au client et la d&eacute;composition interrompue. Peut 
&ecirc;tre consid&eacute;r&eacute; comme une erreur fatale une commande 
incorrecte, une destination inconnue du serveur (noms de serveur, pseudo, et 
noms de canaux entrent dans cette cat&eacute;gorie), un nombre de 
param&egrave;tres insuffisant, ou un niveau de privil&egrave;ge insuffisant. 
<P>Si un jeu de param&egrave;tres complet est pr&eacute;sent, la validit&eacute; 
de chacun d'entre eux doit &ecirc;tre v&eacute;rifi&eacute;e, et les 
r&eacute;ponses appropri&eacute;es envoy&eacute;es au client. Dans le cas de 
messages dont la liste de param&egrave;tres utilise une virgule comme 
s&eacute;parateur, une r&eacute;ponse doit &ecirc;tre envoy&eacute;e &agrave; 
chaque &eacute;l&eacute;ment. 
<P>Dans les exemples suivants, certains messages apparaissent au format complet 
:<BR>:Nom COMMANDE param&egrave;tre liste 
<P>Ces exemples repr&eacute;sentent un message de &quot;Nom&quot; dans le 
transfert entre serveurs, o&ugrave; il est essentiel d'inclure le nom de 
l'exp&eacute;diteur originel du message, de fa&ccedil;on &agrave; ce que les 
serveurs distants puissent renvoyer un message le long d'un chemin valide. 
<H2><A name=41>4.1</A> Etablissement de connection</H2>
Les commandes d&eacute;crites dans cette section sont utilis&eacute;es pour 
&eacute;tablir une connection avec un serveur IRC, aussi bien par un client que 
par un serveur, ainsi qu'une d&eacute;connexion correcte. 
<P>Une commande &quot;PASS&quot; n'est pas n&eacute;cessaire pour &eacute;tablir 
une connection, mais elle doit pr&eacute;c&eacute;der la combinaison suivante 
des messages NICK/USER. Il est fortement recommand&eacute; que toutes les 
connections de serveurs utilisent un mot de passe afin de donner un niveau de 
s&eacute;curit&eacute; satisfaisant aux connections. L'ordre des commandes 
recommand&eacute; pour l'enregistrement d'un client est le suivant :<BR>1. 
Message PASS<BR>2. Message NICK<BR>3. Message USER<BR>
<H3><A name=411>4.1.1</A> Message PASS</H3>
Commande : PASS<BR>Param&egrave;tres : &lt;mot de passe&gt; 
<P>La commande PASS est utilis&eacute;e pour d&eacute;finir le 'mot de passe de 
connection'. Le mot de passe peut et doit &ecirc;tre d&eacute;fini avant toute 
tentative de connection. A l'heure actuelle, cela signifie que les clients 
doivent envoyer une commande PASS avant d'envoyer la combinaison NICK/USER, et 
que les serveurs <B>doivent</B> envoyer une commande PASS avant toute commande 
SERVER. Le mot de passe fourni doit correspondre &agrave; celui contenu dans les 
lignes C/N (pour les serveurs) ou dans les lignes I (pour les clients). Il est 
possible d'envoyer plusieurs commandes PASS avant de d'enregistrer la 
connection, mais seule la derni&egrave;re est utilis&eacute;e pour la 
v&eacute;rification, et elle ne peut plus changer une fois la connection 
&eacute;tablie. 
<P>R&eacute;ponses num&eacute;riques :<BR>
<PRE>ERR_NEEDMOREPARAMS              ERR_ALREADYREGISTRED
</PRE>
Exemple:<BR>PASS motdepasssecretici 
<H3><A name=412>4.1.2</A> Message NICK</H3>
Commande : NICK<BR>Param&egrave;tres : &lt;pseudonyme&gt; [ &lt;compteur de 
distance&gt; ] 
<P>Le message NICK est utilis&eacute; pour donner un pseudonyme &agrave; un 
utilisateur, ou pour changer le pseudonyme pr&eacute;c&eacute;dent. Le 
param&egrave;tre &lt;compteur de distance&gt; n'est utilis&eacute; que par les 
serveurs, et sert &agrave; indiquer quelle est la distance entre un utilisateur 
et son serveur local. Une connection locale a un compter de distance de 
z&eacute;ro. Si un client fourni un compteur de distance, il doit &ecirc;tre 
ignor&eacute;. 
<P>Si un message NICK arrive &agrave; un serveur qui conna&icirc;t 
d&eacute;j&agrave; un autre client de pseudo identique, une collision de 
pseudonymes a lieu. Le r&eacute;sultat d'une collision de pseudonymes est la 
suppression de toutes les instances du pseudonyme de la base du serveur, et 
l'envoi d'un message KILL afin de retirer le pseudonyme des bases de 
donn&eacute;es de tous les autres serveurs. Si le message NICK &agrave; 
l'origine de la collision de pseudonymes est un changement de pseudonyme, alors 
le pseudo originel (l'ancien) doit aussi &ecirc;tre retir&eacute;. 
<P>Si le serveur re&ccedil;oit un NICK identique d'un client auquel il est 
connect&eacute; directement, il peut envoyer un ERR_NICKCOLLISION au client 
local, ignorer la commande NICK, et ne pas g&eacute;n&eacute;rer de KILLs. 
<P>R&eacute;ponses num&eacute;riques :<BR>
<PRE>           ERR_NONICKNAMEGIVEN             ERR_ERRONEUSNICKNAME
           ERR_NICKNAMEINUSE               ERR_NICKCOLLISION
</PRE>
Exemples: 
<UL><TT>NICK Wiz</TT> ; Ajout d'un nouveau pseudo &quot;Wiz&quot;.<BR><TT>:WiZ 
  NICK Kilroy</TT> ; WiZ change son pseudo en Kilroy. </UL>

<H3><A name=413>4.1.3</A> Message USER</H3>
Commande: USER<BR>Param&egrave;tres: &lt;nom d'utilisateur&gt; 
&lt;h&ocirc;te&gt; &lt;nom de serveur&gt; &lt;nom r&eacute;el&gt; 
<P>Le message USER est utilis&eacute; au d&eacute;but d'une connection pour 
sp&eacute;cifier le nom d'utilisateur, le nom d'h&ocirc;te, le nom de serveur, 
et le v&eacute;ritable nom d'un nouvel utilisateur. Il est aussi utilis&eacute; 
lors de la communication entre les serveurs pour indiquer l'arriv&eacute; d'un 
nouvel utilisateur sur IRC, puisque c'est seulement apr&egrave;s avoir 
envoy&eacute; et le USER et le NICK qu'un utilisateur devient enregistr&eacute;. 

<P>Entre serveurs, USER doit &ecirc;tre pr&eacute;fix&eacute; du pseudonyme du 
client. Notez que le nom d'h&ocirc;te et le nom de serveur sont 
g&eacute;n&eacute;ralement ignor&eacute;s par le serveur IRC quand la commande 
USER vient directement d'un client (pour des raisons de s&eacute;curit&eacute;), 
mais sont utilis&eacute;s dans la communication de serveur &agrave; serveur. 
Cela signifie que NICK doit toujours &ecirc;tre envoy&eacute; &agrave; un 
serveur distant quand un nouvel utilisateur est ajout&eacute; au reste du 
r&eacute;seau, avant que le USER correspondant soit envoy&eacute;. 
<P>Notez aussi que le param&egrave;tre 'vrai nom' doit &ecirc;tre le dernier 
param&egrave;tre, car il peut contenir des espaces, et il doit &ecirc;tre 
pr&eacute;fix&eacute; par deux points (':') de fa&ccedil;on &agrave; &ecirc;tre 
reconnu comme tel. 
<P>Puisqu'il est facile pour un client de mentir sur son nom si on se base 
uniquement sur le message USER, il est recommand&eacute; d'utiliser un 
&quot;serveur d'identit&eacute;&quot;. Si l'h&ocirc;te dont l'utilisateur se 
connecte a un serveur de ce type activ&eacute;, le nom d'utilisateur est 
d&eacute;fini par la r&eacute;ponse de ce &quot;serveur d'identit&eacute;&quot;. 

<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              ERR_ALREADYREGISTRED
</PRE>
Exemples: 
<UL><TT>USER guest tolmoon tolsun :Ronnie Reagan</TT> ; Utilisateur 
  s'enregistrant avec un nom d'utilisateur de &quot;guest&quot; un vrai nom de 
  &quot;Ronnie Reagan&quot;. <TT>:testnick USER guest tolmoon tolsun :Ronnie 
  Reagan</TT> ; message entre les serveurs contenant le pseudonyme &agrave; qui 
  appartient la commande USER. </UL>

<H3><A name=414>4.1.4</A> Message SERVER</H3>
Commande: SERVER<BR>Param&egrave;tres: &lt;nom de serveur&gt; &lt;compteur de 
distance&gt; &lt;info&gt;
<P>Le message SERVER est utilis&eacute; pour dire &agrave; un serveur que 
l'autre bout de la connection est un autre serveur. Ce message est aussi 
utilis&eacute; pour transmettre les donn&eacute;es du serveur &agrave; tout le 
r&eacute;seau. Quand un nouveau serveur se connecte au r&eacute;seau, les 
informations le concernant sont diffus&eacute;es &agrave; tout le r&eacute;seau. 
&lt;Compteur de distance&gt; est utilis&eacute; pour donner &agrave; chaque 
serveur des informations sur leurs distances aux diff&eacute;rents serveurs. 
Avec la liste compl&egrave;te des serveurs, il serrait possible de construire 
une carte compl&egrave;te de l'arbre des serveurs, mais les masques 
d'h&ocirc;tes l'emp&ecirc;chent. 
<P>Le message SERVER doit &ecirc;tre accept&eacute; uniquement (a) soit d'une 
connection qui n'est pas encore enregistr&eacute;e et qui essaie de 
s'enregistrer en tant que serveur, ou (b) d'une connection existante d'un autre 
serveur, pour introduire un nouveau serveur au del&agrave; de ce serveur. 
<P>La plupart des erreurs qui ont lieu &agrave; la r&eacute;ception d'une 
commande SERVER r&eacute;sulte en la coupure de la connection avec l'h&ocirc;te 
destinataire (serveur destinataire). Les r&eacute;ponses d'erreur sont 
g&eacute;n&eacute;ralement envoy&eacute;es en utilisant la commande 
&quot;ERROR&quot; plut&ocirc;t qu'une r&eacute;ponse num&eacute;rique, car la 
commande ERROR a plusieurs propri&eacute;t&eacute;s qui la rendent utile dans ce 
cas. 
<P>Si un message SERVER est trait&eacute; et tente d'introduire un serveur 
d&eacute;j&agrave; connu du serveur receveur, la connection avec ce serveur doit 
&ecirc;tre coup&eacute; (en suivant les proc&eacute;dures correctes), car une 
route dupliqu&eacute;e s'est form&eacute;e avec un serveur, et la nature 
acyclique de l'arbre IRC rompue. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_ALREADYREGISTRED<BR>

</PRE>
Exemples : 
<UL><TT>SERVER test.oulu.fi 1 :[tolsun.oulu.fi] Experimental server</TT><BR>; 
  Le nouveau serveur test.oulu.fi se pr&eacute;sente et tente de s'enregistrer. 
  Le nom d'h&ocirc;te est test.oulu.fi. 
  <P><TT>:tolsun.oulu.fi SERVER csd.bu.edu 5 :BU Central Server</TT><BR>; Le 
  serveur tolsun.oulu.fi est notre lien vers csd.bu.edu qui est &agrave; 5 
  noeuds de nous. </P></UL>

<H3><A name=415>4.1.5</A> Message OPER</H3>
Commande: OPER<BR>Param&egrave;tres: &lt;utilisateur&gt; &lt;mot de passe&gt; 
<P>Le message OPER est utilis&eacute; par un utilisateur normal pour obtenir le 
privil&egrave;ge d'op&eacute;rateur. La combinaison de &lt;utilisateur&gt; et 
&lt;mot de passe&gt; est n&eacute;cessaire pour obtenir le privil&egrave;ge 
Op&eacute;rateur. 
<P>Si le client envoyant la commande OPER fourni un mot de passe correct pour 
l'utilisateur donn&eacute;, le serveur informe le reste du r&eacute;seau du 
nouvel op&eacute;rateur en envoyant un &quot;MODE +o&quot; pour le pseudonyme. 
<P>Le message OPER n'a lieu qu'entre un client et un serveur. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              RPL_YOUREOPER
           ERR_NOOPERHOST                  ERR_PASSWDMISMATCH
</PRE>
Exemple: 
<UL><TT>OPER foo bar</TT><BR>; Tentative d'enregistrement en tant 
  qu'op&eacute;rateur, de l'utilisateur &quot;foo&quot; utilisant 
  &quot;bar&quot; comme mot de passe. </UL>

<H3><A name=416>4.1.6</A> Message QUIT</H3>
Commande: QUIT<BR>Param&egrave;tres: [&lt;Message de d&eacute;part &gt;] 
<P>Une session de client se termine par un message QUIT. Le serveur doit rompre 
la connection avec le client qui envoie un message QUIT. Si un &lt;Message de 
d&eacute;part&gt; est fourni, il sera transmi au lieu du message par 
d&eacute;faut, le pseudonyme. 
<P>Lorsqu'une division r&eacute;seau a lieu (d&eacute;connexion de deux 
serveurs), le message de d&eacute;part est compos&eacute; du nom des deux 
serveurs en cause, s&eacute;par&eacute;s par un espace. Le premier nom est celui 
du serveur toujours connect&eacute;, et le second, celui qui est 
d&eacute;sormais inaccessible. 
<P>Si pour une autre raison, une connection d'un client est ferm&eacute;e sans 
que le client ait envoy&eacute; de message QUIT (par exemple, le programme 
client se termine, et une fin de fichier est envoy&eacute;e sure la socket), le 
serveur doit remplir le message QUIT avec un message refl&eacute;tant la nature 
de l'&eacute;v&eacute;nement &agrave; la cause de cette d&eacute;connexion. 
<P>R&eacute;ponses num&eacute;riques:<BR>
<PRE>           Aucune.
</PRE>
Exemples: 
<UL><TT>QUIT :Parti d&eacute;jeuner</TT> ; Format de message 
  pr&eacute;f&eacute;r&eacute;. </UL>

<H3><A name=417>4.1.7</A> Message SQUIT</H3>
Commande: SQUIT<BR>Param&egrave;tres: &lt;serveur&gt; &lt;commentaire&gt; 
<P>Le message SQUIT est n&eacute;cessaire pour signaler le d&eacute;part ou la 
mort de serveurs. Si un serveur souhaite rompre une connection &agrave; un autre 
serveur, il doit envoyer un message SQUIT &agrave; ce serveur, en utilisant le 
nom de ce serveur comme param&egrave;tre &lt;serveur&gt;, ce qui clos la 
connection avec le serveur quittant le r&eacute;seau. 
<P>Cette commande est aussi accessible aux op&eacute;rateurs pour garder un 
r&eacute;seau de serveurs IRC connect&eacute;s proprement. Les op&eacute;rateurs 
peuvent &eacute;galement &eacute;mettre un message SQUIT pour une connection 
distante d'un serveur. Dans ce cas, le message SQUIT doit &ecirc;tre 
trait&eacute; par tous les serveurs entre l'op&eacute;rateur et le serveur 
distant, tout en mettant &agrave; jour la vue du r&eacute;seau de chaque serveur 
comme d&eacute;crit plus loin. 
<P>Le &lt;commentaire&gt; doit &ecirc;tre pr&eacute;sent pour tout 
op&eacute;rateur qui ex&eacute;cute un SQUIT sur un serveur distant (qui n'est 
pas connect&eacute; au serveur sur lequel ils sont actuellement). Le 
&lt;commentaire&gt; est &eacute;galement rempli par les serveurs qui peuvent y 
placer un message d'erreur ou autre. 
<P>Les deux serveurs, de chaque c&ocirc;te de la connection qui va &ecirc;tre 
coup&eacute;e doivent envoyer un message SQUIT (&agrave; tous les serveurs 
auxquels ils sont connect&eacute;s) pour tous les serveurs qui sont 
situ&eacute;s au-del&agrave; de ce lien. 
<P>De m&ecirc;me, un message QUIT doit &ecirc;tre envoy&eacute; aux autres 
serveur du reste du r&eacute;seau de la part de tous les clients au-del&agrave; 
de ce lien. De plus, tous les membres d'un canal qui perdent un membre &agrave; 
cause d'une division r&eacute;seau doivent recevoir un message QUIT. 
<P>Si une connection &agrave; un serveur est termin&eacute;e 
pr&eacute;matur&eacute;ment, (par exemple si le serveur &agrave; 
l'extr&eacute;mit&eacute; de la liaison meurt), le serveur qui d&eacute;tecte 
cette d&eacute;connexion doit informer le reste du r&eacute;seau que cette 
connection est ferm&eacute;e, et remplir le champ &lt;commentaire&gt; de 
fa&ccedil;on appropri&eacute;e. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOPRIVILEGES                ERR_NOSUCHSERVER
</PRE>
Exemples: 
<UL><TT>SQUIT tolsun.oulu.fi :Bad Link ? </TT><BR>; la liaison au serveur 
  tolson.oulu.fi s'est termin&eacute;e en raison d'un mauvais lien. 
  <P><TT>:Trillian SQUIT cm22.eng.umd.edu :Server out of control</TT><BR>; 
  message de Trillian pour d&eacute;connecter &quot;cm22.eng.umd.edu&quot; du 
  r&eacute;seau en raison d'un &quot;serveur incontr&ocirc;lable&quot;. </P></UL>

<H2><A name=42>4.2</A> Op&eacute;rations sur les canaux</H2>
Ce groupe de messages s'int&eacute;resse &agrave; la manipulation de canaux, 
&agrave; leurs propri&eacute;t&eacute;s (mode des canaux), et &agrave; leur 
contenu (typiquement des clients). En impl&eacute;mentant ces commandes, la 
r&eacute;solution de conflits entre les clients est in&eacute;vitable, par 
exemple lorsque deux clients &agrave; deux extr&eacute;mit&eacute;s du 
r&eacute;seau envoient des commandes incompatibles. Il est aussi 
n&eacute;cessaire aux serveurs de garder l'historique d'un pseudonyme de 
fa&ccedil;on &agrave; ce quand un param&egrave;tre &lt;pseudo&gt; est 
donn&eacute;, le serveur puisse v&eacute;rifier dans l'historique si le pseudo 
n'a pas chang&eacute; r&eacute;cemment. 
<H3><A name=421>4.2.1</A> Le message JOIN</H3>
Commande: JOIN<BR>Param&egrave;tres: &lt;canal&gt;{,&lt;canal&gt;} 
[&lt;cl&eacute;&gt;{,&lt;cl&eacute;&gt;}] 
<P>La commande JOIN est utilis&eacute;e par un client pour commencer &agrave; 
&eacute;couter un canal sp&eacute;cifique. L'acc&egrave;s &agrave; un canal est 
autoris&eacute; ou non uniquement par le serveur auquel le client est 
connect&eacute; ; tous les autres serveurs ajoutent automatiquement 
l'utilisateur au canal quand la demande vient d'un autre serveur. Les conditions 
qui affectent ceci sont les suivantes :<BR>1. L'utilisateur doit &ecirc;tre 
invit&eacute; si le canal est en mode &quot;sur invitation seulement&quot;<BR>2. 
Le pseudo/nom d'utilisateur/nom d'h&ocirc;te ne doit pas correspondre &agrave; 
un bannissement actif.<BR>3. La bonne cl&eacute; (mot de passe) doit &ecirc;tre 
fournie si elle est d&eacute;finie. 
<P>Ceci est discut&eacute; plus en d&eacute;tails dans la description de la 
commande MODE (voir la section <A 
href="irc_rfc_fr1459.htm#423">4.2.3</A> 
pour plus de d&eacute;tails). 
<P>Une fois qu'un utilisateur a acc&egrave;s &agrave; un canal, ils 
re&ccedil;oivent des notifications sur toutes les commandes que leur serveur 
re&ccedil;oit qui affectent le canal. Cela inclut MODE, KICK, PART, QUIT, et 
bien s&ucirc;r PRIVMSG/NOTICE. La commande JOIN doit &ecirc;tre diffus&eacute;e 
&agrave; tous les serveurs du r&eacute;seau pour qu'ils sachent o&ugrave; 
trouver qui est dans chaque canal. Cela permet une distribution optimale des 
messages PRIVMSG/NOTICE du canal. 
<P>Si un JOIN a lieu avec succ&egrave;s, on envoie &agrave; l'utilisateur le 
sujet du canal (en utilisant RPL_TOPIC) et la liste des utilisateurs du canal 
(en utilisant RPL_NAMREPLY), y compris lui-m&ecirc;me. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              ERR_BANNEDFROMCHAN
           ERR_INVITEONLYCHAN              ERR_BADCHANNELKEY
           ERR_CHANNELISFULL               ERR_BADCHANMASK
           ERR_NOSUCHCHANNEL               ERR_TOOMANYCHANNELS
           RPL_TOPIC
</PRE>
Exemples: 
<UL><TT>JOIN #foobar</TT> ; acc&egrave;de au canal #foobar. 
  <P><TT>JOIN &amp;foo fubar</TT> ; acc&egrave;de au canal &amp;foo en utilisant 
  la cl&eacute; &quot;fubar&quot;. 
  <P><TT>JOIN #foo,&amp;bar fubar</TT> ; acc&egrave;de au canal #foo en 
  utilisant la cl&eacute; &quot;fubar&quot;, et &amp;bar en n'utilisant pas de 
  cl&eacute;. 
  <P><TT>JOIN #foo,#bar fubar,foobar</TT> ; acc&egrave;de au canal #foo en 
  utilisant la cl&eacute; &quot;fubar&quot;, et au canal #bar en utilisant la 
  cl&eacute; &quot;foobar&quot;. 
  <P><TT>JOIN #foo,#bar</TT> ; acc&egrave;de au canaux #foo and #bar. 
  <P><TT>:WiZ JOIN #Twilight_zone</TT> ; Message JOIN de WiZ </P></UL>

<H3><A name=422>4.2.2</A> Message PART</H3>
Commande: PART<BR>Param&egrave;tres: &lt;canal&gt;{,&lt; canal &gt;} 
<P>Le message PART provoque le retrait du client exp&eacute;diteur de la liste 
des utilisateurs actifs pour tous les canaux list&eacute; dans la cha&icirc;ne 
de param&egrave;tre. 
<P>R&eacute;ponses num&eacute;riques: 
<PRE>           ERR_NEEDMOREPARAMS              ERR_NOSUCHCHANNEL
           ERR_NOTONCHANNEL<BR>
</PRE>
Exemples: 
<UL><TT>PART #twilight_zone</TT> ; quitte le canal &quot;#twilight_zone&quot; 
  <P><TT>PART #oz-ops,&amp;group5</TT> ; quitte les canaux 
  &quot;&amp;group5&quot; et &quot;#oz-ops&quot;. </P></UL>

<H3><A name=423>4.2.3</A> Message MODE</H3>
Commande: MODE 
<P>La commande MODE est une commande &agrave; utilisation duale sur IRC. Elle 
permet aussi bien de changer les modes des utilisateurs que ceux des canaux. La 
raison &agrave; ce choix est qu'un jour les pseudonymes deviendront 
obsol&egrave;tes et la propri&eacute;t&eacute; &eacute;quivalente sera le canal. 

<P>Lors du traitement des messages MODE, il est recommand&eacute; de commencer 
par d&eacute;composer le message en entier, puis de r&eacute;aliser les 
modifications r&eacute;sultantes.<BR>
<H4><A name=4231>4.2.3.1</A> Les modes des canaux </H4>
Param&egrave;tres: &lt;canal&gt; {[+|-]|o|p|s|i|t|n|b|v} [&lt;limite&gt;] 
[&lt;utilisateur&gt;] [&lt;masque de bannissement &gt;] 
<P>La commande MODE permet aux op&eacute;rateurs de canaux de changer les 
caract&eacute;ristiques de 'leur' canal. Les serveurs doivent aussi pouvoir 
changer les modes du canal, de fa&ccedil;on &agrave; pouvoir cr&eacute;er des 
op&eacute;rateurs. 
<P>Les modes disponibles pour les canaux sont les suivants :<BR>o - donne/retire 
les privil&egrave;ges d'op&eacute;rateur de canal<BR>p - drapeau de canal 
priv&eacute;<BR>s - drapeau de canal secret<BR>i - drapeau de canal accessible 
uniquement sur invitation<BR>t - drapeau de sujet de canal modifiable uniquement 
par les op&eacute;rateurs<BR>n - pas de messages dans un canal provenant de 
clients &agrave; l'ext&eacute;rieur du canal<BR>m - canal 
mod&eacute;r&eacute;<BR>l - d&eacute;finit le nombre maximal de personnes dans 
un canal<BR>b - d&eacute;fini un masque de bannissement pour interdire 
l'acc&egrave;s &agrave; des utilisateurs<BR>v - donne/retire la 
possibilit&eacute; de parler dans un canal mod&eacute;r&eacute;<BR>k - 
d&eacute;fini la cl&eacute; du canal (mot de passe) 
<P>Lors de l'utilisation des options 'o' et 'b', le nombre de param&egrave;tres 
est restreint &agrave; trois par commande, et ce pour n'importe quelle 
combinaison de 'o' et de 'b'. 
<H4><A name=4232>4.2.3.2</A> Modes des utilisateurs</H4>
Param&egrave;tres: &lt;pseudonyme&gt; {[+|-]|i|w|s|o} 
<P>Les modes utilisateurs sont typiquement des modifications qui affectent la 
fa&ccedil;on dont le client est vu par les autres, ou quels types de messages 
sont re&ccedil;us. Une commande MODE n'est accept&eacute;e que si 
l'exp&eacute;diteur du message et le pseudonyme donn&eacute; en 
param&egrave;tres sont les m&ecirc;me. 
<P>Les modes disponibles sont :<BR>i - marque un utilisateur comme invisible 
;<BR>s - marque un utilisateur comme recevant les notifications du serveur 
;<BR>w - l'utilisateur re&ccedil;oit les WALLOPs ;<BR>o - drapeau 
d'op&eacute;rateur. 
<P>D'autres modes seront disponible plus tard. 
<P>Si un utilisateur tente de devenir op&eacute;rateur en utilisant le drapeau 
&quot;+o&quot;, la tentative doit &ecirc;tre ignor&eacute;e. Par contre, il n'y 
a pas de restriction &agrave; ce que quelqu'un se 'deoppe' (en utilisant 
&quot;+o&quot;). 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              RPL_CHANNELMODEIS
           ERR_CHANOPRIVSNEEDED            ERR_NOSUCHNICK
           ERR_NOTONCHANNEL                ERR_KEYSET
           RPL_BANLIST                     RPL_ENDOFBANLIST
           ERR_UNKNOWNMODE                 ERR_NOSUCHCHANNEL

           ERR_USERSDONTMATCH              RPL_UMODEIS
           ERR_UMODEUNKNOWNFLAG<BR>
</PRE>
Exemples: 
<UL>Utilisation des modes de canal:<BR><TT>MODE #Finnish +im</TT> ; Rend le 
  canal #Finnish mod&eacute;r&eacute; et 'uniquement sur 
  invitation'.<BR><TT>MODE #Finnish +o Kilroy</TT> ; Donne le privil&egrave;ge 
  de 'chanop' &agrave; Kilroy sur le canal #Finnish.<BR><TT>MODE #Finnish +v 
  Wiz</TT> ; Autorise WiZ &agrave; parler sur #Finnish.<BR><TT>MODE #Fins 
  -s</TT> ; Annule le drapeau 'secret' du canal #Fins.<BR><TT>MODE #42 +k 
  oulu</TT> ; D&eacute;fini la cl&eacute; comme &quot;oulu&quot;.<BR><TT>MODE 
  #eu-opers +l 10</TT> ; D&eacute;fini le nombre maximal d'utilisateur dans le 
  canal &agrave; 10.<BR><TT>MODE &amp;oulu +b</TT> ; Liste les masques de 
  bannissements du canal.<BR><TT>MODE &amp;oulu +b *!*@*</TT> ; Interdit 
  &agrave; quiconque de venir sur le canal.<BR><TT>MODE &amp;oulu +b 
  *!*@*.edu</TT> ; Interdit &agrave; tout utilisateur dont le nom d'h&ocirc;te 
  correspond &agrave; *.edu d'acc&eacute;der au canal. 
  <P>Utilisation des modes d'utilisateur :<BR><TT>:MODE WiZ -w</TT> ; supprime 
  la r&eacute;ception des messages WALLOPS messages pour WiZ.<BR><TT>:Angel MODE 
  Angel +i</TT> ; Message d'Angel pour le rend invisible.<BR><TT>MODE WiZ 
  -o</TT> ; WiZ se 'deoppe' (retire son statut d'op&eacute;rateur). Le contraire 
  de ca (&quot;MODE WiZ +o&quot;) ne doit pas &ecirc;tre autoris&eacute; car 
  cela court-circuiterait la commande OPER. </P></UL>

<H3><A name=424>4.2.4</A> Le message TOPIC</H3>
Commande: TOPIC<BR>Param&egrave;tres: &lt;canal&gt; [&lt;sujet&gt;] 
<P>Le message TOPIC est utilis&eacute; pour modifier ou voir le sujet d'un 
canal. Le sujet du canal &lt;canal&gt; est renvoy&eacute; s'il n'y a pas de 
&lt;sujet&gt; fourni en param&egrave;tre. Si le param&egrave;tre &lt;sujet&gt; 
est pr&eacute;sent, le sujet du canal changera si le mode du canal le permet. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              ERR_NOTONCHANNEL
           RPL_NOTOPIC                     RPL_TOPIC
           ERR_CHANOPRIVSNEEDED<BR>
</PRE>
Exemples: 
<UL><TT>:Wiz TOPIC #test :New topic</TT> ;L'utilisateur Wiz d&eacute;fini le 
  sujet.<BR><TT>TOPIC #test :another topic</TT> ;Change le sujet du canal #test 
  en &quot;another topic&quot;.<BR><TT>TOPIC #test</TT> ; V&eacute;rifie le 
  sujet de #test. </UL>

<H3><A name=425>4.2.5</A> Message NAMES</H3>
Commande: NAMES<BR>Param&egrave;tres: [&lt;canal&gt;{,&lt;canal&gt;}] 
<P>En utilisant la commande NAMES, un utilisateur peut obtenir la liste des 
pseudonymes visibles sur n'importe quel canal qu'il peut voir. Les noms de 
canaux qu'il peut voir sont ceux qui ne sont ni priv&eacute;s (+p), ni secrets 
(+s), ou ceux sur lesquels il est actuellement. Le param&egrave;tre 
&lt;canal&gt; sp&eacute;cifie quels sont les canaux dont l'information est 
voulue, s'ils sont valides. Il n'y a pas de message d'erreur pour les noms de 
canaux invalides. 
<P>Si le param&egrave;tre &lt;canal&gt; n'est pas donn&eacute;, la liste de tous 
les canaux et de leurs occupants est renvoy&eacute;e. A la fin de cette liste, 
sont list&eacute;s les utilisateurs qui sont visibles, mais qui n'appartiennent 
&agrave; aucun canal. Ils sont list&eacute;s comme appartenant au canal 
`channel' &quot;*&quot;. 
<P>R&eacute;ponses num&eacute;riques: 
<PRE>           RPL_NAMREPLY                    RPL_ENDOFNAMES
</PRE>
Exemples: 
<UL><TT>NAMES #twilight_zone,#42</TT> ; liste les utilisateurs visibles sur 
  #twilight_zone et #42, si ces canaux vous sont visible.<BR><TT>NAMES</TT> ; 
  liste tous les canaux, et tous les utilisateurs visibles. </UL>

<H3><A name=426>4.2.6</A> Message LIST</H3>
Commande: LIST<BR>Param&egrave;tres: [&lt;canal&gt;{,&lt;canal&gt;} 
[&lt;serveur&gt;]] 
<P>Le message liste est utilis&eacute; pour lister les canaux et leur sujet. Si 
le param&egrave;tre &lt;canal&gt; est utilis&eacute;, seul le statut de ces 
canaux est affich&eacute;. Les canaux priv&eacute;s sont list&eacute;s (sans 
leur sujet) comme canal &quot;Prv&quot; &agrave; moins que le client qui fasse 
la requ&ecirc;te soit effectivement sur le canal. De m&ecirc;me, les canaux 
secrets ne sont pas list&eacute; du tout, &agrave; moins que le client soit un 
membre du canal en question. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER                RPL_LISTSTART
           RPL_LIST                        RPL_LISTEND
</PRE>
Exemples: 
<UL><TT>LIST</TT> ; Liste tous les canaux.<BR><TT>LIST #twilight_zone,#42</TT> 
  ; Liste les canaux #twilight_zone et #42 </UL>

<H3><A name=427>4.2.7</A> Message INVITE</H3>
Commande: INVITE<BR>Param&egrave;tres: &lt;pseudonyme&gt; &lt;canal&gt; 
<P>Le message INVITE est utilis&eacute; pour inviter des utilisateurs dans un 
canal. Le param&egrave;tre &lt;pseudonyme&gt; est le pseudonyme de la personne 
&agrave; inviter dans le canal destination &lt;canal&gt;. Il n'est pas 
n&eacute;cessaire que le canal dans lequel la personne est invit&eacute;e 
existe, ni m&ecirc;me soit valide. Pour inviter une personne dans un canal en 
mode sur invitation (MODE +i), le client envoyant l'invitation doit &ecirc;tre 
op&eacute;rateur sur le canal d&eacute;sign&eacute;. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              ERR_NOSUCHNICK
           ERR_NOTONCHANNEL                ERR_USERONCHANNEL
           ERR_CHANOPRIVSNEEDED
           RPL_INVITING                    RPL_AWAY
</PRE>
Exemples: 
<UL><TT>:Angel INVITE Wiz #Dust</TT> ; L'utilisateur Angel invite WiZ sur le 
  canal #Dust<BR><TT>INVITE Wiz #Twilight_Zone</TT> ; Commande pour inviter WiZ 
  sur #Twilight_zone </UL>

<H3><A name=428>4.2.8</A> Commande KICK</H3>
Commande: KICK<BR>Param&egrave;tres: &lt;canal&gt; &lt;utilisateur&gt; 
[&lt;commentaire&gt;] 
<P>La commande KICK est utilis&eacute;e pour retirer par la force un utilisateur 
d'un canal (PART forc&eacute;). 
<P>Seul un op&eacute;rateur de canal peut kicker un autre utilisateur hors d'un 
canal. Tout serveur qui re&ccedil;oit un message KICK v&eacute;rifie si le 
message est valide (c'est-&agrave;-dire si l'exp&eacute;diteur est bien un 
op&eacute;rateur du canal) avant d'&ocirc;ter la victime du canal. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS              ERR_NOSUCHCHANNEL
           ERR_BADCHANMASK                 ERR_CHANOPRIVSNEEDED
           ERR_NOTONCHANNEL
</PRE>
Exemples: 
<UL><TT>KICK &amp;Melbourne Matthew</TT> ; Kick Matthew de 
  &amp;Melbourne<BR><TT>KICK #Finnish John :Speaking English</TT> ; Kick John de 
  #Finnish en sp&eacute;cifiant &quot;Speaking English&quot; comme raison 
  (commentaire).<BR><TT>:WiZ KICK #Finnish John</TT> ; Message KICK de WiZ pour 
  retirer John du canal #Finnish<BR></UL>

<P>NOTE: 
<P>Il est possible d'&eacute;tendre les param&egrave;tres de la commande KICK 
ainsi :<BR>&lt;canal&gt;{,&lt;canal&gt;} 
&lt;utilisateur&gt;{,&lt;utilisateur&gt;} [&lt;commentaire&gt;] 
<H2><A name=43>4.3</A> Requ&ecirc;tes et commandes des serveurs</H2>
Le groupe de requ&ecirc;tes de commande des serveurs servent &agrave; obtenir 
des informations au sujet de tout serveur connect&eacute; au r&eacute;seau. Tous 
les serveurs connect&eacute;s doivent r&eacute;pondre &agrave; ces 
requ&ecirc;tes et r&eacute;pondre correctement. Toute r&eacute;ponse invalide 
(ou l'absence de r&eacute;ponse) doit &ecirc;tre consid&eacute;r&eacute; comme 
un signe de serveur cass&eacute;, et il doit se d&eacute;connecter / se 
d&eacute;sactiver au plus t&ocirc;t, jusqu'&agrave; ce que le probl&egrave;me 
soit r&eacute;solu. 
<P>Dans ces requ&ecirc;tes, lorsqu'il y a un param&egrave;tre 
&quot;&lt;serveur&gt;&quot;, cela d&eacute;signe g&eacute;n&eacute;ralement un 
pseudonyme, un serveur, ou un joker quelconque. Par contre, chaque 
param&egrave;tre ne doit g&eacute;n&eacute;rer qu'une seule requ&ecirc;te et un 
jeu de r&eacute;ponses. 
<H3><A name=431>4.3.1</A> Message VERSION</H3>
Commande: VERSION<BR>Param&egrave;tres: [&lt;serveur&gt;] 
<P>Le message VERSION est utilis&eacute; pour d&eacute;terminer la version du 
programme serveur. Un param&egrave;tre optionnel &lt;serveur&gt; est 
utilis&eacute; pour obtenir la version d'un programme serveur sur lequel un 
client n'est pas connect&eacute; directement. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER                RPL_VERSION
</PRE>
Exemples: 
<UL><TT>:Wiz VERSION *.se</TT> ; message de Wiz pour v&eacute;rifier la 
  version d'un serveur correspondant &agrave; &quot;*.se&quot;<BR><TT>VERSION 
  tolsun.oulu.fi</TT> ; v&eacute;rifie la version du serveur 
  &quot;tolsun.oulu.fi&quot;.<BR></UL>

<H3><A name=432>4.3.2</A> Message STATS</H3>
Commande: STATS<BR>Param&egrave;tres: [&lt;requ&ecirc;te&gt; [&lt;serveur&gt;]] 
<P>Le message STATS est utilis&eacute; pour obtenir les statistiques d'un 
serveur. Si le param&egrave;tre &lt;serveur&gt; est omis, seule la fin de la 
r&eacute;ponse STATS est renvoy&eacute;e. L'impl&eacute;mentation de cette 
requ&ecirc;te d&eacute;pend &eacute;norm&eacute;ment du serveur qui 
r&eacute;pond. N&eacute;anmoins, le serveur doit &ecirc;tre capable de fournir 
les informations d&eacute;crites dans les requ&ecirc;tes ci-dessous (ou 
&eacute;quivalent). 
<P>Une requ&ecirc;te peut &ecirc;tre lanc&eacute;e par une unique lettre, qui 
est v&eacute;rifi&eacute;e uniquement par le serveur destination (si le 
param&egrave;tre &lt;serveur&gt; est pr&eacute;sent). Elle est transmise aux 
serveurs interm&eacute;diaires, ignor&eacute;e et inalt&eacute;r&eacute;e. Les 
requ&ecirc;tes suivantes sont celles trouv&eacute;es dans les 
impl&eacute;mentations courantes d'IRC, et fournissent une grande partie des 
informations de configuration du serveur. Bien qu'elles ne soient pas 
n&eacute;cessairement g&eacute;r&eacute;es de la m&ecirc;me fa&ccedil;on par 
d'autres versions, tous les serveurs devraient &ecirc;tre capable de fournir une 
r&eacute;ponse valide &agrave; la requ&ecirc;te STATS, qui soit compatible avec 
les formats de r&eacute;ponse actuellement utilis&eacute;es et le but de ces 
requ&ecirc;tes. 
<P>Les requ&ecirc;tes actuellement g&eacute;r&eacute;es sont : <BR>c - renvoie 
la liste des serveurs qui peuvent se connecter, ou dont les connections sont 
accept&eacute;es ; <BR>h - renvoie la liste des serveurs qui sont forc&eacute;s 
de se comporter comme des feuilles(L) , ou comme des noeuds (H) sur l'arbre des 
connections ; <BR>i - renvoie la liste des h&ocirc;tes dont le serveur accepte 
les clients ; <BR>k - retourne la liste des combinaisons de noms d'utilisateur / 
nom d'h&ocirc;tes qui sont bannis de ce serveur. <BR>l - renvoie la liste des 
connections d'un serveur, et montre, pour chacune d'entre elle, le trafic en 
octets et en messages, et ce, dans chaque direction ; <BR>m - renvoie la liste 
des commandes g&eacute;r&eacute;es par le serveur, et le nombre d'utilisations 
de chacune d'entre elle, s'il n'est pas nul ; <BR>o - renvoie la liste des 
h&ocirc;tes depuis lesquels un client normal peut devenir op&eacute;rateur ; 
<BR>y - montre les lignes Y (Classe) du fichier de configuration du serveur ; 
<BR>u - renvoie une cha&icirc;ne d&eacute;crivant depuis combien de temps le 
serveur fonctionne. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER
           RPL_STATSCLINE                  RPL_STATSNLINE
           RPL_STATSILINE                  RPL_STATSKLINE
           RPL_STATSQLINE                  RPL_STATSLLINE
           RPL_STATSLINKINFO               RPL_STATSUPTIME
           RPL_STATSCOMMANDS               RPL_STATSOLINE
           RPL_STATSHLINE                  RPL_ENDOFSTATS
</PRE>
Exemples: 
<UL><TT>STATS m</TT> ; v&eacute;rifie l'utilisation des commandes pour le 
  serveur sur lequel vous &ecirc;tes connect&eacute;.<BR><TT>:Wiz STATS c 
  eff.org</TT> ; requ&ecirc;te de WiZ pour information sur les ligne C/N du 
  serveur eff.org </UL>

<H3><A name=433>4.3.3</A> Message LINKS</H3>
Commande: LINKS<BR>Param&egrave;tres: [[&lt;serveur distant&gt;] &lt;masque de 
serveur &gt;] 
<P>Avec LINKS, un utilisateur peut obtenir la liste des serveurs connue d'un 
serveur. La liste des serveurs doit correspondre au masque, ou s'il n'y a pas de 
masque, la liste compl&egrave;te des serveurs est renvoy&eacute;e. 
<P>Si le &lt;serveur distant&gt; est fourni, en plus du &lt;masque de 
serveur&gt;, la commande LINKS est transmise au premier serveur trouv&eacute; 
dont le nom correspond (s'il y en a), et ce serveur doit alors r&eacute;pondre 
&agrave; la requ&ecirc;te. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER
           RPL_LINKS                       RPL_ENDOFLINKS
</PRE>
Exemples: 
<UL><TT>LINKS *.au</TT> ; liste tous les serveurs dont le noms correspond 
  &agrave; *.au;<BR><TT>:WiZ LINKS *.bu.edu *.edu</TT> ; message LINKS de WiZ au 
  premier serveur correspondant &agrave; *.edu demandant la liste des serveurs 
  correspondant &agrave; *.bu.edu.<BR></UL>

<H3><A name=434>4.3.4</A> Message TIME</H3>
Commande: TIME<BR>Param&egrave;tres: [&lt;serveur&gt;] 
<P>Le message TIME est utilis&eacute; pour obtenir l'heure locale d'un serveur 
donn&eacute;. En absence de param&egrave;tre &lt;serveur&gt;, le serveur 
recevant le message doit r&eacute;pondre &agrave; la requ&ecirc;te. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER                RPL_TIME
</PRE>
Exemples: 
<UL><TT>TIME tolsun.oulu.fi</TT> ; demande l'heure du serveur 
  &quot;tolson.oulu.fi&quot;<BR><TT>Angel TIME *.au</TT> ; L'utilisateur Angel 
  demande l'heure &agrave; un serveur correspondant &agrave; &quot;*.au&quot; 
</UL>

<H3><A name=435>4.3.5</A> Message CONNECT</H3>
Commande: CONNECT<BR>Param&egrave;tres: &lt;serveur destination &gt; 
[&lt;port&gt; [&lt;serveur distant&gt;]] 
<P>Le message CONNECT est utilis&eacute; pour forcer un serveur &agrave; essayer 
d'&eacute;tablir imm&eacute;diatement une nouvelle connection &agrave; un autre 
serveur. CONNECT est une commande privil&eacute;gi&eacute;e et n'est accessible 
qu'aux op&eacute;rateurs IRC. Si un serveur distant est pr&eacute;cis&eacute;, 
alors ce serveur tente de se connecter au &lt;serveur distant&gt;, sur le 
&lt;port&gt; donn&eacute;. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER                ERR_NOPRIVILEGES
           ERR_NEEDMOREPARAMS<BR>
</PRE>
Exemples:<BR>
<UL><TT>CONNECT tolsun.oulu.fi</TT> ; Essai de connection au serveur 
  tolsun.oulu.fi<BR><TT>:WiZ CONNECT eff.org 6667 csd.bu.edu</TT> ; essai de 
  CONNECT de WiZ pour lier eff.org et csd.bu.edu sur le port 6667.<BR></UL>

<H3><A name=436>4.3.6</A> Message TRACE</H3>
Commande: TRACE<BR>Param&egrave;tres: [&lt;serveur&gt;] 
<P>La commande TRACE est utilis&eacute;e pour trouver une route vers un serveur 
donn&eacute;. Chaque serveur qui traite ce message doit r&eacute;pondre &agrave; 
l'exp&eacute;diteur en indiquant qu'il est un lien sur le chemin d'acheminement, 
formant ainsi une cha&icirc;ne de r&eacute;ponse similaire &agrave; celle 
obtenue par un &quot;traceroute&quot;. Apr&egrave;s avoir renvoy&eacute; sa 
r&eacute;ponse, il doit ensuite envoyer le message TRACE au serveur suivant, et 
ce jusqu'&agrave; ce que le serveur sp&eacute;cifi&eacute; soit atteint. Si le 
param&egrave;tre &lt;serveur&gt; est omis, il est recommand&eacute; que la 
commande trace envoie un message &agrave; l'exp&eacute;diteur lui disant 
&agrave; quels serveurs il est directement connect&eacute;. 
<P>Si la destination sp&eacute;cifi&eacute;e par &lt;serveur&gt; est en fait un 
serveur, alors le serveur destinataire doit lister tous les serveurs et les 
utilisateurs qui y sont connect&eacute;s. Si la destination 
sp&eacute;cifi&eacute;e par &lt;serveur&gt; est en fait un pseudonyme, seule la 
r&eacute;ponse pour ce pseudonyme est donn&eacute;e. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER<BR>
</PRE>
Si le message TRACE est destin&eacute; &agrave; un autre serveur, tous les 
serveurs interm&eacute;diaires doivent retourner une r&eacute;ponse 
RPL_TRACELINK pour indiquer que le TRACE est pass&eacute; par lui et o&ugrave; 
il va ensuite.<BR>
<PRE>           RPL_TRACELINK<BR>

</PRE>
Une r&eacute;ponse TRACE doit &ecirc;tre une des r&eacute;ponses 
num&eacute;riques suivantes :<BR>
<PRE>           RPL_TRACECONNECTING             RPL_TRACEHANDSHAKE
           RPL_TRACEUNKNOWN                RPL_TRACEOPERATOR
           RPL_TRACEUSER                   RPL_TRACESERVER
           RPL_TRACESERVICE                RPL_TRACENEWTYPE
           RPL_TRACECLASS<BR>
</PRE>
Exemples: 
<UL><TT>TRACE *.oulu.fi</TT> ; TRACE un serveur correspondant &agrave; 
  *.oulu.fi<BR><TT>:WiZ TRACE AngelDust</TT> ; TRACE de WiZ vers le pseudo 
  AngelDust </UL>

<H3><A name=437>4.3.7</A> Commande ADMIN</H3>
Commande: ADMIN<BR>Param&egrave;tres: [&lt;serveur&gt;] 
<P>Le message ADMIN est utilis&eacute; pour trouver le nom de l'administrateur 
d'un serveur donn&eacute;, ou du serveur courant si le param&egrave;tre 
&lt;serveur&gt; est omis. Tout serveur doit poss&eacute;der la 
possibilit&eacute; de propager les messages ADMIN aux autres serveurs. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER
           RPL_ADMINME                     RPL_ADMINLOC1
           RPL_ADMINLOC2                   RPL_ADMINEMAIL
</PRE>
Exemples: 
<UL><TT>ADMIN tolsun.oulu.fi</TT> ; requ&ecirc;te ADMIN de 
  tolsun.oulu.fi<BR><TT>:WiZ ADMIN *.edu</TT> ; requ&ecirc;te ADMIN de WiZ pour 
  le premier serveur trouv&eacute; qui correspond &agrave; *.edu. </UL>

<H3><A name=438>4.3.8</A> Commande INFO</H3>
Commande: INFO<BR>Param&egrave;tres: [&lt;serveur&gt;] 
<P>La commande INFO doit retourner une information qui d&eacute;crit le serveur 
: sa version, quand il a &eacute;t&eacute; compil&eacute;, le num&eacute;ro de 
mise &agrave; jour, quand il a &eacute;t&eacute; d&eacute;marr&eacute;, et toute 
autre information consid&eacute;r&eacute;e comme pertinente. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER
           RPL_INFO                        RPL_ENDOFINFO
</PRE>
Exemples: 
<UL><TT>INFO csd.bu.edu</TT> ; requ&ecirc;te INFO pour 
  csd.bu.edu<BR><TT>:Avalon INFO *.fi</TT> ; requ&ecirc;te INFO d' Avalon 
  &agrave; destination du premier serveur trouv&eacute; qui correspond &agrave; 
  *.fi.<BR><TT>INFO Angel</TT> ; requ&ecirc;te INFO &agrave; destination du 
  serveur sur lequel est connect&eacute; Angel. </UL>

<H2><A name=44>4.4</A> Envoi de messages</H2>
Le but principal du protocole IRC est de fournir une base afin que des clients 
puissent communiquer entre eux. PRIVMSG et NOTICE sont les seuls messages 
disponibles qui r&eacute;alisent effectivement la l'acheminement d'un message 
textuel d'un client &agrave; un autre - le reste le rend juste possible et 
assure que cela se passe de fa&ccedil;on fiable et structur&eacute;e. 
<H3><A name=441>4.4.1</A> Messages priv&eacute;s</H3>
Commande: PRIVMSG<BR>Param&egrave;tres: 
&lt;destinataire&gt;{,&lt;destinataire&gt;} &lt;texte &agrave; envoyer &gt; 
<P>PRIVMSG est utilis&eacute; pour envoyer un message priv&eacute; entre des 
utilisateurs. &lt;destinataire&gt; est le pseudonyme du destinataire du message. 
&lt;destinataire&gt; peut aussi &ecirc;tre une liste de nom ou de canaux, 
s&eacute;par&eacute;s pas des virgules. 
<P>Le param&egrave;tre &lt;destinataire&gt; peut aussi &ecirc;tre un masque 
d'h&ocirc;te (masque #) ou un masque de serveur (masque $). Le masque doit 
contenir au moins un (1) &quot;.&quot;, et aucun joker apr&egrave;s le dernier 
&quot;.&quot;. Cette limitation a pour but d'emp&ecirc;cher les gens d'envoyer 
des messages &agrave; &quot;#*&quot; ou &agrave; &quot;$*&quot;, ce qui 
provoquerait la diffusion &agrave; tous les utilisateurs ; l'exp&eacute;rience 
montre qu'on en abuse plus qu'on en use intelligemment, de fa&ccedil;on 
responsable. Les jokers sont les caract&egrave;res '*' et '?'. Ces extensions de 
PRIVMSG ne sont accessibles qu'aux op&eacute;rateurs. R&eacute;ponses 
Num&eacute;riques: 
<PRE>           ERR_NORECIPIENT                 ERR_NOTEXTTOSEND
           ERR_CANNOTSENDTOCHAN            ERR_NOTOPLEVEL
           ERR_WILDTOPLEVEL                ERR_TOOMANYTARGETS
           ERR_NOSUCHNICK
           RPL_AWAY
</PRE>
Exemples: 
<UL><TT>:Angel PRIVMSG Wiz :Salut, est ce que tu re&ccedil;ois ce message 
  ?</TT> ; Message d'Angel &agrave; Wiz.<BR><TT>PRIVMSG Angel :oui, je le 
  re&ccedil;ois ! </TT>; Message &agrave; Angel.<BR><TT>PRIVMSG 
  jto@tolsun.oulu.fi :Hello !</TT> ; Message &agrave; un client du serveur 
  tolsun.oulu.fi dont le nom est &quot;jto&quot;.<BR><TT>PRIVMSG $*.fi :Server 
  tolsun.oulu.fi rebooting.</TT> ; Message &agrave; tous sur les serveurs dont 
  les noms correspondent &agrave; *.fi.<BR><TT>PRIVMSG #*.edu :NSFNet is 
  undergoing work, expect interruptions</TT> ; Message &agrave; tous les 
  utilisateurs qui viennent d'un h&ocirc;te dont le nom correspond &agrave; 
  *.edu.<BR></UL>

<H3><A name=442>4.4.2</A> Notice</H3>
Commande: NOTICE<BR>Param&egrave;tres: &lt;pseudonyme&gt; &lt;texte&gt; 
<P>Le message NOTICE s'utilise de la m&ecirc;me fa&ccedil;on que PRIVMSG. La 
diff&eacute;rence entre NOTICE et PRIVMSG est qu'aucune r&eacute;ponse 
automatique de doit &ecirc;tre envoy&eacute;e en r&eacute;ponse &agrave; un 
message NOTICE. Ceci est aussi valable pour les serveurs - ils ne doivent pas 
renvoyer de message d'erreur &agrave; la r&eacute;ception d'un message NOTICE. 
Le but de cette r&egrave;gle est d'&eacute;viter les boucles entre les clients 
qui enverraient automatiquement quelque chose en r&eacute;ponse &agrave; une 
requ&ecirc;te. Cela est typiquement utilis&eacute; par des automates (des 
clients qui ont une intelligence artificielle ou un autre programme interactif 
contr&ocirc;lant leurs actions) qui r&eacute;pondent syst&eacute;matiquement aux 
r&eacute;ponses d'autres automates. 
<P>Voir PRIVMSG pour les d&eacute;tails sur les r&eacute;ponses, et pour les 
exemples. 
<H2><A name=45>4.5</A> Requ&ecirc;tes bas&eacute;es sur les utilisateurs</H2>
Les requ&ecirc;tes utilisateurs sont un groupe de commandes dont le but 
principal est la recherche d'informations sur un utilisateur particulier, ou sur 
un groupe d'utilisateurs. Lorsqu'on utilise des jokers avec ces commandes, elles 
ne renvoient les informations que sur les utilisateurs qui vous sont 'visibles'. 
La visibilit&eacute; d'un utilisateur est d&eacute;termin&eacute;e par la 
combinaison du mode de cet utilisateur, et des canaux sur lesquels tous les deux 
&ecirc;tes. 
<H3><A name=451>4.5.1</A> Requ&ecirc;te WHO</H3>
Commande: WHO<BR>Param&egrave;tres: [&lt;nom&gt; [&lt;o&gt;]] 
<P>Le message WHO est utilis&eacute; par un client pour g&eacute;n&eacute;rer 
une requ&ecirc;te qui renvoie une liste d'informations qui correspondent au 
param&egrave;tre &lt;nom&gt; donn&eacute; par le client. Si le param&egrave;tre 
nom est absent, tous les utilisateurs visibles sont list&eacute;s (ceux qui ne 
sont pas invisibles (mode utilisateur +i) et qu'ont pas un canal en commun avec 
le client &eacute;mettant la requ&ecirc;te. Le m&ecirc;me r&eacute;sultat peut 
&ecirc;tre obtenu en utilisant le &lt;nom&gt; &quot;0&quot; ou tout joker 
correspond &agrave; toutes les entr&eacute;es possibles. 
<P>Le &lt;nom&gt; pass&eacute; en param&egrave;tre est mis en correspondance 
avec les h&ocirc;tes des utilisateurs, leurs v&eacute;ritables noms, et leurs 
pseudonymes si le canal &lt;nom&gt; n'est pas trouv&eacute;. 
<P>Si le param&egrave;tre &quot;o&quot; est pass&eacute;, seuls les 
op&eacute;rateurs sont list&eacute;s, et ce, en fonction du masque fourni. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER
           RPL_WHOREPLY                    RPL_ENDOFWHO
</PRE>
Exemples: 
<UL><TT>WHO *.fi</TT> ; Liste tous les utilisateurs qui correspondent &agrave; 
  &quot;*.fi&quot;.<BR><TT>WHO jto* o</TT> ; Liste tous les utilisateurs qui 
  correspondent &agrave; &quot;jto*&quot;, s'ils sont op&eacute;rateurs.<BR></UL>

<H3><A name=452>4.5.2</A> Requ&ecirc;te WHOIS</H3>
Commande: WHOIS<BR>Param&egrave;tres: [&lt;serveur&gt;] &lt;masque de 
pseudo&gt;[,&lt;masque de pseudo&gt;[,...]] 
<P>Ce message est utilis&eacute; pour obtenir des informations sur un 
utilisateur donn&eacute;. Le serveur r&eacute;pondra &agrave; ce message avec 
des messages num&eacute;riques indiquant les diff&eacute;rents statuts de chacun 
des utilisateurs qui correspondent au &lt;masque de pseudo&gt; (si vous pouvez 
les voir). S'il n'y a pas de joker dans le &lt;masque de pseudo&gt;, toutes les 
informations auxquelles vous avez acc&egrave;s au sujet de ce pseudo seront 
pr&eacute;sent&eacute;es. On peut s&eacute;parer la liste des pseudonymes avec 
une virgule (','). 
<P>La derni&egrave;re version envoie une requ&ecirc;te &agrave; un serveur 
sp&eacute;cifique. C'est utile si vous voulez savoir depuis combien de temps 
l'utilisateur concern&eacute; a &eacute;t&eacute; oisif, car seul le serveur 
local (celui auquel cet utilisateur est directement connect&eacute;) 
conna&icirc;t cette information, alors que tout le reste est connu par tous les 
serveurs. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER                ERR_NONICKNAMEGIVEN
           RPL_WHOISUSER                   RPL_WHOISCHANNELS
           RPL_WHOISCHANNELS               RPL_WHOISSERVER
           RPL_AWAY                        RPL_WHOISOPERATOR
           RPL_WHOISIDLE                   ERR_NOSUCHNICK
           RPL_ENDOFWHOIS<BR>
</PRE>
Exemples: 
<UL><TT>WHOIS wiz</TT> ; revoie les informations disponibles sur le pseudo 
  WiZ<BR><TT>WHOIS eff.org trillian</TT> ; demande au serveur eff.org les 
  informations concernant trillian<BR></UL>

<H3><A name=453>4.5.3</A> WHOWAS</H3>
Commande: WHOWAS<BR>Param&egrave;tres: &lt;pseudonyme&gt; [&lt;compte&gt; 
[&lt;serveur&gt;]] 
<P>WHOWAS permet de demander des informations concernant un utilisateur qui 
n'existe plus. Cela peut &ecirc;tre d&ucirc; &agrave; un changement de 
pseudonyme ou au fait que l'utilisateur ait quitt&eacute; l'IRC. En 
r&eacute;ponse &agrave; cette requ&ecirc;te, le serveur cherche un pseudo 
correspondant dans l'historique des pseudonymes (sans utiliser de jokers). 
L'historique est parcouru &agrave; l'envers, de fa&ccedil;on &agrave; renvoyer 
l'entr&eacute;e la plus r&eacute;cente en premier. S'il y a plusieurs 
entr&eacute;es, jusqu'&agrave; &lt;compte&gt; entr&eacute;es seront 
retourn&eacute;es (ou toutes si le param&egrave;tre &lt;compte&gt; n'est pas 
donn&eacute;). Si le nombre pass&eacute; n'est pas positif, une recherche 
compl&egrave;te a lieu. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NONICKNAMEGIVEN             ERR_WASNOSUCHNICK
           RPL_WHOWASUSER                  RPL_WHOISSERVER
           RPL_ENDOFWHOWAS
</PRE>
Exemples: 
<UL><TT>WHOWAS Wiz</TT> ; revoie toutes les informations dans l'historique des 
  pseudos au sujet du pseudo &quot;WiZ&quot;;<BR><TT>WHOWAS Mermaid 9</TT> ; 
  renvoie, au maximum, les neufs entr&eacute;es les plus r&eacute;centes dans 
  l'historiques des pseudos pour &quot;Mermaid&quot;; <BR><TT>WHOWAS Trillian 1 
  *.edu</TT> ; demande l'entr&eacute;e la plus r&eacute;cente pour 
  &quot;Trillian&quot; au premier serveur trouv&eacute; qui correspond &agrave; 
  &quot;*.edu&quot;. </UL>

<H2><A name=46>4.6</A> Messages divers</H2>
Les messages de cette cat&eacute;gorie ne font partie d'aucune des 
cat&eacute;gories ci-dessus, mais font n&eacute;anmoins partie int&eacute;grante 
du protocole, et sont indispensables. 
<H3><A name=461>4.6.1</A> Message KILL</H3>
Commande: KILL<BR>Param&egrave;tres: &lt;pseudonyme&gt; &lt;commentaire&gt; 
<P>Le message KILL est utilis&eacute; pour provoquer la fermeture de la 
connection client/serveur par le serveur qui g&egrave;re cette connection. KILL 
est aussi utilis&eacute; par les serveurs qui rencontrent un doublon dans la 
liste des entr&eacute;es de pseudonymes valides, afin de retirer les deux 
entr&eacute;es. Elle est &eacute;galement accessible aux op&eacute;rateurs. 
<P>Les clients qui ont des reconnections automatiques rendent cette commande 
inefficace, car la d&eacute;connexion est br&egrave;ve. Cela permet tout de 
m&ecirc;me d'interrompre un flux de donn&eacute;es et est utile pour 
arr&ecirc;ter un flux abusif (trop important). Tout utilisateur peut demander 
&agrave; recevoir les messages KILL g&eacute;n&eacute;r&eacute;s pour d'autres 
clients afin de garder un oeil sur les fauteurs de trouble &eacute;ventuels. 
<P>Dans une ar&egrave;ne o&ugrave; les pseudonymes doivent &ecirc;tre 
globalement uniques, les messages KILL sont envoy&eacute;s &agrave; chaque fois 
qu'un doublon est d&eacute;tect&eacute; (c'est-&agrave;-dire une tentative 
d'enregistrer deux utilisateurs avec le m&ecirc;me pseudonyme) dans l'espoir 
qu'ils dispara&icirc;tront tous les deux, et qu'un seul 
r&eacute;appara&icirc;tra. 
<P>Le commentaire doit refl&eacute;ter la v&eacute;ritable raison du KILL. Pour 
les messages issus de serveurs, cela est habituellement constitu&eacute; des 
d&eacute;tails concernant les origines des deux pseudonymes en conflit. Les 
utilisateurs, eux, sont libres de fournir une raison ad&eacute;quate, de 
fa&ccedil;on &agrave; satisfaire ceux qui le voient. Afin de 
pr&eacute;venir/d'&eacute;viter des KILL maquill&eacute;s pour cacher 
l'identit&eacute; de l'auteur d'&ecirc;tre g&eacute;n&eacute;r&eacute;s, le 
commentaire contient &eacute;galement un 'chemin de KILL' qui est mis &agrave; 
jour par tous les serveurs par lequel il passe, chacun ajoutant son nom au 
chemin. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOPRIVILEGES                ERR_NEEDMOREPARAMS
           ERR_NOSUCHNICK                  ERR_CANTKILLSERVER
</PRE>
Exemple: 
<UL><TT>KILL David (csd.bu.edu &lt;- tolsun.oulu.fi)</TT> ; Collision de 
  pseudonyme entre csd.bu.edu et tolson.oulu.fi </UL>

<P>NOTE:<BR>Il est recommand&eacute; que seuls les op&eacute;rateurs soient 
autoris&eacute;s &agrave; d&eacute;connecter d'autres utilisateurs avec un 
message KILL. Dans un monde parfait, m&ecirc;me les op&eacute;rateurs ne 
devraient avoir besoin de cette commande, et les serveurs pourraient &ecirc;tre 
laiss&eacute;s seul &agrave; r&eacute;soudre ces probl&egrave;mes. 
<H3><A name=462>4.6.2</A> Message PING</H3>
Commande: PING<BR>Param&egrave;tres: &lt;serveur1&gt; [&lt;serveur2&gt;] 
<P>Le message PING est utilis&eacute; pour tester la pr&eacute;sence d'un client 
actif &agrave; l'autre bout de la connection. Un message PING est envoy&eacute; 
r&eacute;guli&egrave;rement si aucune activit&eacute; n'est 
d&eacute;tect&eacute;e sur une connection. Si la connection ne r&eacute;pond pas 
&agrave; la commande PING dans un certain d&eacute;lai, la connection est 
ferm&eacute;e. 
<P>Tout client qui re&ccedil;oit un message PING doit r&eacute;pondre au 
&lt;serveur1&gt; (serveur qui a envoy&eacute; le message PING) aussi rapidement 
que possible, avec un message PONG appropri&eacute; pour indiquer qu'il est 
toujours l&agrave; et actif. Les serveurs ne doivent pas r&eacute;pondre aux 
commandes PING, mais se fier au PING dans l'autre sens pour indiquer que la 
connection est toujours active. Si le param&egrave;tre &lt;serveur2&gt; est 
sp&eacute;cifi&eacute;, le message PING y est transmis. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOORIGIN                    ERR_NOSUCHSERVER
</PRE>
Exemples: 
<UL><TT>PING tolsun.oulu.fi</TT> ; serveur envoyant un message PING &agrave; 
  un autre serveur pour indiquer qu'il est toujours actif.<BR><TT>PING WiZ</TT> 
  ; message PING envoy&eacute; au pseudo WiZ<BR></UL>

<H3><A name=463>4.6.3</A> Message PONG</H3>
Commande: PONG<BR>Param&egrave;tres: &lt;d&eacute;mon&gt; 
[&lt;d&eacute;mon2&gt;] 
<P>Le message PONG est la r&eacute;ponse &agrave; un message PING. Si le 
param&egrave;tre &lt;d&eacute;mon2&gt; est donn&eacute;, le message doit 
&ecirc;tre transmis au d&eacute;mon donn&eacute;. Le param&egrave;tre 
&lt;d&eacute;mon&gt; est le nom du d&eacute;mon responsable du message PING 
g&eacute;n&eacute;r&eacute;. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOORIGIN                    ERR_NOSUCHSERVER
</PRE>
Exemples: 
<UL><TT>PONG csd.bu.edu tolsun.oulu.fi</TT> ; message PONG de csd.bu.edu 
  &agrave; tolsun.oulu.fi </UL>

<H3><A name=464>4.6.4</A> Message ERROR</H3>
Commande: ERROR<BR>Param&egrave;tres: &lt; message d'erreur&gt; 
<P>La commande ERROR est utilis&eacute;e par les serveurs pour rapporter une 
erreur s&eacute;rieuse ou fatale &agrave; ses op&eacute;rateurs. Elle peut aussi 
&ecirc;tre envoy&eacute;e d'un serveur &agrave; un autre, mais ne doit pas 
&ecirc;tre accept&eacute; de simples clients inconnus. 
<P>Un message ERROR ne doit &ecirc;tre utilis&eacute; que pour annoncer les 
erreurs qui ont lieu sur un lien serveur/serveur. Un message ERROR est 
envoy&eacute; au serveur associ&eacute; (qui le transmet &agrave; tous ses 
op&eacute;rateurs connect&eacute;s) et &agrave; tous les op&eacute;rateurs 
connect&eacute;s. Il ne doit pas &ecirc;tre transmis aux autres serveurs s'il 
est re&ccedil;u d'un serveur. 
<P>Quand un serveur transmet un message ERROR &agrave; ses op&eacute;rateurs, le 
message doit &ecirc;tre encapsul&eacute; dans un message NOTICE, en indiquant 
que le client n'est pas responsable de l'erreur. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           Aucune.
</PRE>
Exemples: 
<UL><TT>ERROR :Server *.fi already exists</TT> ; message ERROR &agrave; 
  l'autre serveur qui a provoqu&eacute; cette erreur.<BR><TT>NOTICE WiZ :ERROR 
  from csd.bu.edu -- Server *.fi already exists</TT> ; M&ecirc;me message ERROR 
  qu'au dessus, mais envoy&eacute; &agrave; l'utilisateur Wiz sur l'autre 
  serveur. </UL>

<H1><A name=5>5.</A> Messages optionnels</H1>
Cette section d&eacute;crit les messages optionnels. Ils ne sont pas requis dans 
les impl&eacute;mentations des serveurs d&eacute;crits ici. En l'absence de 
l'option, un message d'erreur doit &ecirc;tre g&eacute;n&eacute;r&eacute;, ou 
une erreur commande inconnue. Si le message est destin&eacute; &agrave; un autre 
serveur, il doit est transmis (traitement de base obligatoire). Les nombres 
allou&eacute;s pour cela sont list&eacute; avec les messages ci-dessous. 
<H2><A name=51>5.1</A> AWAY</H2>
Commande: AWAY<BR>Param&egrave;tres: [message] 
<P>Avec le message AWAY, les clients peuvent d&eacute;finir une cha&icirc;ne de 
r&eacute;ponse automatique pour toute commande PRIVMSG qui leur est 
destin&eacute;e (et non pas &agrave; un canal sur lequel ils sont). La 
r&eacute;ponse est envoy&eacute;e directement par le serveur au client envoyant 
une commande PRIVMSG. Le seul serveur &agrave; r&eacute;pondre est celui sur 
lequel le client &eacute;metteur est situ&eacute;. 
<P>Le message AWAY est utilis&eacute; soit avec un param&egrave;tre (pour 
d&eacute;finir un message AWAY) ou sans (pour retirer le message AWAY). 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           RPL_UNAWAY                      RPL_NOWAWAY
</PRE>
Exemples: 
<UL><TT>AWAY :Parti d&eacute;jeuner. De retour &agrave; 2 heures.</TT> ; 
  d&eacute;fini le message d'absence en &quot; Parti d&eacute;jeuner. De retour 
  &agrave; 2 heures.&quot;.<BR><TT>:WiZ AWAY</TT> ; supprime l'absence de 
  WiZ.<BR></UL>

<H2><A name=52>5.2</A> Message REHASH</H2>
Commande: REHASH<BR>Param&egrave;tres: Aucun 
<P>Le massage REHASH est utilis&eacute; par les op&eacute;rateurs pour forcer un 
serveur &agrave; relire et traiter son fichier de configuration. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>        RPL_REHASHING                   ERR_NOPRIVILEGES
</PRE>
Exemples: 
<UL><TT>REHASH</TT> ; message d'un client ayant un statut d'op&eacute;rateur 
  au serveur, lui demandant de relire son fichier de configuration. </UL>

<H2><A name=53>5.3</A> Message RESTART</H2>
Commande: RESTART<BR>Param&egrave;tres: Aucun 
<P>Le message RESTART n'est utilisable que par un op&eacute;rateur. Il sert 
&agrave; red&eacute;marrer le serveur. La gestion de ce message est optionnelle, 
car il est risqu&eacute; de permettre &agrave; des personnes se connectant comme 
op&eacute;rateur d'ex&eacute;cuter cette commande, qui cause une interruption de 
service (au moins). 
<P>La commande RESTART doit toujours &ecirc;tre trait&eacute;e par le serveur 
qui la re&ccedil;oit, et non pass&eacute; &agrave; un autre serveur. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOPRIVILEGES
</PRE>
Exemples: 
<UL><TT>RESTART</TT> ; pas de param&egrave;tres </UL>

<H2><A name=54>5.4</A> Message SUMMON</H2>
Commande: SUMMON<BR>Param&egrave;tres: &lt;utilisateur&gt; [&lt;serveur&gt;] 
<P>La commande SUMMON peut &ecirc;tre utilis&eacute;e pour envoyer &agrave; des 
utilisateurs qui sont sur l'h&ocirc;te sur lequel s'ex&eacute;cute le serveur 
IRC un message leur demandant de joindre l'IRC. Ce message ne peut &ecirc;tre 
envoy&eacute; que si le serveur (a) a la commande SUMMON activ&eacute;e, et (b) 
si le processus serveur peut &eacute;crire sur le tty (ou similaire) de 
l'utilisateur. 
<P>Si le param&egrave;tre &lt;serveur&gt; n'est pas donn&eacute;, cela essaie 
d'appeler l'&lt;utilisateur&gt; du serveur sur lequel le client est 
connect&eacute;. 
<P>Si le SUMMON est d&eacute;sactiv&eacute; sur un serveur, il doit renvoyer la 
r&eacute;ponse num&eacute;rique ERR_SUMMONDISABLED et transmettre le message 
SUMMON. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NORECIPIENT                 ERR_FILEERROR
           ERR_NOLOGIN                     ERR_NOSUCHSERVER
           RPL_SUMMONING<BR>
</PRE>
Exemples: 
<UL><TT>SUMMON jto</TT> ; appelle l'utilisateur jto sur l'h&ocirc;te du 
  serveur<BR><TT>SUMMON jto tolsun.oulu.fi</TT> ; appelle l'utilisateur jto sur 
  l'h&ocirc;te sur lequel le serveur &quot;tolsun.oulu.fi&quot; est 
  lanc&eacute;. </UL>

<H2><A name=55>5.5</A> Commande USERS</H2>
Commande: USERS<BR>Param&egrave;tres: [&lt;serveur&gt;] 
<P>La commande USERS fonctionne de fa&ccedil;on similaire &agrave; WHO(1), 
RUSERS(1) et FINGER(1). Certains peuvent d&eacute;sactiver cette commande sur 
leur serveur pour des raisons de s&eacute;curit&eacute;. En cas de 
d&eacute;sactivation, cela doit &ecirc;tre indiqu&eacute; par le retour de 
r&eacute;ponse num&eacute;rique appropri&eacute;e. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NOSUCHSERVER                ERR_FILEERROR
           RPL_USERSSTART                  RPL_USERS
           RPL_NOUSERS                     RPL_ENDOFUSERS
           ERR_USERSDISABLED<BR>
</PRE>
R&eacute;ponse de d&eacute;sactivation : 
<PRE>           ERR_USERSDISABLED<BR>
</PRE>
Exemples: 
<UL><TT>USERS eff.org </TT>; requiert la liste des utilisateurs 
  connect&eacute;s au serveur eff.org<BR><TT>:John USERS tolsun.oulu.fi</TT> ; 
  requ&ecirc;te de John pour obtenir la liste des utilisateur du serveur 
  tolsun.oulu.fi </UL>

<H2><A name=56>5.6</A> Message WALLOPS</H2>
Commande: WALLOPS<BR>Param&egrave;tres: Texte &agrave; envoyer &agrave; tous les 
op&eacute;rateurs actuellement connect&eacute;s. 
<P>Envoie un message &agrave; tous les op&eacute;rateurs actuellement 
connect&eacute;s. Apr&egrave;s avoir essay&eacute; de laisser acc&egrave;s 
&agrave; cette commande &agrave; tous les utilisateurs, il a &eacute;t&eacute; 
constat&eacute; qu'on en abusait comme un moyen d'envoyer des messages &agrave; 
plein de personnes (comme WALL). A cause de cela, il est recommand&eacute; que 
l'impl&eacute;mentations courante de WALLOPS ne reconnaisse que les serveurs 
comme &eacute;metteurs de WALLOPS. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           ERR_NEEDMOREPARAMS
</PRE>
Exemples: 
<UL><TT>:csd.bu.edu WALLOPS :Connect '*.uiuc.edu 6667' from Joshua</TT> ; 
  message WALLOPS de csd.bu.edu annon&ccedil;ant un message CONNECT re&ccedil;u 
  et trait&eacute;, issu de Joshua. </UL>

<H2><A name=57>5.7</A> Message USERHOST</H2>
Commande: USERHOST<BR>Param&egrave;tres: &lt;pseudonyme&gt;{&lt;espace 
&gt;&lt;pseudonyme&gt;} 
<P>La commande USERHOST prends jusqu'&agrave; 5 pseudonymes, 
s&eacute;par&eacute;s par des virgules, et revoie une liste d'informations pour 
chacun des pseudonymes qu'il a trouv&eacute;. La liste des r&eacute;ponses 
contient chaque r&eacute;ponse s&eacute;par&eacute;e par des espaces. 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           RPL_USERHOST                    ERR_NEEDMOREPARAMS
</PRE>
Exemples: 
<UL><TT>USERHOST Wiz Michael Marty p</TT> ;requ&ecirc;te USERHOST pour 
  information sur les pseudos &quot;Wiz&quot;, &quot;Michael&quot;, 
  &quot;Marty&quot; et &quot;p&quot; </UL>

<H2><A name=58>5.8</A> Message ISON</H2>
Commande: ISON<BR>Param&egrave;tres: 
&lt;pseudonyme&gt;{&lt;espace&gt;&lt;pseudonyme&gt;} 
<P>La commande ISON a &eacute;t&eacute; impl&eacute;ment&eacute;e pour fournir 
une mani&egrave;re rapide et efficace de savoir si un pseudonyme donn&eacute; 
est connect&eacute; &agrave; l'IRC. ISON prend un (1) param&egrave;tre : une 
liste de pseudonymes s&eacute;par&eacute;s par des espaces. Chaque pseudonyme 
pr&eacute;sent est ajout&eacute; &agrave; la cha&icirc;ne de r&eacute;ponse du 
serveur. Ainsi, la cha&icirc;ne de r&eacute;ponse peut &ecirc;tre vide (aucun 
utilisateur est pr&eacute;sent), une copie exacte de la cha&icirc;ne de 
caract&egrave;res pass&eacute;e en param&egrave;tres (ils sont tous 
pr&eacute;sents), ou un tout sous-ensemble du groupe de pseudonymes pass&eacute; 
en param&egrave;tre. La seule limite au nombre de pseudos qui peuvent &ecirc;tre 
test&eacute;s est la troncature des commandes &agrave; une longueur de 512 
caract&egrave;res. 
<P>ISON n'est trait&eacute;e que par le serveur local au client effectuant la 
requ&ecirc;te, et n'est donc pas pass&eacute; pour traitement aux autres 
serveurs 
<P>R&eacute;ponses num&eacute;riques : 
<PRE>           RPL_ISON                ERR_NEEDMOREPARAMS
</PRE>
Exemples: 
<UL><TT>ISON phone trillian WiZ jarlek Avalon Angel Monstah</TT> ; Exemple de 
  requ&ecirc;te ISON pour 7 pseudonymes </UL>

<H1><A name=6>6.</A> R&eacute;ponses</H1>
Ce qui suit est une liste de r&eacute;ponses num&eacute;riques 
g&eacute;n&eacute;r&eacute;es &agrave; la suite des commandes 
sp&eacute;cifi&eacute;es ci-dessus. Chaque r&eacute;ponse num&eacute;rique est 
donn&eacute;e avec son num&eacute;ro, son nom, et sa cha&icirc;ne de 
r&eacute;ponse (en anglais). 
<H2><A name=61>6.1</A> R&eacute;ponses d'erreur</H2>

<DL>
  <DT>401 ERR_NOSUCHNICK 
  <DD>&quot;&lt;pseudonyme&gt; :No such nick/channel&quot; </DD></DL>
Utilis&eacute; pour indiquer que le pseudonyme pass&eacute; en param&egrave;tre 
&agrave; la commande n'est pas actuellement utilis&eacute;. 
<DL>
  <DT>402 ERR_NOSUCHSERVER 
  <DD>&quot;&lt;nom de serveur&gt; :No such server&quot; </DD></DL>
Utilis&eacute; pour indiquer que le nom du serveur donn&eacute; n'existe pas 
actuellement. 
<DL>
  <DT>403 ERR_NOSUCHCHANNEL 
  <DD>&quot;&lt;nom de canal&gt; :No such channel&quot; </DD></DL>
Utilis&eacute; pour indiquer que le nom de canal donn&eacute; est invalide. 
<DL>
  <DT>404 ERR_CANNOTSENDTOCHAN 
  <DD>&quot;&lt;nom de canal&gt; :Cannot send to channel&quot; </DD></DL>
Envoy&eacute; &agrave; un utilisateur qui (a) soit n'est pas dans un canal en 
mode +n ou (b) n'est pas op&eacute;rateur (ou mode +v) sur un canal en mode +m ; 
et essaie d'envoyer un PRIVMSG &agrave; ce canal. 
<DL>
  <DT>405 ERR_TOOMANYCHANNELS 
  <DD>&quot;&lt;nom de canal&gt; :You have joined too many channels&quot; 
</DD></DL>
Envoy&eacute; &agrave; un utilisateur quand il a atteint le nombre maximal de 
canaux qu'il est autoris&eacute; &agrave; acc&eacute;der simultan&eacute;ment, 
et qu'il essaie d'en rejoindre un autre. 
<DL>
  <DT>406 ERR_WASNOSUCHNICK 
  <DD>&quot;&lt;nom de canal&gt; :There was no such nickname&quot; </DD></DL>
Renvoy&eacute; par WHOWAS pour indiquer qu'il n'y a pas d'information dans 
l'historique concernant ce pseudonyme. 
<DL>
  <DT>407 ERR_TOOMANYTARGETS 
  <DD>&quot;&lt;destination&gt; :Duplicate recipients. No message 
  delivered&quot; </DD></DL>
Renvoy&eacute; &agrave; un client qui essaie d'envoyer un PRIVMSG/NOTICE 
utilisant le format de destination utilisateur@h&ocirc;te pour lequel 
utilisateur@h&ocirc;te a plusieurs occurrences. 
<DL>
  <DT>409 ERR_NOORIGIN 
  <DD>&quot;:No origin specified&quot; </DD></DL>
Message PING ou PONG sans le param&egrave;tre origine qui est obligatoire 
puisque ces commandes doivent marcher sans pr&eacute;fixe. 
<DL>
  <DT>411 ERR_NORECIPIENT 
  <DD>&quot;:No recipient given (&lt;commande&gt;)&quot; </DD></DL>
Pas de destinataire. 
<DL>
  <DT>412 ERR_NOTEXTTOSEND 
  <DD>&quot;:No text to send&quot; </DD></DL>
Pas de texte &agrave; envoyer. 
<DL>
  <DT>413 ERR_NOTOPLEVEL 
  <DD>&quot;&lt;masque&gt; :No toplevel domain specified&quot; </DD></DL>
Domaine principal non sp&eacute;cifi&eacute;. 
<DL>
  <DT>414 ERR_WILDTOPLEVEL 
  <DD>&quot;&lt;masque&gt; :Wildcard in toplevel domain&quot; </DD></DL>
Joker dans le domaine principal 
<P>Les erreurs 412-414 sont renvoy&eacute;es par PRIVMSG pour indiquer que le 
message n'a pas &eacute;t&eacute; d&eacute;livr&eacute;. ERR_NOTOPLEVEL et 
ERR_WILDTOPLEVEL sont les erreurs renvoy&eacute;es lors d'une utilisation 
invalide de &quot;PRIVMSG $&lt;serveur&gt;&quot; ou de &quot;PRIVMSG 
#&lt;h&ocirc;te&gt;&quot;. 
<DL>
  <DT>421 ERR_UNKNOWNCOMMAND 
  <DD>&quot;&lt;commande&gt; :Unknown command&quot; </DD></DL>
Renvoy&eacute; &agrave; un client enregistr&eacute; pour indiquer que la 
commande envoy&eacute;e est inconnue du serveur. 
<DL>
  <DT>422 ERR_NOMOTD 
  <DD>&quot;:MOTD File is missing&quot; </DD></DL>
Le fichier MOTD du serveur n'a pas pu &ecirc;tre ouvert. 
<DL>
  <DT>423 ERR_NOADMININFO 
  <DD>&quot;&lt;serveur&gt; :No administrative info available&quot; </DD></DL>
Renvoy&eacute; par un serveur en r&eacute;ponse &agrave; un message ADMIN quand 
il y a une erreur lors de la recherche des informations appropri&eacute;es. 
<DL>
  <DT>424 ERR_FILEERROR 
  <DD>&quot;:File error doing &lt;fichier op&gt; on 
  &lt;fichier&gt;&quot;<BR></DD></DL>
Message d'erreur g&eacute;n&eacute;rique utilis&eacute; pour rapporter un 
&eacute;chec d'op&eacute;ration de fichier durant le traitement d'un message. 
<DL>
  <DT>431 ERR_NONICKNAMEGIVEN 
  <DD>&quot;:No nickname given&quot; </DD></DL>
Renvoy&eacute; quand un param&egrave;tre pseudonyme attendu pour une commande 
n'est pas fourni. 
<DL>
  <DT>432 ERR_ERRONEUSNICKNAME 
  <DD>&quot;&lt;pseudo&gt; :Erroneus nickname&quot; </DD></DL>
Renvoy&eacute; apr&egrave;s la r&eacute;ception d'un message NICK qui contient 
des caract&egrave;res qui ne font pas partie du jeu autoris&eacute;. Voir les 
sections <A 
href="irc_rfc_fr1459.htm#1">1</A> 
et <A 
href="irc_rfc_fr1459.htm#22">2.2</A> 
pour les d&eacute;tails des pseudonymes valides. 
<DL>
  <DT>433 ERR_NICKNAMEINUSE 
  <DD>&quot;&lt;nick&gt; :Nickname is already in use&quot; </DD></DL>
Renvoy&eacute; quand le traitement d'un message NICK r&eacute;sulte en une 
tentative de changer de pseudonyme en un d&eacute;j&agrave; existant. 
<DL>
  <DT>436 ERR_NICKCOLLISION 
  <DD>&quot;&lt;nick&gt; :Nickname collision KILL&quot; </DD></DL>
Renvoy&eacute; par un serveur &agrave; un client lorsqu'il d&eacute;tecte une 
collision de pseudonymes (enregistrement d'un pseudonyme qui existe 
d&eacute;j&agrave; sur un autre serveur). 
<DL>
  <DT>441 ERR_USERNOTINCHANNEL 
  <DD>&quot;&lt;pseudo&gt; &lt;canal&gt; :They aren't on that channel&quot; 
</DD></DL>
Renvoy&eacute; par un serveur pour indiquer que l'utilisateur donn&eacute; n'est 
pas dans le canal sp&eacute;cifi&eacute;. 
<DL>
  <DT>442 ERR_NOTONCHANNEL 
  <DD>&quot;&lt;canal&gt; :You're not on that channel&quot; </DD></DL>
Renvoy&eacute; par le serveur quand un client essaie une commande affectant un 
canal dont il ne fait pas partie. 
<DL>
  <DT>443 ERR_USERONCHANNEL 
  <DD>&quot;&lt;utilisateur&gt; &lt;channel&gt; :is already on channel&quot; 
  </DD></DL>
Renvoy&eacute; quand un client essaie d'inviter un utilisateur sur un canal 
o&ugrave; il est d&eacute;j&agrave;. 
<DL>
  <DT>444 ERR_NOLOGIN 
  <DD>&quot;&lt;utilisateur&gt; :User not logged in&quot; </DD></DL>
Renvoy&eacute; par un SUMMON si la commande n'a pas pu &ecirc;tre accomplie, car 
l'utilisateur n'est pas connect&eacute;. 
<DL>
  <DT>445 ERR_SUMMONDISABLED 
  <DD>&quot;:SUMMON has been disabled&quot; </DD></DL>
Renvoy&eacute; en r&eacute;ponse &agrave; une commande SUMMON si le SUMMON est 
d&eacute;sactiv&eacute;. Tout serveur qui ne g&egrave;re pas les SUMMON doit 
retourner cette valeur. 
<DL>
  <DT>446 ERR_USERSDISABLED 
  <DD>&quot;:USERS has been disabled&quot; </DD></DL>
Retourn&eacute; en r&eacute;ponse &agrave; une commande USERS si la commande est 
d&eacute;sactiv&eacute;e. Tout serveur qui ne g&egrave;re pas les USERS doit 
retourner cette valeur. 
<DL>
  <DT>451 ERR_NOTREGISTERED 
  <DD>&quot;:You have not registered&quot; </DD></DL>
Retourn&eacute; par le serveur pour indiquer &agrave; un client qu'il doit 
&ecirc;tre enregistr&eacute; avant que ses commandes soient trait&eacute;es. 
<DL>
  <DT>461 ERR_NEEDMOREPARAMS 
  <DD>&quot;&lt;commande&gt; :Not enough parameters&quot; </DD></DL>
Renvoy&eacute; par un serveur apr&egrave;s de nombreuses commandes, afin 
d'indiquer que le client n'a pas fourni assez de param&egrave;tres. 
<DL>
  <DT>462 ERR_ALREADYREGISTRED 
  <DD>&quot;:You may not reregister&quot; </DD></DL>
Retourn&eacute; par le serveur &agrave; tout lien qui tente de changer le 
d&eacute;tail de leurs informations enregistr&eacute;es (tels que mot de passe 
et d&eacute;tail utilisateur du second message USER) 
<DL>
  <DT>463 ERR_NOPERMFORHOST 
  <DD>&quot;:Your host isn't among the privileged&quot; </DD></DL>
Renvoy&eacute; &agrave; un client qui essaie de s'enregistrer sur un serveur qui 
n'accepte pas les connections depuis cet h&ocirc;te. 
<DL>
  <DT>464 ERR_PASSWDMISMATCH 
  <DD>&quot;:Password incorrect&quot; </DD></DL>
Retourn&eacute; pour indiquer l'&eacute;chec d'une tentative d'enregistrement 
d'une connection d&ucirc; &agrave; un mot de passe incorrect ou manquant. 
<DL>
  <DT>465 ERR_YOUREBANNEDCREEP 
  <DD>&quot;:You are banned from this server&quot; </DD></DL>
Retourn&eacute; apr&egrave;s une tentative de connection et d'enregistrement sur 
un serveur configur&eacute; explicitement pour vous d&eacute;nier les 
connections. 
<DL>
  <DT>467 ERR_KEYSET 
  <DD>&quot;&lt;canal&gt; :Channel key already set&quot; </DD></DL>
Cl&eacute; de canal d&eacute;j&agrave; d&eacute;finie. 
<DL>
  <DT>471 ERR_CHANNELISFULL 
  <DD>&quot;&lt;canal&gt; :Cannot join channel (+l)&quot; </DD></DL>
Impossible de joindre le canal (+l)<BR>
<DL>
  <DT>472 ERR_UNKNOWNMODE 
  <DD>&quot;&lt;carat&egrave;re&gt; :is unknown mode char to me&quot; </DD></DL>
Mode inconnu. 
<DL>
  <DT>473 ERR_INVITEONLYCHAN 
  <DD>&quot;&lt;canal&gt; :Cannot join channel (+i)&quot; </DD></DL>
Impossible de joindre le canal (+i). 
<DL>
  <DT>474 ERR_BANNEDFROMCHAN 
  <DD>&quot;&lt;canal&gt; :Cannot join channel (+b)&quot; </DD></DL>
Impossible de joindre le canal (+b). 
<DL>
  <DT>475 ERR_BADCHANNELKEY 
  <DD>&quot;&lt;canal&gt; :Cannot join channel (+k)&quot; </DD></DL>
Impossible de joindre le canal (+k). 
<DL>
  <DT>481 ERR_NOPRIVILEGES 
  <DD>&quot;:Permission Denied- You're not an IRC operator&quot; </DD></DL>
Toute commande qui requiert le privil&egrave;ge d'op&eacute;rateur pour 
op&eacute;rer doit retourner cette erreur pour indiquer son &eacute;chec. 
<DL>
  <DT>482 ERR_CHANOPRIVSNEEDED 
  <DD>&quot;&lt;canal&gt; :You're not channel operator&quot; </DD></DL>
Toute commande qui requiert les privil&egrave;ges 'chanop' (telles que les 
messages MODE) doit retourner ce message &agrave; un client qui l'utilise sans 
&ecirc;tre chanop sur le canal sp&eacute;cifi&eacute;. 
<DL>
  <DT>483 ERR_CANTKILLSERVER 
  <DD>&quot;:You cant kill a server!&quot; </DD></DL>
Toute tentative d'utiliser la commande KILL sur un serveur doit &ecirc;tre 
refus&eacute;e et cette erreur renvoy&eacute;e directement au client. 
<DL>
  <DT>491 ERR_NOOPERHOST 
  <DD>&quot;:No O-lines for your host&quot; </DD></DL>
Si un client envoie un message OPER et que le serveur n'a pas &eacute;t&eacute; 
configur&eacute; pour autoriser les connection d'op&eacute;rateurs de cet 
h&ocirc;te, cette erreur doit &ecirc;tre retourn&eacute;e.<BR>
<DL>
  <DT>501 ERR_UMODEUNKNOWNFLAG 
  <DD>&quot;:Unknown MODE flag&quot; </DD></DL>
Renvoy&eacute; par un serveur pour indiquer que le message MODE a 
&eacute;t&eacute; envoy&eacute; avec un pseudonyme et que le mode 
sp&eacute;cifi&eacute; n'a pas &eacute;t&eacute; identifi&eacute;. 
<DL>
  <DT>502 ERR_USERSDONTMATCH 
  <DD>&quot;:Cant change mode for other users&quot; </DD></DL>
Erreur envoy&eacute; &agrave; tout utilisateur qui essaie de voir ou de modifier 
le mode utilisateur d'un autre client. 
<H2><A name=62>6.2</A> R&eacute;ponses aux commandes.</H2>

<DL>
  <DT>300 RPL_NONE </DT></DL>
Num&eacute;ro de r&eacute;ponse bidon. Inutilis&eacute;. 
<DL>
  <DT>302 RPL_USERHOST 
  <DD>&quot;:[&lt;r&eacute;ponse&gt;{&lt;espace&gt;&lt;r&eacute;ponse&gt;}]&quot; 
  </DD></DL>
Format de r&eacute;ponse utilis&eacute; par USERHOST pour lister les 
r&eacute;ponses &agrave; la liste des requ&ecirc;tes. La cha&icirc;ne de 
r&eacute;ponse est compos&eacute;e ainsi : <BR>&lt;r&eacute;ponse&gt; ::= 
&lt;pseudo&gt;['*'] '=' &lt;'+'|'-'&gt;&lt;h&ocirc;te&gt; <BR>Le '*' indique si 
le client est enregistr&eacute; comme op&eacute;rateur. Les caract&egrave;res 
'-' ou '+' indiquent respectivement si le client a d&eacute;fini un message AWAY 
ou non. 
<DL>
  <DT>303 RPL_ISON 
  <DD>&quot;:[&lt;pseudo&gt; {&lt;espace&gt;&lt;pseudo&gt;}]&quot; </DD></DL>
Format de r&eacute;ponse utilis&eacute; par ISON pour lister les r&eacute;ponses 
&agrave; la liste de requ&ecirc;te. 
<DL>
  <DT>301 RPL_AWAY 
  <DD>&quot;&lt;pseudo&gt; :&lt; message d'absence&gt;&quot; 
  <DT>305 RPL_UNAWAY 
  <DD>&quot;:You are no longer marked as being away&quot; 
  <DT>306 RPL_NOWAWAY 
  <DD>&quot;:You have been marked as being away&quot; </DD></DL>
Ces trois r&eacute;ponses sont utilis&eacute;es avec la commande AWAY (si elle 
est autoris&eacute;e). RPL_AWAY est envoy&eacute; &agrave; tout client qui 
envoie un PRIVMSG &agrave; un client absent. RPL_AWAY n'est envoy&eacute; que 
par le serveur sur lequel le client est connect&eacute;. Les r&eacute;ponses 
RPL_UNAWAY et RPL_NOWAWAY sont envoy&eacute;es quand un client retire et 
d&eacute;fini un message AWAY.<BR>
<DL>
  <DT>311 RPL_WHOISUSER 
  <DD>&quot;&lt;pseudo&gt; &lt;utilisateur&gt; &lt;h&ocirc;te&gt; * :&lt;vrai 
  nom&gt;&quot; 
  <DT>312 RPL_WHOISSERVER 
  <DD>&quot;&lt;pseudo&gt; &lt;serveur&gt; :&lt;info serveur &gt;&quot; 
  <DT>313 RPL_WHOISOPERATOR 
  <DD>&quot;&lt;pseudo&gt; :is an IRC operator&quot; 
  <DT>317 RPL_WHOISIDLE 
  <DD>&quot;&lt;pseudo&gt; &lt;integer&gt; :seconds idle&quot; 
  <DT>318 RPL_ENDOFWHOIS 
  <DD>&quot;&lt;pseudo&gt; :End of /WHOIS list&quot; 
  <DT>319 RPL_WHOISCHANNELS 
  <DD>&quot;&lt;pseudo&gt; :{[@|+]&lt;canal&gt;&lt;espace&gt;}&quot; </DD></DL>
Les r&eacute;ponses 311 &agrave; 313 et 317 &agrave; 319 sont toutes 
g&eacute;n&eacute;r&eacute;es en r&eacute;ponses &agrave; un message WHOIS. S'il 
y a assez de param&egrave;tres, le serveur r&eacute;pondant doit soit formuler 
une r&eacute;ponse parmi les num&eacute;ros ci-dessus (si le pseudo 
recherch&eacute; a &eacute;t&eacute; trouv&eacute;) ou renvoyer un message 
d'erreur. Le '*' dans RPL_WHOISUSER est l&agrave; en tant que litt&eacute;ral et 
non en tant que joker. Pour chaque jeu de r&eacute;ponses, seul 
RPL_WHOISCHANNELS peut appara&icirc;tre plusieurs fois (pour les longues listes 
de nom de canaux). Les caract&egrave;res '@' et '+' &agrave; c&ocirc;t&eacute; 
du nom de canal indique si un client est op&eacute;rateur de canal, ou si on l'a 
autoris&eacute; &agrave; parler dans un canal mod&eacute;r&eacute;. La 
r&eacute;ponse RPL_ENDOFWHOIS est utilis&eacute;e pour marquer la fin de la 
r&eacute;ponse WHOIS. 
<DL>
  <DT>314 RPL_WHOWASUSER 
  <DD>&quot;&lt;pseudo&gt; &lt;utilisateur&gt; &lt;h&ocirc;te&gt; * :&lt;vrai 
  nom&gt;&quot; 
  <DT>369 RPL_ENDOFWHOWAS 
  <DD>&quot;&lt;pseudo&gt; :End of WHOWAS&quot; </DD></DL>
Lorsqu'il r&eacute;pond &agrave; un message WHOWAS, un serveur doit utiliser 
RPL_WHOWASUSER, RPL_WHOISSERVER ou ERR_WASNOSUCHNICK pour chacun des pseudonymes 
de la liste fournie. A la fin de toutes les r&eacute;ponses, il doit y avoir un 
RPL_ENDOFWHOWAS (m&ecirc;me s'il n'y a eu qu'une r&eacute;ponse, et que 
c'&eacute;tait une erreur). 
<DL>
  <DT>321 RPL_LISTSTART 
  <DD>&quot;Channel :Users Name&quot; 
  <DT>322 RPL_LIST 
  <DD>&quot;&lt;canal&gt; &lt;# visible&gt; :&lt;sujet&gt;&quot; 
  <DT>323 RPL_LISTEND 
  <DD>&quot;:End of /LIST&quot; </DD></DL>
Les r&eacute;ponses RPL_LISTSTART, RPL_LIST, RPL_LISTEND marquent le 
d&eacute;but, les r&eacute;ponses proprement dites, et la fin du traitement 
d'une commande LIST. S'il n'y a aucun canal disponible, seules les 
r&eacute;ponses de d&eacute;but et de fin sont envoy&eacute;es.<BR>
<DL>
  <DT>324 RPL_CHANNELMODEIS 
  <DD>&quot;&lt;canal&gt; &lt;mode&gt; &lt;param&egrave;tres de mode 
  &gt;&quot;<BR>
  <DT>331 RPL_NOTOPIC 
  <DD>&quot;&lt;canal&gt; :No topic is set&quot; 
  <DT>332 RPL_TOPIC 
  <DD>&quot;&lt;canal&gt; :&lt;sujet&gt;&quot; </DD></DL>
Lors de l'envoi d'un message TOPIC pour d&eacute;terminer le sujet d'un canal, 
une de ces deux r&eacute;ponses est envoy&eacute;e. Si le sujet est 
d&eacute;fini, RPL_TOPIC est renvoy&eacute;e, sinon c'est RPL_NOTOPIC.<BR>
<DL>
  <DT>341 RPL_INVITING 
  <DD>&quot;&lt;canal&gt; &lt;pseudo&gt;&quot; </DD></DL>
Renvoy&eacute; pas un serveur pour indiquer que le message INVITE a 
&eacute;t&eacute; enregistr&eacute;, et est en cours de transmission au client 
final.<BR>
<DL>
  <DT>342 RPL_SUMMONING 
  <DD>&quot;&lt;utilisateur&gt; :Summoning user to IRC&quot;<BR></DD></DL>
Renvoy&eacute; par un serveur en r&eacute;ponse &agrave; un message SUMMON pour 
indiquer qu'il appelle cet utilisateur. 
<DL>
  <DT>351 RPL_VERSION 
  <DD>&quot;&lt;version&gt;.&lt;debuglevel&gt; &lt;serveur&gt; 
  :&lt;commentaires&gt;&quot; </DD></DL>
R&eacute;ponse du serveur indiquant les d&eacute;tails de sa version. 
&lt;version&gt; est la version actuelle du programme utilis&eacute; (comprenant 
le num&eacute;ro de mise &agrave; jour) et &lt;debuglevel&gt; est utilis&eacute; 
pour indiquer si le serveur fonctionne en mode d&eacute;bugage. <BR>Le champ 
&lt;commentaire&gt; peut contenir n'importe quel commentaire au sujet de la 
version, ou des d&eacute;tails suppl&eacute;mentaires sur la version.<BR>
<DL>
  <DT>352 RPL_WHOREPLY 
  <DD>&quot;&lt;canal&gt; &lt;utilisateur&gt; &lt;h&ocirc;te&gt; &lt;serveur&gt; 
  &lt;pseudo&gt; &lt;H|G&gt;[*][@|+] :&lt;compteur de distance&gt; &lt;vrai 
  nom&gt;&quot; 
  <DT>315 RPL_ENDOFWHO 
  <DD>&quot;&lt;nom&gt; :End of /WHO list&quot; </DD></DL>
La paire RPL_WHOREPLY et RPL_ENDOFWHO est utilis&eacute;e en r&eacute;ponse 
&agrave; un message WHO. Le RPL_WHOREPLY n'est envoy&eacute; que s'il y a une 
correspondance &agrave; la requ&ecirc;te WHO. S'il y a une liste de 
param&egrave;tre fournie avec le message WHO, un RPL_ENDOFWHO doit &ecirc;tre 
envoy&eacute; apr&egrave;s le traitement de chaque &eacute;l&eacute;ment de la 
liste, &lt;nom&gt; &eacute;tant l'&eacute;l&eacute;ment. 
<DL>
  <DT>353 RPL_NAMREPLY 
  <DD>&quot;&lt;canal&gt; :[[@|+]&lt;pseudo&gt; [[@|+]&lt;pseudo&gt; 
  [...]]]&quot; 
  <DT>366 RPL_ENDOFNAMES 
  <DD>&quot;&lt;canal&gt; :End of /NAMES list&quot; </DD></DL>
En r&eacute;ponse &agrave; un message NAMES, une paire consistant de 
RPL_NAMREPLY et RPL_ENDOFNAMES est renvoy&eacute;e par le serveur au client. 
S'il n'y a pas de canal r&eacute;sultant de la requ&ecirc;te, seul 
RPL_ENDOFNAMES est retourn&eacute;. L'exception &agrave; cela est lorsqu'un 
message NAMES est envoy&eacute; sans param&egrave;tre et que tous les canaux et 
contenus visibles sont renvoy&eacute;s en une suite de message RPL_NAMEREPLY 
avec un RPL_ENDOFNAMES indiquant la fin. 
<DL>
  <DT>364 RPL_LINKS 
  <DD>&quot;&lt;masque&gt; &lt;serveur&gt; :&lt;compteur de distance&gt; 
  &lt;info serveur &gt;&quot; 
  <DT>365 RPL_ENDOFLINKS 
  <DD>&quot;&lt;mask&gt; :End of /LINKS list&quot; </DD></DL>
En r&eacute;ponse &agrave; un message LINKS, un serveur doit r&eacute;pondre en 
utilisant le nombre RPL_LINKS, et indiquer la fin de la liste avec une 
r&eacute;ponse RPL_ENDOFLINKS.<BR>
<DL>
  <DT>367 RPL_BANLIST 
  <DD>&quot;&lt;canal&gt; &lt;identification de bannissement&gt;&quot; 
  <DT>368 RPL_ENDOFBANLIST 
  <DD>&quot;&lt;canal&gt; :End of channel ban list&quot;<BR></DD></DL>
Quand il liste les bannissements actifs pour un canal donn&eacute;, un serveur 
doit renvoyer la liste en utilisant les messages RPL_BANLIST et 
RPL_ENDOFBANLIST. Un RPL_BANLIST diff&eacute;rent doit &ecirc;tre utilis&eacute; 
pour chaque identification de bannissement. Apr&egrave;s avoir list&eacute; les 
identifications de bannissement (s'il y en a), un RPL_ENDOFBANLIST doit 
&ecirc;tre renvoy&eacute;. 
<DL>
  <DT>371 RPL_INFO 
  <DD>&quot;:&lt;cha&icirc;ne&gt;&quot; 
  <DT>374 RPL_ENDOFINFO 
  <DD>&quot;:End of /INFO list&quot; </DD></DL>
Un serveur r&eacute;pondant &agrave; un message INFO doit envoyer toute sa 
s&eacute;rie d'info en une suite de r&eacute;ponses RPL_INFO, avec un 
RPL_ENDOFINFO pour indiquer la fin des r&eacute;ponses. 
<DL>
  <DT>375 RPL_MOTDSTART 
  <DD>&quot;:- &lt;serveur&gt; Message of the day - &quot; 
  <DT>372 RPL_MOTD 
  <DD>&quot;:- &lt;texte&gt;&quot; 
  <DT>376 RPL_ENDOFMOTD 
  <DD>&quot;:End of /MOTD command&quot; </DD></DL>
Lorsqu'il r&eacute;pond &agrave; un message MOTD et que le fichier MOTD est 
trouv&eacute;, le fichier est affich&eacute; ligne par ligne, chaque ligne ne 
devant pas d&eacute;passer 80 caract&egrave;res, en utilisant des 
r&eacute;ponses au format RPL_MOTD. Celles-ci doivent &ecirc;tre 
encadr&eacute;es par un RPL_MOTDSTART (avant les RPL_MOTDs) et un RPL_ENDOFMOTD 
(apr&egrave;s). 
<DL>
  <DT>381 RPL_YOUREOPER 
  <DD>&quot;:You are now an IRC operator&quot;<BR></DD></DL>
RPL_YOUREOPER est renvoy&eacute; &agrave; un client qui vient d'&eacute;mettre 
un message OPER et a obtenu le statut d'op&eacute;rateur. 
<DL>
  <DT>382 RPL_REHASHING 
  <DD>&quot;&lt;fichier de configuration&gt; :Rehashing&quot; </DD></DL>
Si l'option REHASH est activ&eacute;e et qu'un op&eacute;rateur envoie un 
message REHASH, un RPL_REHASHING est renvoy&eacute; &agrave; l'op&eacute;rateur. 

<DL>
  <DT>391 RPL_TIME 
  <DD>&quot;&lt;serveur&gt; :&lt;cha&icirc;ne indiquant l'heure locale du 
  serveur &gt;&quot; </DD></DL>
Lorsqu'il r&eacute;pond &agrave; un message TIME, un serveur doit 
r&eacute;pondre en utilisant le format RPL_TIME ci-dessus. La cha&icirc;ne 
montrant l'heure ne doit que contenir le jour et l'heure correcte. Il n'y a pas 
d'obligation suppl&eacute;mentaire. 
<DL>
  <DT>392 RPL_USERSSTART 
  <DD>&quot;:UserID Terminal H&ocirc;te&quot; 
  <DT>393 RPL_USERS 
  <DD>&quot;:%-8s %-9s %-8s&quot; 
  <DT>394 RPL_ENDOFUSERS 
  <DD>&quot;:End of users&quot; 
  <DT>395 RPL_NOUSERS 
  <DD>&quot;:Nobody logged in&quot; </DD></DL>
Si le message USERS est g&eacute;r&eacute; par un serveur, les r&eacute;ponses 
RPL_USERSTART, RPL_USERS, RPL_ENDOFUSERS et RPL_NOUSERS sont utilis&eacute;es. 
RPL_USERSSTART doit &ecirc;tre envoy&eacute; en premier, suivi par soit une 
s&eacute;quence de RPL_USERS ou un unique RPL_NOUSER. Enfin, viens un 
RPL_ENDOFUSERS. 
<DL>
  <DT>200 RPL_TRACELINK 
  <DD>&quot;Link &lt;version &amp; niveau de d&eacute;bugage &gt; 
  &lt;destination&gt; &lt; serveur suivant&gt;&quot; 
  <DT>201 RPL_TRACECONNECTING 
  <DD>&quot;Try. &lt;classe&gt; &lt;serveur&gt;&quot; 
  <DT>202 RPL_TRACEHANDSHAKE 
  <DD>&quot;H.S. &lt;classe&gt; &lt;serveur&gt;&quot; 
  <DT>203 RPL_TRACEUNKNOWN 
  <DD>&quot;???? &lt;classe&gt; [&lt;adresse IP du client au format utilisant 
  des points &gt;]&quot; 
  <DT>204 RPL_TRACEOPERATOR 
  <DD>&quot;Oper &lt;classe&gt; &lt;pseudo&gt;&quot; 
  <DT>205 RPL_TRACEUSER 
  <DD>&quot;User &lt;classe&gt; &lt;pseudo&gt;&quot; 
  <DT>206 RPL_TRACESERVER 
  <DD>&quot;Serv &lt;classe&gt; &lt;int&gt;S &lt;int&gt;C &lt;serveur&gt; 
  &lt;pseudo!utilisateur|*!*&gt;@&lt;h&ocirc;te|serveur&gt;&quot; 
  <DT>208 RPL_TRACENEWTYPE 
  <DD>&quot;&lt;nouveau type&gt; 0 &lt;nom du client&gt;&quot; 
  <DT>261 RPL_TRACELOG 
  <DD>&quot;File &lt;fichier log&gt; &lt;niveau de d&eacute;bugage&gt;&quot; 
  </DD></DL>
Les RPL_TRACE* sont tous renvoy&eacute;s par le serveur en r&eacute;ponse 
&agrave; un message TRACE. Le nombre de messages retourn&eacute;s d&eacute;pend 
de la nature du message TRACE, et s'il a &eacute;t&eacute; envoy&eacute; par un 
op&eacute;rateur ou non. Il n'y a pas d'ordre d&eacute;finissant lequel doit 
&ecirc;tre le premier. Les r&eacute;ponses RPL_TRACEUNKNOWN, RPL_TRACECONNECTING 
et RPL_TRACEHANDSHAKE sont toutes utilis&eacute;es pour des connections qui 
n'ont pas &eacute;t&eacute; compl&egrave;tement &eacute;tablies, et sont soit 
inconnues, soit sont toujours en cours de connection, soit sont dans la phase 
terminale de la 'poign&eacute;e de main du serveur'. RPL_TRACELINK est 
envoy&eacute; par tout serveur qui traite un message TRACE et doit le 
transmettre &agrave; un autre serveur. La liste de RPL_TRACELINK envoy&eacute; 
en r&eacute;ponse &agrave; une commande TRACE traversant le r&eacute;seau IRC 
devrait refl&eacute;ter la connectivit&eacute; actuelle des serveurs le long du 
chemin. RPL_TRACENEWTYPE est utilis&eacute; pour toute connection qui n'entre 
pas dans les autres cat&eacute;gories, mais qui est n&eacute;anmoins 
affich&eacute;e. 
<DL>
  <DT>211 RPL_STATSLINKINFO 
  <DD>&quot;&lt;nom du lien&gt; &lt;sendq&gt; &lt; messages envoy&eacute;s&gt; 
  &lt;octets envoy&eacute;s &gt; &lt;message re&ccedil;us&gt; &lt;octets 
  re&ccedil;us&gt; &lt;temps de connection&gt;&quot; 
  <DT>212 RPL_STATSCOMMANDS 
  <DD>&quot;&lt;commande&gt; &lt;compteur&gt;&quot; 
  <DT>213 RPL_STATSCLINE 
  <DD>&quot;C &lt;h&ocirc;te&gt; * &lt;nom&gt; &lt;port&gt; &lt;classe&gt;&quot; 
  
  <DT>214 RPL_STATSNLINE 
  <DD>&quot;N &lt;h&ocirc;te&gt; * &lt;nom&gt; &lt;port&gt; &lt;classe&gt;&quot; 
  
  <DT>215 RPL_STATSILINE 
  <DD>&quot;I &lt;h&ocirc;te&gt; * &lt;h&ocirc;te&gt; &lt;port&gt; 
  &lt;classe&gt;&quot; 
  <DT>216 RPL_STATSKLINE 
  <DD>&quot;K &lt;h&ocirc;te&gt; * &lt;nom d'utilisateur&gt; &lt;port&gt; 
  &lt;classe&gt;&quot; 
  <DT>218 RPL_STATSYLINE 
  <DD>&quot;Y &lt;classe&gt; &lt;fr&eacute;quence des PINGS &gt; 
  &lt;fr&eacute;quence de connection &gt; &lt;sendq max&gt;&quot; 
  <DT>219 RPL_ENDOFSTATS 
  <DD>&quot;&lt;lettre de stats &gt; :End of /STATS report&quot; 
  <DT>241 RPL_STATSLLINE 
  <DD>&quot;L &lt;masque d'h&ocirc;te&gt; * &lt;nom de serveur&gt; 
  &lt;profondeur maxi&gt;&quot; 
  <DT>242 RPL_STATSUPTIME 
  <DD>&quot;:Server Up %d days %d:%02d:%02d&quot; 
  <DT>243 RPL_STATSOLINE 
  <DD>&quot;O &lt;masque d'h&ocirc;te&gt; * &lt;nom&gt;&quot; 
  <DT>244 RPL_STATSHLINE 
  <DD>&quot;H &lt;masque d'h&ocirc;te&gt; * &lt;nom de serveur&gt;&quot; 
</DD></DL>

<DL>
  <DT>221 RPL_UMODEIS 
  <DD>&quot;&lt;cha&icirc;ne de mode utilisateur&gt;&quot; </DD></DL>
Pour r&eacute;pondre &agrave; une requ&ecirc;te au sujet du mode du client, 
RPL_UMODEIS est renvoy&eacute;.<BR>
<DL>
  <DT>251 RPL_LUSERCLIENT 
  <DD>&quot;:There are &lt;entier&gt; users and &lt;entier&gt; invisible on 
  &lt;entier&gt; servers&quot; 
  <DT>252 RPL_LUSEROP 
  <DD>&quot;&lt;entier&gt; :operator(s) online&quot; 
  <DT>253 RPL_LUSERUNKNOWN 
  <DD>&quot;&lt;entier&gt; :unknown connection(s)&quot; 
  <DT>254 RPL_LUSERCHANNELS 
  <DD>&quot;&lt;entier&gt; :channels formed&quot; 
  <DT>255 RPL_LUSERME 
  <DD>&quot;:I have &lt;entier&gt; clients and &lt;integer&gt; servers&quot; 
  </DD></DL>
Lors du traitement d'un message LUSERS, le serveur envoie un lot de 
r&eacute;ponses parmi RPL_LUSERCLIENT, RPL_LUSEROP, RPL_USERUNKNOWN, 
RPL_LUSERCHANNELS et RPL_LUSERME. Lorsqu'il r&eacute;pond, un serveur doit 
envoyer RPL_LUSERCLIENT et RPL_LUSERME. Les autres r&eacute;ponses ne sont 
renvoy&eacute;es que si le nombre trouv&eacute; n'est pas nul. 
<DL>
  <DT>256 RPL_ADMINME 
  <DD>&quot;&lt;serveur&gt; :Administrative info&quot; 
  <DT>257 RPL_ADMINLOC1 
  <DD>&quot;:&lt;info admin &gt;&quot; 
  <DT>258 RPL_ADMINLOC2 
  <DD>&quot;:&lt;info admin&gt;&quot; 
  <DT>259 RPL_ADMINEMAIL 
  <DD>&quot;:&lt;info admin&gt;&quot; </DD></DL>
Lorsqu'il r&eacute;pond &agrave; un message ADMIN, un serveur doit renvoyer les 
r&eacute;ponses RLP_ADMINME &agrave; RPL_ADMINEMAIL et fournir un texte de 
message avec chacune. Pour RPL_ADMINLOC1, une description de la ville et de 
l'&eacute;tat dans lequel le serveur est, suivi des d&eacute;tails de 
l'universit&eacute; et du d&eacute;partement (RPL_ADMINLOC2), et finalement le 
contact administratif pour ce serveur (avec obligatoirement une adresse email) 
dans RPL_ADMINEMAIL. 
<H2><A name=63>6.3</A> Nombres r&eacute;serv&eacute;s.</H2>
Ces nombres ne sont pas d&eacute;crits si dessus par ce qu'ils tombent dans 
l'une des cat&eacute;gories suivantes : 
<OL>
  <LI>Plus utilis&eacute;s ; 
  <LI>R&eacute;serv&eacute;s &agrave; une future utilisation ; 
  <LI>Utilis&eacute;s &agrave; l'heure actuelle, mais faisant partie des 
  caract&eacute;ristiques non g&eacute;n&eacute;riques des serveurs IRC 
  courants. </LI></OL>

<PRE>        209     RPL_TRACECLASS          217     RPL_STATSQLINE
        231     RPL_SERVICEINFO         232     RPL_ENDOFSERVICES
        233     RPL_SERVICE             234     RPL_SERVLIST
        235     RPL_SERVLISTEND
        316     RPL_WHOISCHANOP         361     RPL_KILLDONE
        362     RPL_CLOSING             363     RPL_CLOSEEND
        373     RPL_INFOSTART           384     RPL_MYPORTIS
        466     ERR_YOUWILLBEBANNED     476     ERR_BADCHANMASK
        492     ERR_NOSERVICEHOST</PRE>

<H1><A name=7>7.</A> Authentification des clients et serveurs</H1>
Les clients et serveurs sont tous deux soumis au m&ecirc;me niveau 
d'authentification. Dans les deux cas, une v&eacute;rification de l'adresse IP 
&agrave; l'h&ocirc;te (avec v&eacute;rification inverse sur cela) est 
effectu&eacute;e pour toutes les connections au serveur. Les deux connections 
sont alors sujet &agrave; une v&eacute;rification de mot de passe (s'il y a un 
mot de passe d&eacute;fini pour cette connection). Ces v&eacute;rifications sont 
possibles pour toutes les connections, bien que la v&eacute;rification d'un mot 
de passe n'est g&eacute;n&eacute;ralement utilis&eacute;e que pour les serveurs. 

<P>Une v&eacute;rification additionnelle de plus en plus commune est le nom 
d'utilisateur &agrave; l'origine de la connection. Trouver le nom d'utilisateur 
&agrave; l'origine d'une connection implique typiquement l'utilisation d'un 
serveur d'authentification tel que IDENT, comme il est d&eacute;crit dans la RFC 
1413. 
<P>Etant donn&eacute; qu'il n'est pas facile d'&eacute;tablir avec 
fiabilit&eacute; qui est &agrave; l autre bout d'une connection r&eacute;seau, 
l'utilisation de mots de passe est fortement recommand&eacute;e sur une 
connection inter-serveur, en plus des autres mesures telles que l'utilisation 
d'un serveur d'identit&eacute;. 
<H1><A name=8>8.</A> Impl&eacute;mentations actuelles</H1>
La seule impl&eacute;mentation actuelle de ce protocole est le serveur IRC 
version 2.8. Les versions pr&eacute;c&eacute;dentes peuvent impl&eacute;menter 
certaines ou toutes les commandes d&eacute;crites dans ce document en utilisant 
les messages NOTICE &agrave; la place des r&eacute;ponses num&eacute;riques. 
Malheureusement, &agrave; causes des probl&egrave;mes de compatibilit&eacute; 
ascensionnelle, les impl&eacute;mentations de certaines parties de ce document 
diff&egrave;rent de ce qui est sp&eacute;cifi&eacute;. Une diff&eacute;rence 
notable est : <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* La pr&eacute;sence de tout LF 
ou CR dans n'importe ou dans le message marque sa fin (au lieu de la 
s&eacute;quence pr&eacute;conis&eacute;e CR-LF) ; 
<P>Le reste de cette section traite d'issues qui sont pour la plupart 
int&eacute;ressantes pour ceux qui veulent impl&eacute;menter un serveur, mais 
certaines s'appliquent aussi directement aux clients. 
<H2><A name=81>8.1</A> Protocole R&eacute;seau: TCP - Pourquoi il est le plus 
appropri&eacute;.</H2>
IRC a &eacute;t&eacute; impl&eacute;ment&eacute; sur TCP car TCP fourni un 
protocole r&eacute;seau fiable qui est appropri&eacute; &agrave; cette 
&eacute;chelle de discussions. L'utilisation d'IP multicast est une alternative, 
mais n'est pas tr&egrave;s r&eacute;pandue &agrave; l'heure actuelle. 
<H3><A name=811>8.1.1</A> Support des sockets Unix</H3>
Etant donn&eacute; que les domaines de sockets Unix permettent les 
op&eacute;rations listen/connect, les impl&eacute;mentations actuelles peuvent 
&ecirc;tre configur&eacute;es pour &eacute;couter et accepter aussi bien les 
clients que les serveurs sur un domaine de socket Unix. On reconna&icirc;t les 
sockets &agrave; un nom d'h&ocirc;te commen&ccedil;ant par un '/'. 
<P>Lors de la communication des informations au sujet d'un domaine de socket 
Unix, le serveur doit remplacer le nom de chemin par le vrai nom d'h&ocirc;te, 
&agrave; moins que le nom socket soit demand&eacute;. 
<H2><A name=82>8.2</A> Traitement des commandes</H2>
Afin de fournir des E/S r&eacute;seaux 'non-tamponn&eacute;es' utiles aux 
clients et aux serveurs, &agrave; chaque connection est associ&eacute;e son 
propre 'tampon d'entr&eacute;e' dans lequel les r&eacute;sultats de lectures et 
traitements les plus r&eacute;cents sont conserv&eacute;s. Une taille de tampon 
de 512 octets et utilis&eacute;e afin de contenir un message complet, bien qu'il 
en contienne habituellement plusieurs. Le tampon priv&eacute; est trait&eacute; 
apr&egrave;s toute op&eacute;ration de lecture &agrave; la recherche de messages 
valides. Lors du traitement de messages multiples en provenance d'un client, on 
doit prendre soin au cas o&ugrave; un des messages causerait le d&eacute;part du 
client. 
<H2><A name=83>8.3</A> Distribution de message</H2>
Il est courant de trouver des liens r&eacute;seaux satur&eacute;s ou des 
h&ocirc;tes &agrave; qui vous envoyer des donn&eacute;es et qui sont incapables 
d'en faire autant. Bien qu'Unix g&egrave;re typiquement cela &agrave; travers la 
fen&ecirc;tre TCP et ses tampons internes, le serveur a 
g&eacute;n&eacute;ralement de grandes quantit&eacute;s de donn&eacute;es 
&agrave; envoyer (sp&eacute;cialement lorsqu'une nouvelle connection 
serveur/serveur est cr&eacute;e) et les petits tampons fournis dans le noyau ne 
sont pas suffisant &agrave; la queue de sortie. Pour all&eacute;ger ce 
probl&egrave;me, une &quot;queue d'envoi&quot; est utilis&eacute;e comme une 
queue FIFO pour les donn&eacute;es &agrave; envoyer. Une &quot;queue 
d'envoi&quot; typique peut cro&icirc;tre jusqu'&agrave; 200ko sur un gros 
r&eacute;seau IRC, avec des connections r&eacute;seau lentes quand un nouveau 
serveur se connecte. 
<P>Lorsqu'il traite ses connections, un serveur doit d'abord lire et traiter 
toutes les donn&eacute;es entrantes, en m&eacute;morisant les donn&eacute;es qui 
seront &eacute;mises. Quand toutes les entr&eacute;es disponibles sont 
trait&eacute;es, la queue d'envoi est exp&eacute;di&eacute;e. Cela r&eacute;duit 
le nombre d'appels syst&egrave;mes write() et aide TCP &agrave; faire des 
paquets plus gros. 
<H2><A name=84>8.4</A> La vie d'une connection</H2>
Pour d&eacute;tecter quand une connection est morte ou ne r&eacute;pond plus, le 
serveur doit envoyer un PING &agrave; toute les connections dont il n'a pas eu 
de r&eacute;ponse depuis un temps donn&eacute;. 
<P>Si une connection ne r&eacute;pond pas &agrave; temps, elle est ferm&eacute;e 
en utilisant les proc&eacute;dures appropri&eacute;es. Une connection est 
&eacute;galement l&acirc;ch&eacute;e si son sendq grossi au-del&agrave; du 
maximum autoris&eacute;, car il vaut mieux fermer une connection lente que 
d'avoir le processus serveur bloqu&eacute;. 
<H2><A name=85>8.5</A> Etablissement d'une connection serveur &agrave; 
client</H2>
Lors de la connection &agrave; un serveur IRC, on envoie au client le MOTD (s'il 
est pr&eacute;sent) ainsi que le nombre actuel d'utilisateur et de serveurs 
(comme pour la commande LUSER). Le serveur doit &eacute;galement envoyer un 
message non &eacute;quivoque au client, qui stipule son nom, sa version, ainsi 
que tout autre message d'introduction qui lui semble appropri&eacute;. 
<P>Apr&egrave;s cela, le serveur doit envoyer le pseudo du nouvel utilisateur, 
et toute autre information aussi bien fournies par le client (commande USER) que 
celles trouv&eacute;es par le serveur (serveurs DNS et IDENT). Le serveur doit 
envoyer ces informations &agrave; la premi&egrave;re commande NICK suivi de 
USER. 
<H2><A name=86>8.6</A> Etablissement d'une connection serveur/serveur</H2>
Le processus d'&eacute;tablissement d'une connection serveur &agrave; serveur 
est plein de dangers, car il y a de nombreux domaines o&ugrave; un 
probl&egrave;me peut survenir <I>{ - the least of which are race 
conditions.}</I> 
<P>Apr&egrave;s avoir re&ccedil;u une connection suivi d'une paire PASS/SERVER 
qui a &eacute;t&eacute; reconnue valide, le serveur doit r&eacute;pondre avec 
ses propres informations PASS/SERVER pour cette connection, ainsi que toutes les 
informations d'&eacute;tat qu'il connais comme d&eacute;crit ci-dessous. 
<P>Quand le serveur initiant re&ccedil;oit la paire PASS/SERVER, lui aussi 
v&eacute;rifie que le serveur r&eacute;pondant est authentifi&eacute; 
correctement avant d'accepter la connection comme &eacute;tant ce serveur. 
<H3><A name=861>8.6.1</A> Echange des informations d'&eacute;tat des serveurs 
&agrave; la connection</H3>
L'ordre des informations d'&eacute;tat &eacute;chang&eacute;es entre les 
serveurs est essentiel. L'ordre requis est le suivant : 
<UL>
  <LI>tous les autres serveurs connus ; 
  <LI>toutes les informations utilisateurs connues ; 
  <LI>toutes les informations de canaux connues. </LI></UL>

<P>Les informations concernant les serveurs sont envoy&eacute;es avec des 
messages SERVER suppl&eacute;mentaires, les informations utilisateurs avec des 
messages NICK/USER/MODE/JOIN et celles des canaux avec des messages MODE. 
<P>NOTE : Les sujets des canaux ne sont PAS &eacute;chang&eacute;s ici, car la 
commande TOPIC &eacute;crase toute information de sujet 
pr&eacute;c&eacute;dente, si bien que, au mieux, les deux c&ocirc;t&eacute;s de 
la connection &eacute;changeraient les sujets. 
<P>En passant les informations d'&eacute;tat concernant les serveurs en premier, 
toutes les collisions avec des serveurs qui existeraient d&eacute;j&agrave; ont 
lieu avant les collisions de pseudo dues &agrave; un second serveur introduisant 
un pseudonyme particulier. En raison de l'obligation de r&eacute;seau IRC 
&agrave; n'exister que sur un graphe acyclique, il est possible que le 
r&eacute;seau se soit d&eacute;j&agrave; reconnect&eacute; ailleurs, et 
l'endroit o&ugrave; la collision a lieu indique ou le r&eacute;seau doit 
&ecirc;tre divis&eacute;. 
<H2><A name=87>8.7</A> Terminaison des connection serveur/client.</H2>
Lorsqu'une connection client se ferme, un message QUIT est 
g&eacute;n&eacute;r&eacute; de la part du client par le serveur sur lequel le 
client &eacute;tait connect&eacute;. Aucun autre message ne doit &ecirc;tre 
g&eacute;n&eacute;r&eacute; ou utilis&eacute;. 
<H2><A name=88>8.8</A> Terminaison des connections serveur/serveur.</H2>
Si une connection serveur/serveur est ferm&eacute;e, soit par un SQUIT 
g&eacute;n&eacute;r&eacute; &agrave; distance, soit par une cause 'naturelle', 
le reste du r&eacute;seau IRC doit le prendre en compte, et c'est au serveur qui 
d&eacute;tecte la fermeture de faire circuler l'information. Le serveur envoie 
une liste de SQUIT (un par serveur au-del&agrave; de la connection 
coup&eacute;e) et une liste de QUIT (un par client au-del&agrave; de la 
connection coup&eacute;e). 
<H2><A name=89>8.9</A> Suivi des changements de pseudonymes</H2>
Tous les serveurs IRC doivent garder un historique des changements 
r&eacute;cents de pseudonymes. Cela est n&eacute;cessaire pour offrir au serveur 
la possibilit&eacute; de garder le contact quand une commande concerne un 
utilisateur changeant de pseudo. Les commandes qui doivent v&eacute;rifier un 
changement de pseudo sont : 
<UL>
  <LI>KILL (le pseudo se faisant tuer) 
  <LI>MODE (+/- o,v) 
  <LI>KICK (le pseudo se faisant exclure) </LI></UL>
Aucune autre commande ne doit v&eacute;rifier un changement de pseudo. 
<P>Dans les cas ci-dessus, le serveur doit tout d'abord v&eacute;rifier 
l'existence du pseudonyme, puis v&eacute;rifier l'historique pour voir &agrave; 
qui appartient ce pseudo. Cela r&eacute;duit les chances de probl&egrave;mes, 
mais ne les emp&ecirc;che pas compl&egrave;tement, ce qui peu r&eacute;sulter au 
final de l'affectation du mauvais client. Lors du tra&ccedil;age des changements 
de pseudonymes pour une des commandes ci-dessus, il est recommand&eacute; qu'un 
intervalle de temps soit donn&eacute;, et que les entr&eacute;es trop vielles 
soient ignor&eacute;es. 
<P>Pour un historique parfait, un serveur devrait &ecirc;tre capable de garder 
les pseudonymes de tous les clients qui ont d&eacute;cid&eacute; d'un 
changement. La taille est limit&eacute;e par d'autres facteurs (tels que la 
m&eacute;moire, ...) 
<H2><A name=8_10>8.10</A> Contr&ocirc;le d'inondation des clients</H2>
Dans un gros r&eacute;seau de serveurs IRC interconnect&eacute;s, il est assez 
facile, pour un simple client connect&eacute;, d'&eacute;mettre un flux continu 
de messages qui r&eacute;sultent non seulement en l'inondation du r&eacute;seau, 
mais aussi en la d&eacute;gradation de la qualit&eacute; de service fournie aux 
autres clients. Au lieu de demander &agrave; chaque 'victime' de g&eacute;rer sa 
propre protection, la protection contre les inondations est incluse dans le 
serveur et est appliqu&eacute;e &agrave; tous les clients, &agrave; l'exception 
des services. L'algorithme actuel est le suivant : 
<UL>
  <LI>v&eacute;rifier si les 'messages de temps' des clients est 
  inf&eacute;rieur au temps courant (et le mettre &agrave; l'heure courante le 
  temps &eacute;ch&eacute;ant) ; 
  <LI>lire toute donn&eacute;e pr&eacute;sent&eacute;e par le client ; 
  <LI>tant que le compteur est inf&eacute;rieur &agrave; dix secondes par 
  rapport &agrave; l'heure actuelle, traiter tout message actuel et 
  p&eacute;naliser le client de deux secondes par message ; </LI></UL>
Ce qui, en essence, signifie qu'un client ne peut envoyer plus d'un message 
toutes les deux secondes sans &ecirc;tre affect&eacute;. 
<H2><A name=8_11>8.11</A> Boucles non bloquantes</H2>
Dans un environnement temps r&eacute;el, il est essentiel qu'un processus 
serveur attende aussi peu que possible, de mani&egrave;re &agrave; ce que tous 
les clients soient servis justement. Evidement, cela n&eacute;cessite des ES non 
bloquantes sur toutes les op&eacute;rations de lecture/&eacute;criture du 
r&eacute;seau. Pour les connections de serveur normales, ce n'est pas 
compliqu&eacute;, mais il y a des op&eacute;rations g&eacute;r&eacute;es qui 
peuvent causer un blocage du serveur (telles que les lectures disque). Quand 
c'est possible, de telles activit&eacute;s doivent &ecirc;tre 
ex&eacute;cut&eacute;e avec un d&eacute;lai d'attente maximal court. 
<H3><A name=8_11_1>8.11.1</A> Recherche du nom d'h&ocirc;te (DNS)</H3>
L'utilisation des librairies de r&eacute;solution standards de Berkeley et 
autres entra&icirc;ne de gros d&eacute;lais, dans les cas o&ugrave; les 
r&eacute;ponses n'arrivent pas. Afin d'&eacute;viter cela, un jeu de routines 
DNS ind&eacute;pendantes ont &eacute;t&eacute; &eacute;crites, o&ugrave; les 
op&eacute;rations DNS ont &eacute;t&eacute; &eacute;crites avec des E/S non 
bloquantes et test&eacute;es depuis la boucle d'E/S principale du serveur. 
<H3><A name=8_11_2>8.11.2</A> Recherche du nom d'utilisateur (IDENT)</H3>
Bien qu'il y ait de nombreuses libraires IDENT &agrave; utiliser et inclure dans 
d'autres programmes, elles posent des probl&egrave;mes puisqu'elles 
op&egrave;rent de fa&ccedil;on synchrone, et r&eacute;sultent en de nombreuses 
attentes. Encore une fois, la solution a &eacute;t&eacute; d'&eacute;crire un 
jeu de routines qui coop&egrave;rent avec le reste du serveur, et utilisent des 
E/S non bloquantes. 
<H2><A name=8_12>8.12</A> Fichier de configuration</H2>
Afin de fournir une fa&ccedil;on flexible de configurer et de lancer le serveur, 
il est recommand&eacute; qu'un fichier de configuration soit utilis&eacute;, 
qu'il contienne les instructions du serveur suivantes : 
<UL>
  <LI>de quels h&ocirc;tes accepter une connection en tant que client; 
  <LI>de quels h&ocirc;tes accepter une connection en tant que serveur; 
  <LI>&agrave; quels h&ocirc;tes se connecter (aussi bien activement que 
  passivement) ; 
  <LI>informations sur l'emplacement du serveur (universit&eacute;, 
  ville/&eacute;tat, entreprise par exemple) ; 
  <LI>quels sont les responsables du serveur, avec une adresse email o&ugrave; 
  ils peuvent &ecirc;tre contact&eacute;s ; 
  <LI>noms d'h&ocirc;tes et mots de passe pour les clients qui souhaitent 
  obtenir l'acc&egrave;s restreint aux commandes d'op&eacute;rateur. </LI></UL>
Lors de la sp&eacute;cification des noms d'h&ocirc;tes, les noms de domaines et 
la notation 'point' (127.0.0.1) doivent &ecirc;tre tous les deux 
g&eacute;r&eacute;es. Il doit &ecirc;tre possible de pr&eacute;ciser un mot de 
passe &agrave; utiliser/accepter pour toutes les connections entrantes et 
sortantes (bien que les connections sortantes soient toutes &agrave; destination 
de serveurs). 
<P>La liste ci-dessus est le minimum obligatoire pour tout serveur qui souhaite 
se connecter &agrave; un autre serveur. Parmi les autres &eacute;l&eacute;ments 
utiles, on trouve : 
<UL>
  <LI>sp&eacute;cification de quels serveurs un serveur peut introduire ; 
  <LI>jusqu'&agrave; quelle longueur une branche de serveur peut aller ; 
  <LI>heures durant lesquelles un client peut se connecter </LI></UL>

<H3><A name=8_12_1>8.12.1</A> Autorisation des connections de clients</H3>
Un serveur doit utiliser une sorte de 'liste de contr&ocirc;le d'acc&egrave;s' 
(soit dans le fichier de configuration ou ailleurs) qu'il lit au 
d&eacute;marrage et utilise pour d&eacute;cider quels h&ocirc;tes les clients 
peuvent utiliser pour se connecter. 
<P>'Accepter' et 'interdire' doivent tout les deux &ecirc;tre 
impl&eacute;ment&eacute;s pour fournir le niveau de flexibilit&eacute; requis 
par le contr&ocirc;le d'acc&egrave;s des h&ocirc;tes. 
<H3><A name=8_12_2>8.12.2</A> Op&eacute;rateurs</H3>
En raison des pouvoirs qui leur sont accord&eacute;s , le don des 
privil&egrave;ges d'op&eacute;rateurs &agrave; une personne turbulente peut 
avoir des cons&eacute;quences d&eacute;sastreuses sur le bien-&ecirc;tre du 
r&eacute;seau IRC en g&eacute;n&eacute;ral. C'est pourquoi l'acquisition de ces 
pouvoirs ne doit pas &ecirc;tre facile. La configuration actuelle 
n&eacute;cessite deux mots de passes, bien que l'un d'entre eux soit 
g&eacute;n&eacute;ralement facile &agrave; trouver. L'enregistrement des mots de 
passe d'op&eacute;rateur dans le fichier de configuration est 
pr&eacute;f&eacute;rable &agrave; leur codage en dur, et ils doivent &ecirc;tre 
sauvegard&eacute; dans un format cod&eacute; (par exemple en utilisant crypt(3) 
d'Unix) afin de rendre les vols plus difficiles. 
<H3><A name=8_12_3>8.12.3</A> Autorisation des connections de serveurs</H3>
L'interconnexion de serveurs n'est pas une chose triviale : une mauvaise 
connection peut avoir un gros impact sur l'utilit&eacute; d'IRC. C'est pourquoi 
chaque serveur doit avoir une liste des serveurs sur lesquels il peut se 
connecter, et de ceux qui peuvent se connecter &agrave; lui. En aucune 
mani&egrave;re un serveur ne doit accepter arbitrairement une connection 
d'h&ocirc;te en tant en serveur. En plus de la liste des serveurs qui peuvent et 
qui ne peuvent pas se connecter, le fichier de configuration doit aussi contenir 
le mot de passe et les autres caract&eacute;ristiques de ce lien. 
<H3><A name=8_12_4>8.12.4</A> Admin</H3>
Pour fournir des r&eacute;ponses valides et pr&eacute;cises &agrave; la commande 
ADMIN (voir section <A 
href="irc_rfc_fr1459.htm#437">4.3.7</A>), 
le serveur doit trouver tous les d&eacute;tails appropri&eacute;s dans le 
fichier de configuration. 
<H2><A name=8_13>8.13</A> Appartenance &agrave; un canal.</H2>
Le serveur actuel autorise tout utilisateur enregistr&eacute; localement 
&agrave; acc&eacute;der jusqu'&agrave; 10 canaux diff&eacute;rents. Il n'y a pas 
de limites impos&eacute;es aux utilisateurs non-locaux, si bien que le serveur 
reste (raisonnablement) coh&eacute;rent avec les autres serveurs pour ce qui est 
de l'appartenance &agrave; un canal. 
<H1><A name=9>9.</A> Probl&egrave;mes actuels</H1>
Il y a nombre de probl&egrave;mes reconnus avec ce protocole, chacun d'entre eux 
esp&eacute;rant &ecirc;tre r&eacute;solu dans un futur proche lors de sa 
r&eacute;&eacute;criture. Actuellement, le travail est en cours pour trouver des 
solutions convenables &agrave; ces probl&egrave;mes. 
<H2><A name=91>9.1</A> Localisation</H2>
Il est largement reconnu que ce protocole ne g&egrave;re pas correctement les 
localisations lorsqu'il est utilis&eacute; dans une grande ar&egrave;ne. Le 
probl&egrave;me principal vient de la n&eacute;cessit&eacute; qu'ont tous les 
serveurs de conna&icirc;tre tous les autres serveurs et utilisateurs, et que 
leurs informations soient mises &agrave; jour d&egrave;s que possible. Il est 
aussi n&eacute;cessaire de garder un faible nombre de serveurs, de fa&ccedil;on 
&agrave; ce que le chemin entre deux points reste aussi faible que possible, et 
que l'arbre de distribution contienne des branches aussi grosses que possible. 
<H2><A name=92>9.2</A> Identifiants</H2>
Le protocole IRC courant a trois types d'identifiants : le pseudonyme, le nom de 
canal, et le nom de serveur. Chacun de ses trois types a son propre domaine, et 
aucun doublon n'est autoris&eacute; dans ce domaine. Actuellement, il est 
possible pour un utilisateur de prendre l'identifiant pour n'importe laquelle 
des trois, ce qui r&eacute;sulte en une collision. Il est largement reconnu que 
cela n&eacute;cessite des modifications, et le plan actuel pr&eacute;voit des 
noms uniques pour les canaux et les pseudo n'entrent pas en collision, ainsi 
qu'une solution autorisant un arbre cyclique. 
<H3><A name=921>9.2.1</A> Pseudonymes</H3>
L'id&eacute;e de pseudonymes sur IRC est tr&egrave;s pratique pour les 
utilisateurs qui parlent hors des canaux, mais il y a un nombre fini des 
pseudonymes, et il n'est pas rare de voir plusieurs personne vouloir utiliser le 
m&ecirc;me pseudo. Si un pseudonyme est choisi par deux personnes qui utilisent 
ce protocole, soit l'une des deux ne r&eacute;ussi pas &agrave; l'obtenir, soit 
toutes les deux sont d&eacute;connect&eacute;es par l'utilisation de KILL 
(4.6.1). 
<H3><A name=922>9.2.2</A> Canaux</H3>
La couche de canaux actuelle n&eacute;cessite que tous les serveurs connaissent 
tous les canaux, leurs membres, et leurs propri&eacute;t&eacute;s. En plus ne 
pas bien g&eacute;rer la localisation la question de la confidentialit&eacute; 
est aussi concern&eacute;e. La collision de canaux est g&eacute;r&eacute;e de 
fa&ccedil;on inclusive (les deux personnes qui cr&eacute;ent le canal sont 
consid&eacute;r&eacute;s comme en &eacute;tant membre) plut&ocirc;t que de 
fa&ccedil;on exclusive telle que celle utilis&eacute;e pour r&eacute;soudre les 
collisions de pseudonymes. 
<H3><A name=923>9.2.3</A> Serveurs</H3>
Bien que le nombre de serveurs soit habituellement petit compar&eacute; au 
nombre d'utilisateurs et de canaux, ils doivent aussi &ecirc;tre connus 
globalement, soit chacun s&eacute;par&eacute;ment, soit cach&eacute; 
derri&egrave;re un masque. 
<H2><A name=93>9.3</A> Algorithmes</H2>
A certains endroits du code du serveur, il n'a pas &eacute;t&eacute; possible 
d'&eacute;viter des algorithmes N^2, comme par exemple dans la 
v&eacute;rification de la liste des canaux d'un ensemble de clients. 
<P>Dans les versions actuelles du serveur, il n'y a pas v&eacute;rification de 
base de donn&eacute;es, chaque serveur assumant qu'un serveur voisin est 
correct. Cela ouvre la porte &agrave; de gros probl&egrave;mes si un serveur qui 
se connecte est bogu&eacute; ou essaie d'introduire des contradictions dans le 
r&eacute;seau existant. 
<P>Actuellement, en raison du manque d'&eacute;tiquettes internes et globales 
uniques, il existe une multitude de conditions pouvant causer une 
d&eacute;synchronisation. Ces conditions r&eacute;sultent 
g&eacute;n&eacute;ralement du temps pris par un message pour traverser le 
r&eacute;seau IRC. Mais, m&ecirc;me en changeant pour des &eacute;tiquettes 
uniques, il y a des probl&egrave;mes de synchronisation avec les commandes 
li&eacute;es aux canaux. 
<H1><A name=_10>10.</A> Support actuel et disponibilit&eacute;</H1>

<UL>
  <LI>Mailing lists pour les discussions li&eacute;es &agrave; l'IRC : 
  <UL>
    <LI>Protocole futur : ircd-three-request@eff.org 
    <LI>Discussion g&eacute;n&eacute;rale: operlist-request@eff.org </LI></UL>

  <LI>Impl&eacute;mentations logicielles 
  <UL>
    <LI>cs.bu.edu:/irc 
    <LI>nic.funet.fi:/pub/irc 
    <LI>coombs.anu.edu.au:/pub/irc<BR></LI></UL>

  <LI>Newsgroup: alt.irc<BR></LI></UL>

<H1><A name=_11>11.</A> Consid&eacute;rations de s&eacute;curit&eacute;</H1>
La s&eacute;curit&eacute; est trait&eacute;e dans les sections <A 
href="irc_rfc_fr1459.htm#41">4.1</A>, 
<A 
href="irc_rfc_fr1459.htm#411">4.1.1</A>, 
<A 
href="irc_rfc_fr1459.htm#413">4.1.3</A>, 
<A 
href="irc_rfc_fr1459.htm#55">5.5</A>, 
et <A 
href="irc_rfc_fr1459.htm#7">7</A>.<BR>
<H1><A name=_12>12.</A> Adresses des auteurs</H1>

<UL>Jarkko Oikarinen <BR>Tuirantie 17 as 9 <BR>90500 OULU <BR>FINLAND 
  <BR>Email: <A 
  href="mailto:jto@tolsun.oulu.fi">mailtojto@tolsun.oulu.fi</A> 
  
  <P>Darren Reed <BR>4 Pateman Street <BR>Watsonia, Victoria 3087 <BR>Australia 
  <BR>Email: <A 
  href="mailto:avalon@coombs.anu.edu.au">mailto:avalon@coombs.anu.edu.au</A> 
</P></UL>
Traduit de l'anglais par JM &quot;Nirgal&quot; Vourg&egrave;re <!--- increment the counter><IMG height=1 src="irc_rfc_fr14591459 files/nirgal.gif" 
width=1> </BODY></HTML>
