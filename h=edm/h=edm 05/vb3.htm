<html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>VB3</title></head><body bgcolor=#000000 text=#FFFFFF link=#FFFF00 vlink="#C0C0C0" alink="#C0FFC0"><p align=center><BIG><b><u>Visual Basic 3ème partie</u></b></BIG>
<p>Voici la suite de l'apprentissage Visual Basic. Juste un petit rappel : les commentaires dans le code source sont précédés d'un &quot; ' &quot;.<br>Bonne lecture......<p><b><i>Gestion des chaînes de caractères:</i></b><p>Vous savez maintenant déclarez
une variable en chaîne de caractère :<br>Dim variable as string<br>SI vous voulez définir un nombre d'espace pour les caractères il suffit d'écrire :<br>Dim variable as string*nb de caractères<br>Si le nombre de caractères est inférieur au nb indiqué le
reste est rempli d'espace et si il est plus grand le surplus n'est pas pris en compte.<br>Pour compter le nombre de caractères ds une chaîne il faut utiliser l'instruction len:<br>Len ( &quot; Phrase &quot; )<br>Pour comparer les différences de 2 chaînes
de caractères on doit utiliser l'instruction Strcomp<br>Phrase 1 = &quot; Pipi &quot;<br>Phrase 2 = &quot; Pipi &quot;<br>Phrase 3 = &quot; Papa &quot;<br>Phrase 4 = &quot; Caca &quot;<br>Strcomp ( phrase 1,phrase 2 ) 'renvoie la valeur 0<br>Strcomp (
phrase 1,phrase 3 ) 'renvoie la valeur 2<br>Strcomp ( phrase 1,phrase 4 ) 'renvoie la valeur 4<br>Strcomp ( phrase 3,phrase 4 ) 'renvoie la valeur 2<br>Pour rechercher une chaîne de caractère il suffit de se servir de la commande &quot;instr&quot;<br>
instr ( chaine de depart, chaine contenant le mot a rechercher )<br>Si le mot existe il vous donnera la position du caractère sinon il renverra une valeur per défaut.Cette fonction est reès utile.<br>Le reste des fonction en bref :<br>right
(&quot;chaine&quot;,nb de lettre a compter) : affiche le texte de droite<br>left (&quot;chaine&quot;, nb de lettre a compter): affiche le texte de gauche<br>mid (&quot;chaine de caractere&quot;,position ou se placer, nb de caracteres a extraire) :
extraire une nombre défini de caractères à partir d'une position définie<br>Pour résumer ces fonctions de base je vous propose un programme afin de trouver le nombre d'espace ds une phrase :<br>Dim Phrase, Caractère As String<br>Dim Compteur, Longueur, i
As Integer<br>Phrase = InputBox(&quot;Tapez votre phrase&quot;)<br>Longueur = Len (Phrase)<br>For i = 1 To Longueur<br>Caractère = Mid(Phrase, i, 1)<br>If Caractère = &quot; &quot; Then<br>Compteur = Compteur + 1<br>End if<br>Next i<br>MsgBox(&quot;Cette
phrase contient &quot; &amp; Compteur &amp; &quot; espaces.&quot;)<br>Voici un index des fonctions qui sont moins utilisées ou bien plus compliquée :<br>LTrim$, RTrim$, Trim$ : Supprime les espaces d'une chaîne de carctère à gauche, à droite ou
partout.<br>Lcase et Ucase : Ca sert à convertir le texte en majuscule ( Ucase ) ou en minuscule ( Lcase )<br>Val : Conventit une chaîne de caractère composée de nombres en valeur numérique<br>Str$ : Convertit une valeur numérique en chaîne de
caractère<br>&nbsp;Voilà en gros pour les chaînes de caractères.<p><b><i>Les opérateurs et fonctions mathématiques</i></b><br>&nbsp;<br>Alors la il n'y a aucune surprise : les termes se rapprochent de la réalité.<br>Voici un tableau des fonctions
mathématiques :<br>&nbsp;<table border=1 width=62% cols="2"><tr><td>Abs</td><td>Valeur asolue</td></tr><tr><td>Atn</td><td>Arc tangente</td></tr><tr><td>Cos</td><td>Cosinus</td></tr><tr><td>Exp</td><td>Exponentielle</td></tr><tr><td>Fix</td><td>Partie
entière</td></tr><tr><td>Int</td><td>Partie entière</td></tr><tr><td>Log</td><td>Logarithme naturel</td></tr><tr><td>Rnd</td><td>Génération d'un nombre aléatoire</td></tr><tr><td>Sgn</td><td>Signe : si il est &gt;0 il retourne 1; = 0 il retourne 0: &lt;
0 il retourne -1</td></tr><tr><td>Sin</td><td>Sinus</td></tr><tr><td>Sqr</td><td>Racine carrée</td></tr><tr><td>Tan</td><td>Tangente</td></tr></table><p>&nbsp;Quelques exemples :<br>valeur1=Sqr ( 4 ) ' valeur est donc égale à 2<br>Valeur2=Rnd*100 'valeur
2 est donc &lt;100 &gt;0<p>Et voici le tableau des opérateurs :<br>&nbsp;<table border=1 width=64% cols="3"><tr><td>Priorité</td><td>Opérateur</td><td>Description</td></tr><tr><td>1</td><td>^</td><td>Elévation à une puissance</td></tr><tr><td>2</td><td>
-</td><td>Soustraction</td></tr><tr><td>3</td><td>*</td><td>Multiplication</td></tr><tr><td>4</td><td>\</td><td>Division entière</td></tr><tr><td>5</td><td>Mod</td><td>Reste de la division</td></tr><tr><td>6</td><td>+</td><td>Addition</td></tr><tr><td>
7</td><td>&amp;</td><td>Intégration de valeur avec le texte</td></tr></table><p>Celui des comparateurs logiques :<br>&nbsp;<table border=1 width=47% cols="2"><tr><td>Comparateurs</td><td>Description</td></tr><tr><td>=</td><td>égalité</td></tr><tr><td>
&lt;</td><td>inférieur à</td></tr><tr><td>&gt;</td><td>supérieur à</td></tr><tr><td>&lt;=</td><td>inférieur ou égale à</td></tr><tr><td>&gt;=</td><td>supérieur ou égale à</td></tr><tr><td>&lt;&gt;</td><td>différent de&nbsp;</td></tr><tr><td>Like</td><td>
comparaison de chaînes de caractère</td></tr><tr><td>Is</td><td>comparaison de variables d'objet</td></tr></table><p>Et enfin celui des comparateurs logiques :<br>&nbsp;<table border=1 width=39% cols="3"><tr><td>Priorité</td><td>Opérateur</td><td>
Description</td></tr><tr><td>1</td><td>Not</td><td>négation logique</td></tr><tr><td>2</td><td>And</td><td>Et logique</td></tr><tr><td>3</td><td>Or</td><td>OU logique</td></tr><tr><td>4</td><td>XOr</td><td>OU exclusif</td></tr><tr><td>5</td><td>Eqv</td>
<td>équivalence logique</td></tr><tr><td>6</td><td>Imp</td><td>implication</td></tr></table><p>&nbsp;<br>Ouah bon bah voila pour las fonctions mathématiques et c'est déja po mal !!!<p><b><i>Les instructions GOTO et GOSUB</i></b><p>Bon pour finir cet
article je vais vous rappelez le fonctionnement des deux bonnes commandes Goto et Gosub. On les utilisaient déjà dans le Basic mais elles ne sont pas indispensables en VB.<br>Pour goto :<br>Cette commande vous renvoie à la fonction définie après suivant
la syntaxe suivante :<br><i> Conditions ou lancement </i><br>goto fonction<br>fonction:<br><i> ce que vous voulez faire </i><br>Exemple :<br>Question=inputbox(&quot;Est tu beau ?&quot;)<br>If question = &quot;Oui&quot; then<br>goto Fonction1<br>Else<br>
Goto fonction2<br>End if<br>Fonction1 :<br>msgbox&quot;Ah bon &gt;?! &quot;<br>Fonction2:<br>msgbox&quot;mouarf !!!!&quot;<br>On utilise Goto souvent que pour un renvoie d'erreur :<br>On error goto ...<br>Si vous ne voulez pas faire intervenir goto :<br>
On error resume next<p>Pour gosub :<p>En fait c'est comme pour Goto sauf qu'on met return à la fin<br>. ....<br>Gosub x<br>x :<br>....<br>Return<p>J'en parle paske c'est un mythe mais bon c'est pas bien utile !<br>Je croyais finir la-dessus mais je viens
de me rendre compte que j'ai oublié de parler des boucle avec incrementation ! Alala PIgnon t'assure pas !!!!<p><b><i>les boucles avec incrementation</i></b><br>Bon y a For next mais j'en ai déja parlé alors je m'attarde pas dessus.<br>Je voous rappelle
juste que c'est pour répéter des actions x fois, x étant une intervalle :<br>For x% = 1 to 4<br>inputbox &quot; Bah rentre la valeur&quot; &amp; x%<br>next x%<br>Facile, non ????<br>Ensuite y a While wend<br>ça pernet d'éxécuter une opération quand la
condition est vraie :<br>A%=inputbox(&quot;Entre un nombre&quot;)<br>While A% = 200<br>Msgbox &quot; trouve&quot;<br>Wend<br>Y a aussi Do Loop mais celle la vous la connaissez deja grace au superbe article de Bigood !<br>Bon je m'y recolle. Elle sert à
forcer la répétition d'une opération.<br>Do<br>.....<br>Exit do<br>Loop while ....<p>&nbsp;On l'imbrique souvent avec while.<br>Bon exemple :<br>Do<br>X = InputBox(&quot;Un nombre&quot;)<br>Loop While X &lt;&gt; 100<p align=left>Bon je décris que ça
comme boucles paske c'est les seules qui servent et aussi paske je suis fatigué d'écrire des bigs articles comme ça ! ;c)<p align=right><font color=#FFFF00 size=6 face="Comic Sans MS">PIG</font><font color=#00CC00 size=6 face="Comic Sans MS">
NON&nbsp;</font><font color=#00CC00>&nbsp;</font></body></html>
