<html>
<body bgcolor="#000000" text="#FFFFFF">

<p align="center"><font color="#FF0000" size="7"><b>FAIRE DE
LA GUI EN ASM32WIN</b></font></p>

<hr>

<p><font color="#FF0000"><b>INTRODUCTION</b></font></p>

<p>j'ai mis un exemple (avec source) pour illustrer mon article dans le repertoire &quot;stupide&quot;</p>

<p>alors voila mon article sur la GUI<br>
mais d'abord qu'est ce que la gui ? c la Graphic User Interface,
c a dire : l'interface graphique !<br>
alors ça sert a faire des boutons ronds des fenetre avec une
gueule cass&eacute;, des texte &agrave; la walegu&eacute;ne, etc ...<br>
c bien hein ! :) hmmm vous avez envie de savoir<br>
et bin je vais faire durer le suspence .......<br>
non non encore un peu plus ........</p>

<p><font color="#FF0000"><b>FAIRE UNE FENETRE NON NORMALISER</b></font></p>

<p>faire un programme c bien, faire un bo programme c mieux ! :)</p>

<p>alors au lieu de faire un programme pas bo avec une fenetre
carr&eacute; (c pas bo hein ! :))<br>
on va plutot faire un programme tr&eacute;s bo avec une fenetre pas
carr&eacute;(c bo hein :))</p>

<p>alors comment qu'on fait ?</p>

<blockquote>
    <p><font color="#80FFFF">NUM_PTS equ 27<br>
    pt POINT &lt;25, 95&gt;, &lt;15, 50&gt;, &lt;10, 35&gt;,
    &lt;15, 25&gt;, &lt;25, 15&gt;, &lt;90, 5&gt;, &lt;100,
    10&gt;, &lt;110, 5&gt;, &lt;175, 15&gt;, &lt;185, 25&gt;,
    &lt;190, 35&gt;, &lt;185, 50&gt;, &lt;175, 95&gt;, &lt;175,
    110&gt;, &lt;185, 150&gt;, &lt;190, 165&gt;, &lt;185,
    175&gt;, &lt;175, 185&gt;, &lt;110, 195&gt;, &lt;100,
    190&gt;, &lt;90, 195&gt;, &lt;25, 185&gt;, &lt;15, 175&gt;,
    &lt;10, 165&gt;, &lt;15, 150&gt;, &lt;25, 105&gt;, &lt;25,
    95&gt;</font></p>
    <p><font color="#80FFFF">invoke CreatePolygonRgn, ADDR pt,
    NUM_PTS, WINDING<br>
    invoke SetWindowRgn, hWin, eax, FALSE</font></p>
</blockquote>

<p>boudiou quoi que c que ça ?</p>

<p>deja d&eacute;sol&eacute; pour les TASMalien :) mais moi je fait tous sous
masm32, c plus facile :) et je suis un grand f&eacute;n&eacute;ant :)</p>

<p><font color="#00FF00"><b>NUM_PTS</b></font> c une
constante elle designe le nbre de point l&agrave; y'en as 27 (je le dit
on sait jamais y'en as qui sont long as comprendre)<br>
<font color="#00FF00"><b>pt</b></font> c'est les point
&lt;x,y&gt;</p>

<p><font color="#00FF00"><b>CreatePolygonRgn</b></font>
c'est :</p>

<p><font color="#FFFF80">The CreatePolygonRgn function creates a
polygonal region. </font></p>

<p><font color="#FFFF80"><b>HRGN </b>CreatePolygonRgn(<br>
<b>CONST POINT</b> *lppt, // address of array of points
<br>
<b>int </b>cPoints, // number of points in array <br>
<b>int </b>fnPolyFillMode // polygon-filling mode <br>
);</font></p>

<p><font color="#FFFF80" size="4"><b>Parameters</b></font><font
color="#FFFF80"><br>
<b>lppt</b><br>
Points to an array of POINT structures that define the vertices
of the polygon. The polygon is presumed closed. Each vertex can
be specified only once.<br>
<b>cPoints</b><br>
Specifies the number of points in the array. <br>
<b>fnPolyFillMode</b><br>
Specifies the fill mode used to determine which pixels are in the
region. This parameter can be one of the following values: <br>
<b>Value Meaning<br>
</b>ALTERNATE Selects alternate mode (fills area between
odd-numbered and even-numbered polygon sides on each scan line).<br>
WINDING Selects winding mode (fills any region with a nonzero
winding value).<br>
For more information about these modes, see the SetPolyFillMode
function. <br>
<br>
<b>Return Value</b><br>
If the function succeeds, the return value is the handle of the
region.<br>
If the function fails, the return value is NULL. </font></p>

<p>source win32.hlp (y'as des anglophobes ici ? :))
et puis vous avez pas d'excuse, je suis nul anglais et je traduit
ça direct en le lisant ! c que des mots transparents ! (par
exemple winding ça veut dire venter (expression : oh, il vente
fort aujourd'hui))</p>

<p><font color="#00FF00"><b>SetWindowRgn</b></font>
c'est :</p>

<p><font color="#FFFF80">The SetWindowRgn function
sets the window region of a window. The window region determines
the area within the window where the operating system permits
drawing. The operating system does not display any portion of a
window that lies outside of the window region </font></p>

<p><font color="#FFFF80"><b>int</b>
SetWindowRgn(<br>
<b>HWND</b> hWnd, // handle to window whose window
region is to be set<br>
<b>HRGN </b>hRgn, // handle to region <br>
<b>BOOL </b>bRedraw // window redraw flag <br>
); </font></p>

<p><font color="#FFFF80" size="4"><b>Parameters<br>
</b></font><font color="#FFFF80"><b>hWnd<br>
</b>Handle to the window whose window region is to be set.<br>
<b>hRgn<br>
</b>Handle to a region. The function sets the window region
of the window to this region. <br>
If hRgn is NULL, the function sets the window region to NULL. <br>
<b>bRedraw<br>
</b>Boolean value that specifies whether the operating
system redraws the window after setting the window region. If
bRedraw is TRUE, the operating system does so; otherwise, it does
not. <br>
Typically, you set bRedraw to TRUE if the window is visible. </font></p>

<p><font color="#FFFF80" size="4"><b>Return
Value</b></font><font color="#FFFF80"><br>
If the function succeeds, the return value is non-zero.<br>
If the function fails, the return value is zero. </font></p>

<p><font color="#FFFF80" size="4"><b>Comments<br>
</b></font><font color="#FFFF80">If the bRedraw parameter is
TRUE, the system sends the WM_WINDOWPOSCHANGING and
WM_WINDOWPOSCHANGED messages to the window. <br>
The coordinates of a window's window region are relative to the
upper-left corner of the window, not the client area of the
window. <br>
After a successful call to SetWindowRgn, the operating system
owns the region specified by the region handle hRgn. The
operating system does not make a copy of the region. Thus, you
should not make any further function calls with this region
handle. In particular, do not close this region handle. </font></p>

<p><font color="#FFFFFF">ah c bo l'anglais ! :)<br>
bon maintenant on est HEUREUX on as tout les truc qu'il nous faut</font></p>

<p><font color="#FFFFFF">je place ou les fonction
que tu m'as donn&eacute; ?<br>
faut mettre :</font></p>

<blockquote>
    <p><font color="#80FFFF">NUM_PTS equ 27<br>
    pt POINT &lt;25, 95&gt;, &lt;15, 50&gt;, &lt;10, 35&gt;,
    &lt;15, 25&gt;, &lt;25, 15&gt;, &lt;90, 5&gt;, &lt;100,
    10&gt;, &lt;110, 5&gt;, &lt;175, 15&gt;, &lt;185, 25&gt;,
    &lt;190, 35&gt;, &lt;185, 50&gt;, &lt;175, 95&gt;, &lt;175,
    110&gt;, &lt;185, 150&gt;, &lt;190, 165&gt;, &lt;185,
    175&gt;, &lt;175, 185&gt;, &lt;110, 195&gt;, &lt;100,
    190&gt;, &lt;90, 195&gt;, &lt;25, 185&gt;, &lt;15, 175&gt;,
    &lt;10, 165&gt;, &lt;15, 150&gt;, &lt;25, 105&gt;, &lt;25,
    95&gt;</font></p>
</blockquote>

<p>au debut dans .date et faut mettre : </p>

<blockquote>
    <p><font color="#80FFFF">invoke
    CreatePolygonRgn, ADDR pt, NUM_PTS, WINDING<br>
    invoke SetWindowRgn, hWin, eax, FALSE</font></p>
</blockquote>

<p>faut le mettre dans un endroit ou il passera au
debut, exemple dans : WM_CREATE</p>

<p>bon c OK ? let's go for la suite !</p>

<p><font color="#FF0000"><b>METTRE UNE ZOLI
IMAGE DANS LE FOND</b></font></p>

<p>bon notre fenetre elle est encore pas belle :( je
veut une meuf a poil dans le fond de la fenetre ! (ah sacr&eacute; toi
!) et bin d'abord met ton image en bmp NON compress&eacute;, vi je sais
c enorme ça fait plein de kilooctet bon now tu met dans : (on va
dire que ton image s'appelle fond.bmp)</p>

<p>le fichier .rc</p>

<blockquote>
    <p><font color="#80FFFF">FOND BITMAP
    &quot;fond.bmp&quot;</font></p>
</blockquote>

<p>et dans votre programme, dans WM_CREATE par
exemple :</p>

<blockquote>
    <p><font color="#80FFFF">invoke
    ImageList_Create,300,200,ILC_COLOR32,1,1<br>
    mov hImageList, eax<br>
    invoke LoadBitmap,hInstance,offset MainBmp<br>
    push eax<br>
    invoke ImageList_Add,hImageList,eax,NULL<br>
    pop eax<br>
    invoke DeleteObject, eax</font></p>
</blockquote>

<p><font color="#FFFFFF">et dans WM_PAINT faut
mettre :</font></p>

<blockquote>
    <p><font color="#80FFFF">invoke
    BeginPaint,hWin,ADDR Ps<br>
    mov hDC, eax<br>
    invoke ImageList_Draw,hImageList,0,hDC,0,0,1h<br>
    invoke EndPaint,hWin,ADDR Ps</font></p>
</blockquote>

<p>et dans les variable il faut rajouter :</p>

<blockquote>
    <p><font color="#80FFFF">MainBmp db
    &quot;fond&quot;,0<br>
    hImageList dd 0</font></p>
</blockquote>

<p>alors heureux ?</p>

<p align="center"><font color="#FF0000"><b>MAINTENANT VOUS
VOULEZ DES BOUTONS COOL !</b></font></p>

<p>c'est bien beau de faire une belle fenetre avec un beau fond
mais si c'est pour avoir les boutons de microsoft par dessus ....<br>
donc voila : alors j'ai pas envie de vous mettre un listing de 10
km de long alors j'ai mis une source ! YeEpEe ! :)<br>
le principe est simple, quand on appuie sur le bouton de la
souris, le programme envoi un msg WM_LBUTTONDOWN au programme et
dans <font color="#FFFF80">eax</font> il met les coordonn&eacute;s de
la souris et pour les recuperer on fait :</p>

<blockquote>
    <p><font color="#80FFFF">mov eax,lParam<br>
    and eax,0ffffh<br>
    mov hitpoint.x,eax<br>
    mov eax,lParam<br>
    shr eax,16<br>
    mov hitpoint.y,eax</font></p>
</blockquote>

<p>alors voila maintenant on va voir si on as click&eacute; a
l'interieur d'une zone qui sera notre bouton :</p>

<blockquote>
    <p><font color="#80FFFF">.if hitpoint.x &gt; 100 &amp;&amp;
    hitpoint.x &lt; 200 &amp;&amp; hitpoint.y &gt; 100 &amp;&amp;
    hitpoint.y &lt; 120 <br>
    mov but1,TRUE<br>
    invoke InvalidateRect,hWnd,NULL,FALSE<br>
    .end if</font></p>
</blockquote>

<p>invalidate rectangle sert a faire repaindre la fenetre mais
juste l&agrave; ou il faut le faire.<br>
but1 est une variable boole&eacute;ne qui va nous servir a savoir si le
bouton est enfonc&eacute;<br>
la limite de la zone est a l'horizontal entre 100 et 200 et a
l'horizontal ente 100 et 120</p>

<p>voila c tout pour WM_LBOUTTONDOWN maintenant on va voir
WM_LBUTTONUP, comme vous vous en doutez surement ce msg est
envoy&eacute; quand le bouton gauche de la souris et relach&eacute; (etonnant
! :p ) dans <font color="#FFFF80">eax</font> est egalement
stock&eacute; la position de la souris</p>

<blockquote>
    <p><font color="#80FFFF">.if hitpoint.x &gt; 100 &amp;&amp;
    hitpoint.x &lt; 200 &amp;&amp; hitpoint.y &gt; 100 &amp;&amp;
    hitpoint.y &lt; 120 &amp;&amp; but1<br>
    ;operation as effectu&eacute;<br>
    .end if</font></p>
    <p><font color="#80FFFF">.if but1<br>
    mov but1, FALSE<br>
    invoke InvalidateRect,hWnd,NULL,FALSE<br>
    .end if</font></p>
</blockquote>

<p><font color="#FFFFFF">bon maintenant la partie la plus
importante dans notre programme : WM_PAINT</font></p>

<blockquote>
    <p><font color="#80FFFF">invoke BeginPaint, hWin, ADDR Pnt<br>
    mov hDC, eax<br>
    invoke ImageList_Draw,hImageList,0,hDC,0,0,0</font></p>
    <p><font color="#80FFFF">.if but1<br>
    invoke ImageList_Draw,hImageBut1,0,hDC,100,100,0<br>
    .endif</font></p>
    <p><font color="#80FFFF">invoke EndPaint, hDC, ADDR Pnt</font></p>
</blockquote>

<p><font color="#FFFFFF">hImageList est l'image de fond qui
contient le bouton non enfonc&eacute;<br>
hImageBut1 est l'image contenant le bouton enfonc&eacute;, 100 et 100
correspondent a l'emplacement x,y du point en haut a gauche de
l'image</font></p>

<p><font color="#FF0000"><b>JE VEUT DEPLACER MA
FENETRE !</b></font></p>

<p><font color="#FFFFFF">quand je n'utilise pas la technique au
dessus pour faire mes boutons, je peut m'utiliser d'une technique
simple pour deplacer la fenetre :<br>
quand le message WM_NCHITTEST est envoy&eacute; on fait ça :</font></p>

<blockquote>
    <p><font color="#80FFFF">mov eax, HTCAPTION</font></p>
</blockquote>

<p><font color="#FFFFFF">mais helas quand on s'utilise de la
technique du dessus, on peut pas faire ça :( donc j'ai du faire
autrement :</font></p>

<blockquote>
    <p><font color="#80FFFF">.elseif uMsg == WM_LBUTTONDOWN<br>
    mov eax,lParam<br>
    and eax,0ffffh<br>
    mov hitpoint.x,eax<br>
    mov eax,lParam<br>
    shr eax,16<br>
    mov hitpoint.y,eax</font></p>
    <p><font color="#80FFFF">.if hitpoint.x &gt; 100 &amp;&amp;
    hitpoint.x &lt; 200 &amp;&amp; hitpoint.y &gt; 100 &amp;&amp;
    hitpoint.y &lt; 120 <br>
    mov but1,TRUE<br>
    invoke InvalidateRect,hWnd,NULL,FALSE<br>
    .else<br>
    mov move,TRUE<br>
    mov eax, hitpoint.x<br>
    mov hitpointold.x, eax<br>
    mov eax, hitpoint.y<br>
    mov hitpointold.y, eax<br>
    .endif</font></p>
    <p><font color="#80FFFF">.elseif uMsg == WM_MOUSEMOVE</font></p>
    <p><font color="#80FFFF">invoke GetCursorPos,ADDR hitpoint<br>
    mov eax,hitpointold.x<br>
    mov ebx,hitpointold.y<br>
    sub hitpoint.x,eax<br>
    sub hitpoint.y,ebx</font></p>
    <p><font color="#80FFFF">.if move<br>
    invoke
    SetWindowPos,hWin,NULL,hitpoint.x,hitpoint.y,NULL,NULL,SWP_NOSIZE
    or SWP_NOZORDER<br>
    .endif</font></p>
    <p><font color="#80FFFF">.elseif uMsg == WM_LBUTTONUP</font></p>
    <p><font color="#80FFFF">mov eax,lParam<br>
    and eax,0ffffh<br>
    mov hitpoint.x,eax<br>
    mov eax,lParam<br>
    shr eax,16<br>
    mov hitpoint.y,eax</font></p>
    <p><font color="#80FFFF">.if hitpoint.x &gt; 100 &amp;&amp;
    hitpoint.x &lt; 200 &amp;&amp; hitpoint.y &gt; 100 &amp;&amp;
    hitpoint.y &lt; 120 &amp;&amp; but1<br>
    ;operation as effectu&eacute;<br>
    .end if</font></p>
    <p><font color="#80FFFF">.if but1<br>
    mov but1, FALSE<br>
    invoke InvalidateRect,hWnd,NULL,FALSE<br>
    .end if</font></p>
    <p><font color="#80FFFF">.if move<br>
    mov move,FALSE<br>
    .endif<br>
    </font></p>
</blockquote>

<p><font color="#FFFFFF">en fait c tout con, tant que le bouton
gauche est enfonc&eacute;, d&eacute;s que la souris bouge, la fenetre bouge
d'autant, probleme, si on donne un coup brusque et qu'on sort de
la fenetre et ben on est niqu&eacute; sa marche plus :( et vu que la
fenetre n'est pas carr&eacute; on ne peut pas clipp&eacute; la souris a
l'interrieur</font></p>

<p><font color="#FF0000"><b>QUELQUE TRUC POUR
FERMER UNE FENETRE AVEC UN BOUTON OU LA REDUIRE</b></font></p>

<p><font color="#FFFFFF">quand on fait de la gui generalement on
enleve les boutons system (en haut &agrave; droite) et meme
generalement toute la barre qui va avec, donc si on veut quitter
on doit faire alt+F4 mais j'ai l&agrave; quelque fonctions interressant
:) ! :</font></p>

<p><font color="#FFFFFF">pour fermer le programme :</font></p>

<blockquote>
    <p><font color="#80FFFF">invoke
    SendMessage,hWin,WM_SYSCOMMAND,SC_CLOSE,NULL</font></p>
</blockquote>

<p><font color="#FFFFFF">pour reduire la fenetre :</font></p>

<blockquote>
    <p><font color="#80FFFF">invoke
    SendMessage,hWin,WM_SYSCOMMAND,SC_MINIMIZE,NULL</font></p>
</blockquote>

<p>et hop je vous rebalance un petit coup de win32.hlp !</p>

<blockquote>
    <p><font color="#FFFF80"><b>SC_CLOSE</b>..........
    : Closes the window. This command sends a WM_CLOSE message to
    the window. The window carries out any steps needed to clean
    up and destroy itself.<br>
    <b>SC_MAXIMIZE</b> . : Maximizes the window.<br>
    <b>SC_MINIMIZE</b> .. : Minimizes the window.<br>
    <b>SC_RESTORE</b> ... : Restores a minimized or
    maximized window to its previous size and position.<br>
    <b>SC_SIZE</b> ............. : Starts a Size
    command. The user can change the size of the window by using
    the mouse or keyboard.</font></p>
</blockquote>

<p><font color="#FFFFFF">alors .... heureux ?</font></p>

<p align="right"><font color="#FF0000" size="6"
face="Comic Sans MS"><b>CR</b></font><font
color="#5301FE" size="6" face="Comic Sans MS"><b>OQ</b></font><font
color="#B005FA" size="6" face="Comic Sans MS"><b>MO</b></font><font
color="#004080" size="6" face="Comic Sans MS"><b>RT</b></font></p>
</body>
</html>
