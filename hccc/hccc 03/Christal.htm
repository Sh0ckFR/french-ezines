<HTML>
<head>
<TITLE>Piece of Christal's Page</TITLE>
</head>

<body  onunload="relpubloc()"  BACKGROUND="../fondopri.jpg" TEXT="black" BGCOLOR="#000099" LINK="red" VLINK="#99CCFF">

<P>

<P ALIGN="RIGHT"><B><FONT SIZE="5" COLOR="#FFCC00" FACE="Arial Black">GRAPHE AT 1.03e</FONT></B>

<BLOCKQUOTE>
	<P><FONT SIZE="2" COLOR="white" FACE="Arial">By Christal</FONT>
</BLOCKQUOTE>

<CENTER>
<P>
<TABLE BORDER="0" CELLPADDING="8" CELLSPACING="0" WIDTH="91%">
	<TR>
		<TD WIDTH="100%" BGCOLOR="#FFFF99">
			<P><U><B><FONT SIZE="2" FACE="Arial">Principe g&eacute;n&eacute;ral:</FONT></B></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">L'architecture d'un programme crypt&eacute;/compress&eacute; va &ecirc;tre
			la suivante:</FONT></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			1- Le Loader<BR>
			2- Le code crypt&eacute; ou compress&eacute;.<BR>
			<BR>
			Le Loader, qui par la force des choses, est toujours &quot;clean&quot; (comprenez ni crypt&eacute;, ni compress&eacute;)
			va s'occuper de la d&eacute;compression/d&eacute;cryption.<BR>
			<BR>
			Le code &agrave; d&eacute;crypter pourrait se d&eacute;composer en trois types de codes:<BR>
			- Les codes n'ayant aucun sens lorsque vous tombez dessus dans un Dead listing, ou ceux-ci sont interpr&eacute;t&eacute;s
			au mieux, et ou les add byte ont la part belle.<BR>
			- Les longues s&eacute;ries de add dword ptr<BR>
			- Les longues s&eacute;ries de BYTE 10 DUP(0)</FONT>
			<BLOCKQUOTE>
				<PRE><FONT SIZE="2" FACE="Courier New">:004233B1 E9E760FEFF  jmp 0040949D
:004233B6 CC          int 03
:004233B7 CC          int 03
:004233B8 8B4DF0      mov ecx, dword ptr [ebp-10]
:004233BB E9B15BFEFF  jmp 00408F71
:004233C0 B870A44200  mov eax, 0042A470
:004233C5 E9D360FEFF  jmp 0040949D
:004233CA 0000        add byte ptr [eax], al

:0041D026 0100        add dword ptr [eax], eax
:0041D028 800000      add byte ptr [eax], 00
:0041D02B 0030        add byte ptr [eax], dh

:004064B2 00000000000000000000 BYTE 10 DUP(0)
:004064BC 00000000000000000000 BYTE 10 DUP(0)
:004064C6 00000000000000000000 BYTE 10 DUP(0)
:004064D0 00000000000000000000 BYTE 10 DUP(0)</FONT></PRE>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial"><BR>
			</FONT><B><U><FONT SIZE="2" FACE="Arial">Pr&eacute;sence d'un compacteur ou d'un crypteur: les sympt&ocirc;mes.</FONT></U></B><FONT
			SIZE="2" FACE="Arial"><BR>
			<BR>
			Au del&agrave;, et bien avant que vous ne puissiez acc&eacute;der au dead Listing, les programmes pack&eacute;s/compress&eacute;s
			se distinguent par les sympt&ocirc;mes suivants:<BR>
			<BR>
			- Au lancement de l'application, via le Symbol Loader de SoftIce, vous n'avez pas de break sur l'Entry point .<BR>
			<BR>
			- Wdasm ne d&eacute;sassemble pas le fichier (accompagn&eacute; souvent du message &quot;the PE Files is not a
			Standard Window Format), ou ne d&eacute;sassemble que le Pe header (donc pas de codes). Vous obtiendrez quand m&ecirc;me,
			dans ce cas, une information qui sera pr&eacute;cieuse pour la suite: l'entry point du programme dans sa version
			crypt&eacute;e/compress&eacute;e</FONT>
			<BLOCKQUOTE>
				<P ALIGN="CENTER"><FONT SIZE="2" FACE="Arial">+++++++++++++++++++ ASSEMBLY CODE LISTING ++++++++++++++++++<BR>
				****************** Start of Code in Object CODE ****************<BR>
				</FONT><FONT SIZE="2" COLOR="blue" FACE="Arial">Program Entry Point = </FONT><FONT SIZE="2" FACE="Courier New">008F4000</FONT><FONT
				SIZE="2" FACE="Arial"> -&gt; Entry point de l'exe compress&eacute;</FONT>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial">Dans le meilleur des cas, Wdasm d&eacute;sassemble le fichier sans les ressources
			habituelles (Strings Datas, Fonctions import&eacute;es et export&eacute;es, Dialog...).<BR>
			<BR>
			- La taille de l'ex&eacute;cutable, sachant que les applications Windows manquent singuli&egrave;rement de discr&eacute;tion
			&agrave; ce niveau, est &eacute;galement un bon indicateur de la pr&eacute;sence &eacute;ventuelle d'un compresseur
			(une application inf&eacute;rieure &agrave; 100 ko, aujourd'hui, devient rare...).</FONT></P>
			<P><FONT SIZE="2" FACE="Arial">- Les codes au niveau de l'Entry Point (bien &eacute;loign&eacute; de l'habituel
			00401000!) ressemblent &agrave; ceci;</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">017F:008F4000  669C                PUSHF
017F:008F4002  60                  PUSHAD
017F:008F4003  E8CA000000          CALL    008F40D2
017F:008F4008  0300                ADD     EAX,[EAX]
017F:008F400A  0400                ADD     AL,00
017F:008F400C  0500060007          ADD     EAX,07000600
017F:008F4011  0008                ADD     [EAX],CL
017F:008F4013  0009                ADD     [ECX],CL
017F:008F4015  000A                ADD     [EDX],CL
017F:008F4017  000B                ADD     [EBX],CL</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Bref! vous avez affaire &agrave; un programme compress&eacute; ou crypt&eacute;.</FONT></P>
			<P><U><FONT SIZE="2" FACE="Arial">Identification du compresseur ou du crypteur:</FONT></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			Suivant le crypteur/compresseur utilis&eacute;, celui ci va &ecirc;tre plus ou moins discret et/ou rep&eacute;rable.<BR>
			Dans les diff&eacute;rentes solutions envisageables pour d&eacute;couvrir &agrave; qui vous aurez affaire, vous
			pouvez:<BR>
			<BR>
			&middot; utiliser un File Analyser (Type PE Sniffer)<BR>
			<BR>
			&middot; chercher dans les codes du programme soit un copyright (souvent vers la fin du fichier),</FONT></P>
			<CENTER>
			<P>
			<TABLE BORDER="0" CELLPADDING="0" WIDTH="76%">
				<TR>
					<TD WIDTH="33%" HEIGHT="21" VALIGN="TOP">
						<PRE><FONT SIZE="2" FACE="Courier New">.......$Id: UPX
0.82 Copyright (
C) 1996-1999 Las
zlo Molnar &amp; Mar
kus Oberhumer $</FONT></PRE>
					</TD>
					<TD WIDTH="34%" HEIGHT="21" VALIGN="TOP">
						<PRE><FONT SIZE="2" FACE="Courier New">. ..............En
crypted by Stone
CF - PowerLame
PE-ExeEnCrypter
! :) 2nd&amp;mi ...</FONT></PRE>
					</TD>
					<TD WIDTH="33%" HEIGHT="21" VALIGN="TOP">
						<PRE><FONT SIZE="2" FACE="Courier New">... -=. PE-SHiELD v0
.2 -.- (C) Copyright
1998 by ANAKiN [DaV
inci] .=- ..........</FONT></PRE>
					</TD>
				</TR>
			</TABLE>
</P>
</CENTER>
			<P><FONT SIZE="2" FACE="Arial">Soit des noms de sections que vous identifierez comme &eacute;tant li&eacute;s &agrave;
			un packer/crypteur (en d&eacute;but de fichier, au niveau des informations du PE Header), en utilisant un Snooper
			pour r&eacute;cup&eacute;rer toutes les cha&icirc;nes alphanum&eacute;riques du fichier, ou plus simplement un
			&eacute;diteur hexad&eacute;cimal (avec correspondance ASCII, mais il me semble qu'ils le font tous...).</FONT>
			<BLOCKQUOTE>
				<PRE><FONT SIZE="2" FACE="Courier New">....PESHiELD........
.V..................
@...PESHiELD........
.....Z..............
@...ANAKIN98.0......</FONT></PRE>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial">ou avec ProcDump,</FONT>
			<BLOCKQUOTE>
				<PRE><FONT SIZE="2" FACE="Courier New">UPX0  00038000 00001000 00000000 00000400 E0000080 
UPX1  00023000 00039000 00022600 00000400 E0000040 
.rsrc 00001000 0005C000 00000C00 00022A00 C0000040 </FONT></PRE>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial">&middot; Identifier la signature du packer/compresseur, c'est &agrave; dire le code
			qui permettra de reconna&icirc;tre tel ou tel packer, &agrave; partir d'une suite de mn&eacute;moniques caract&eacute;ristiques
			(ex 61 FF E0 = POPAD JMP EAX) et bien s&ucirc;r situ&eacute; dans une zone non compress&eacute;e/pack&eacute;e
			(clean) .</FONT></P>

			<P><FONT SIZE="2" FACE="Arial">Dans le cas de GrapheAt, on ne retouve aucune trace de CopyRight. Pour autant ce
			n'est pas obligatoirement une compression maison, mais le packer n'&eacute;tant pas facilement identifiable, il
			faudra proc&eacute;der &agrave; la r&eacute;alisation d'un Dump manuel.</FONT></P>

			<P><U><B><FONT SIZE="2" FACE="Arial">Utiliser Wdasm et SoftIce:</FONT></B></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Modifier les caract&eacute;ristiques des sections:</FONT></U><FONT SIZE="2"
			FACE="Arial"><BR>
			<BR>
			Pour pouvoir utiliser l'un et/ou l'autre au mieux, il va falloir faire une modification au niveau de la sections
			.CODE. Pour cela, vous pouvez utiliser un outil comme ProcDump.</FONT>
			<BLOCKQUOTE>
				<PRE><FONT SIZE="2" FACE="Arial">Name                Virt Size           Virt Offset          Raw Size         Raw Offset    Characteristics</FONT><FONT
				SIZE="2" FACE="Courier New">
CODE        00062000    00001000    00033A00    00001C00   E0000060
BSS         00476000    00063000    00000000    00000000   C0000000
.idata      00002000    004D9000    00002000    00035600   C0000040
.tls        00001000    004DB000    00000000    00000000   C0000000
.rdata      00001000    004DC000    00000200    00037600   D0000040
.reloc      00007000    004DD000    00000000    00000000   C0000040
.rsrc       00010000    004E4000    000053E0    00037800   C0000040
.rsrcgr     0000D2DC    004F4000    00001800    00000400   E2000060</FONT></PRE>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial">C'est par la section .rsrcgr que va attaquer le Soft. Or si les autres sections
			ont des noms &quot; honorables &quot; celle ci fait louche…<BR>
			Et puis des caract&eacute;ristiques de sections du type E0000060…</FONT></P>
			<P><FONT SIZE="2" FACE="Arial">Vous aurez probablement remarqu&eacute; que dans cet exemple, toutes les sections
			ont des caract&eacute;ristiques diff&eacute;rentes ( il faut que certaines sections soient Executable, Readable,
			Writable et Data! ainsi, le programme peut lire le code compress&eacute;, et le d&eacute;compresser dans la m&ecirc;me
			section sans provoquer d'erreur fatale dans Windows), ce qui, normalement, vous emp&ecirc;che souvent de d&eacute;sassembler
			l'ex&eacute;cutable, ou d'obtenir un break en passant par le Symbol Loader de SoftIce.<BR>
			En modifiant la premi&egrave;re section (.text), et en rempla&ccedil;ant E0000060 par E0000020 &agrave; l'aide
			de ProcDump, vous pourrez reprendre la main avec SoftIce, et obtenir un listing, sans les ressources (Strings Data...)
			dans Wdasm.<BR>
			<BR>
			Voici quelques explications rapides et tr&egrave;s succinctes sur les attributs des sections:<BR>
			================<BR>
			0x20...... : signifie eXecutable<BR>
			0x40...... : signifie Readable<BR>
			0x80...... : signifie Writeable<BR>
			<BR>
			exemple 0x60.. -&gt; eXecutable + Readable <BR>
			0x60... -&gt; R-X-.<BR>
			0xC0... -&gt; R-.-W<BR>
			0xE0... -&gt; R-X-W<BR>
			=================<BR>
			0x......20 : signifie contains Code<BR>
			0x......40 : signifie Initialized data<BR>
			0x......80 : signifie Unitialized data<BR>
			<BR>
			0x......40 : la plupart des sections peuvent avoir cette valeur except&eacute; les sections CODE et .BSS<BR>
			=================<BR>
			<BR>
			Et plus simplement:</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">   0x00000020 IMAGE_SCN_CNT_CODE 
   0x20000000 IMAGE_SCN_MEM_EXECUTE 
   0x40000000 IMAGE_SCN_MEM_READ 
OR 0x80000000 IMAGE_SCN_MEM_WRITE
----------------------------------- 
   0xE0000020 </FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial"><BR>
			Pour modifier les caract&eacute;ristiques des sections:<BR>
			<BR>
			Dans ProcDump, en cliquant sur le bouton PE EDITOR, vous allez obtenir des informations sur le Soft compress&eacute;
			:<BR>
			L'image base qui semble toujours &ecirc;tre 400000 et la valeur de l'Entry point.</FONT></P>
			<PRE><B><FONT SIZE="2" FACE="Courier New">Header Infos</FONT></B><FONT SIZE="2" FACE="Courier New">
Entry Point :        004F4000
Size Of Image :      005012DC
Image Base :         00400000</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">En cliquant sur le bouton &quot; Sections &quot;, vous obtiendrez le tableau vu
			ci dessus.</FONT><BR>
			<FONT SIZE="2" FACE="Arial">Un right-clic sur l'une d'entre elles va vous permettre d'acc&eacute;der &agrave; un
			nouvel &eacute;cran o&ugrave; vous pourrez modifier les sections.<BR>
			<BR>
			</FONT><B><U><FONT SIZE="2" FACE="Arial">Cr&eacute;ation d'un Dump:</FONT></U></B><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			Pour pouvoir disposer d'un listing avec les ressources, il va falloir cr&eacute;er un dump manuel de l'ex&eacute;cutable
			compact&eacute;. <BR>
			<BR>
			La premi&egrave;re &eacute;tape va &ecirc;tre de tracer l'ex&eacute;cutable &agrave; partir de l'Entry Point, et
			trouver le moment o&ugrave; la d&eacute;compression est termin&eacute;e.</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">017F:008F561D  6A05                PUSH    05
017F:008F561F  59                  POP     ECX
017F:008F5620  F3A4                REPZ MOVSB
017F:008F5622  61                  POPAD             &gt; Classique!
017F:008F5623  669D                POPF
017F:008F5625  E95AC5B6FF          JMP     00461B84  &gt; OEP</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">C'est le passage de relais vers le programme d'origine. Il est possible d'en &ecirc;tre
			&agrave; peu pr&eacute;s certain, car on passe brutalement des adresses 008F5XXX &agrave; 00461XXX</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">017F:00461B84  55                  PUSH    EBP
017F:00461B85  8BEC                MOV     EBP,ESP
017F:00461B87  83C4F4              ADD     ESP,-0C
017F:00461B8A  53                  PUSH    EBX
017F:00461B8B  E86818FAFF          CALL    004033F8
017F:00461B90  E88F2EFAFF          CALL    00404A24</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Et qu'ensuite le PUSH EBP est un classique des d&eacute;buts de programmes, bien
			que ce ne soit pas une r&egrave;gle absolue.<BR>
			Dans les cas ou, malgr&eacute; la modification des caract&eacute;ristiques des sections, vous n'arrivez pas &agrave;
			prendre la main, il y a d'autres solutions: si Wdasm vous a livr&eacute; l'entry point de l'ex&eacute;cutable,
			vous pouvez utiliser un &eacute;diteur hexad&eacute;cimal (type Hiew) pour vous caler sur la premi&egrave;re instruction
			de l'ex&eacute;cutable,et<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Prendre la main gr&acirc;ce &agrave; l'Interruption 3 :</FONT></U><FONT SIZE="2"
			FACE="Arial"><BR>
			<BR>
			L'id&eacute;e &eacute;tant d'obliger SoftIce &agrave; marquer un break, &agrave; l'aide de Hiew remplacez la valeur
			qui se trouve &agrave; l'Entry Point.(Souvent un opcode 60 qui correspond au mn&eacute;monique PUSHAD) par CC,
			le code pour INT 3.<BR>
			Posez ensuite un BPINT 3 dans SoftIce, et lancez le programme<BR>
			<BR>
			Remplacez imm&eacute;diatement le code CC par sa valeur d'origine, (par exemple PUSHAD) sinon c'est le plantage
			assur&eacute; :</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">017F:008F4000  669C                PUSHF
017F:008F4002  60                  PUSHAD
017F:008F4003  E8CA000000          CALL    008F40D2
017F:008F4008  0300                ADD     EAX,[EAX]</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Et passez &agrave; l'&eacute;tape suivante.<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Un autre solution:</FONT></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			BPX GetProcAddress<BR>
			Une majorit&eacute; d'applications font appel &agrave; cette API d&eacute;s leur lancement.<BR>
			Dans la majorit&eacute; des cas, vous allez pouvoir vous retrouvez dans SoftIce gr&acirc;ce &agrave; ce breakpoint
			…<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Trouver le moment o&ugrave; la d&eacute;compression est termin&eacute;e.</FONT></U><FONT
			SIZE="2" FACE="Arial"><BR>
			<BR>
			Un grand nombre d'encrypteurs/compresseurs commencent par sauvegarder le contenu des registres (Pushad) avant de
			commencer leur boulot, et les restituent &agrave; la fin de celui ci (Popad). Bien souvent, dans ce cas, vous aurez
			le passage de relais du Loader &agrave; l'application d'origine, dans les parages.</FONT></P>
			<P><U><FONT SIZE="2" FACE="Arial">PEPack</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">61 POPAD            </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; restauration</FONT><FONT
			SIZE="2" FACE="Courier New">
FFEO JMP EAX        </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; passe la main</FONT><FONT SIZE="2"
			FACE="Courier New">
8D85CE050000 LEA EAX,[EBP+000005CE]
</FONT></PRE>
			<P><U><FONT SIZE="2" FACE="Arial">PE-ExeEnCrypter</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">5F POP EDI          </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; restauration</FONT><FONT
			SIZE="2" FACE="Courier New">
5D POP EBP          </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; restauration </FONT><FONT SIZE="2"
			FACE="Courier New">
FFE0 JMP EAX        </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; passe la main </FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Voici une variante du POPAD, ou les registres sont r&eacute;cup&eacute;r&eacute;s
			un &agrave; un:<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">STNE 1.13</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">015f:0040e090 pop ebx ------</FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">on r&eacute;cup&egrave;re</FONT><FONT
			SIZE="2" FACE="Courier New"> 
015f:0040e091 pop ecx ------</FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">tous les</FONT><FONT SIZE="2"
			FACE="Courier New">
015f:0040e092 pop edx ------</FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">registres</FONT><FONT SIZE="2"
			FACE="Courier New">
015f:0040e093 pop esi 
015f:0040e094 pop edi 
015f:0040e095 pop ebp 
015f:0040e096 jmp eax ----- </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">et on saute vers le prog d&eacute;crypt&eacute;...</FONT></PRE>
			<P><U><FONT SIZE="2" FACE="Arial">VG Crypt</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">61 POPAD                                      </FONT><FONT SIZE="2" COLOR="blue"
			FACE="Courier New">&gt; restauration</FONT><FONT SIZE="2" FACE="Courier New"> 
9D POPFD 
8B9A09274000 MOV EBX,[EDX+00402709] 
898A09274000 MOV [EDX+00402709],ECX 
FFE3         JMP EBX     </FONT><FONT SIZE="2" COLOR="red" FACE="Courier New">   variante du EAX!</FONT><FONT SIZE="2"
			FACE="Courier New"> </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New"> &gt; passe la main</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Avec un peu d'habitude, on en sait assez: Le JMP EAX (ou plus rarement EBX) est
			tr&egrave;s couramment utilis&eacute; pour brancher vers les codes du programme original (OEP).<BR>
			<BR>
			Toujours dans les variantes, vous avez le call EAX, parfois d&eacute;guis&eacute;, comme dans le cas de </FONT><U><FONT
			SIZE="2" FACE="Arial">Shrinker</FONT></U><FONT SIZE="2" FACE="Arial">:</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">8945E0 mov  dword ptr [ebp-20], eax  </FONT><FONT SIZE="2" COLOR="blue"
			FACE="Courier New">(le fameux EAX!)</FONT><FONT SIZE="2" FACE="Courier New">
FF7510 push [ebp+10]
FF750C push [ebp+0C]
FF7508 push [ebp+08]
FF55E0 call [ebp-20]                 </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; passe la main &agrave; l'OEP </FONT><FONT
			SIZE="2" FACE="Courier New">
8945E4 mov  dword ptr [ebp-1C], eax
EB07   jmp  0063E4EE</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">L&agrave; aussi, il y a des variantes: le push EAX (qui va pousser une valeur sur
			la pile) et le Ret (qui r&eacute;cup&egrave;re cette adresse sur la pile) vont simuler un retour sur call appelant.<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Aspack</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">LEA EAX,[EBP+00444C37]
50 push eax 
C3 ret </FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Il y a aussi les cas ou plus simplement le programme se branche sur l'Entry Point
			du programme d&eacute;compress&eacute;/d&eacute;crypt&eacute; par un tout b&ecirc;te JMP OEP (Original Entry Point)<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">UPX:</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">61                   popad
E98EF7CAFF           jmp     004CAD80 </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; jump sur l'OEP</FONT><FONT
			SIZE="2" FACE="Courier New">
00000000000000000000 BYTE 10 DUP(0)
00000000000000000D42 BYTE 10 DUP(0)</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">(Il n'est pas tr&egrave;s difficile de mettre la main sur la signature d'UPX. Toutes
			les versions que j'ai pu en voir permettent de la trouver &agrave; la fin du listing d&eacute;sassembl&eacute;).
			Dans le cas de GrapheAT, vous trouverez un cas de figure identique.<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Neolite</FONT></U></P>
			<PRE><FONT SIZE="2" FACE="Courier New">5D          pop ebp 
5B          pop ebx 
E9673DFFFF  jmp 00401000 </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; jump sur l'OEP</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Il y a bien sur des cas particuliers...</FONT></P>
			<P><FONT SIZE="2" FACE="Arial"><BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Dumper le programme en m&eacute;moire:</FONT></U></P>
			<P><FONT SIZE="2" FACE="Arial">Mais dans le cas de GrapheAT, le codage est simple (pas d'Overlapping), et ne pr&eacute;sente
			aucun probl&egrave;me lors du tra&ccedil;age.</FONT></P>
			<P><FONT SIZE="2" FACE="Arial">Pour obtenir une copie du programme d&eacute;compress&eacute; en m&eacute;moire
			on peut utiliser au choix IceDump (pagein D 400000 longeur_du_code c:\dump.exe) ou ProcDump. Dans les deux cas,
			il faudra s'arr&eacute;ter en 008F5625. <BR>
			Lancez le programme/cible via le Symbol Loader de Softice . De cette fa&ccedil;on SoftIce pourra prendre la main.
			<BR>
			Posez un BPM X (Memory BreakPoint on eXecution) sur le jmp </FONT><FONT SIZE="2" FACE="Courier New">008F5625</FONT><FONT
			SIZE="2" FACE="Arial">, et faites [F5] pour relancer le programme. Au break, passez en mode assemblage, et changez
			le </FONT><FONT SIZE="2" COLOR="blue" FACE="Arial">jmp </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">008F5625</FONT><FONT
			SIZE="2" FACE="Arial"> par un </FONT><FONT SIZE="2" COLOR="blue" FACE="Arial">jmp eip</FONT><FONT SIZE="2" FACE="Arial">.
			Ainsi, vous obligerez le programme &agrave; boucler sur lui-m&ecirc;me.<BR>
			Rouvrez ProcDump, et cliquez sur &quot; Options &quot; pour choisir &quot; Rebuilt Import Table &quot;, puis s&eacute;lectionnez
			l'application dans la liste des taches actives de la fen&ecirc;tre de ProcDump. Apr&egrave;s quelques instants,
			vous pourrez sauver un joli dump du nouvel ex&eacute;cutable avec du beau code tout clean.<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Rendre le fichier obtenu ex&eacute;cutable:</FONT></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			Le zoli ex&eacute;cutable obtenu ne va pas pour autant fonctionner. Il faut encore lui indiquer quel va &ecirc;tre
			son nouvel Entry Point. C'est encore ProcDump qui va nous permettre de r&eacute;aliser facilement cette modification.
			<BR>
			Ouvrez ProcDump, et choisissez &quot;PE EDITOR&quot;. Vous obtiendrez ceci:</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">Header Infos
Entry Point :        004F4000  &gt; entry point &agrave; modifier
Size Of Image :      005012DC
Image Base :         00400000</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Il va falloir modifier l'Original Entry Point pour que le programme puisse commencer
			en </FONT><FONT SIZE="2" FACE="Courier New">00461B84</FONT><FONT SIZE="2" FACE="Arial">, et lui soustraire la valeur
			de l'imagebase (00400000): </FONT><FONT SIZE="2" FACE="Courier New">00461B84</FONT><FONT SIZE="2" FACE="Arial">
			(OEP) - 400000 (IB) = </FONT><FONT SIZE="2" FACE="Courier New">61B84</FONT><FONT SIZE="2" FACE="Arial"> (Entry
			Point &agrave; entrer dans le champ de ProcDump, ou en utilisant un &eacute;diteur hexad&eacute;cimal). <BR>
			Si tout c'est bien pass&eacute;, votre ex&eacute;cutable est maintenant Runnable!</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">0000011C        00060E00       Taille de la section Code 
00000120        00019200       Taille des Initialized Data 
00000124        00000000       Taille des Uninitialized Data
00000128        </FONT><FONT SIZE="2" COLOR="#0066FF" FACE="Courier New">004F4000 </FONT><FONT SIZE="2" FACE="Courier New">      Entry Point (RVA)
0000012C        00001000       Base du Code</FONT></PRE>
			<PRE><FONT SIZE="2" FACE="Arial">
</FONT><FONT SIZE="2" FACE="Courier New">00000100 5045 0000 4C01 0800 195E 422A 0000 0000 PE..L....^B*....
00000110 0000 0000 E000 8E81 0B01 0219 000E 0600 ................
00000120 0092 0100 0000 0000 </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">0040 4F00</FONT><FONT SIZE="2"
			FACE="Courier New"> 0010 0000 .........@O.....</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Une fois obtenu un Dump ex&eacute;cutable du programme, vous aurez une copie de
			ce qu'il pouvait &ecirc;tre avant de passer dans le compresseur, avec un ex&eacute;ctable plus gros du fait de
			la pr&eacute;sence du loader dans les codes, m&ecirc;me si celui ci a &eacute;t&eacute; shunt&eacute;. Rien de
			plus facile alors que de patcher l'ex&eacute;cutable obtenu.</FONT></P>
			<P><B><U><FONT SIZE="2" FACE="Arial">Comme Cracker le programme:</FONT></U><FONT SIZE="2" FACE="Arial"></FONT></B></P>
			<P><FONT SIZE="2" FACE="Arial">Apr&egrave;s avoir entr&eacute; un s&eacute;rial, avec un BPX HmemCpy, on arrive
			presque imm&eacute;diatement ici :</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">017F:0045115A  83F810              CMP     EAX,10   &gt; 10 caract&egrave;res ?
017F:0045115D  741A                JZ      00451179 &gt; Go Away</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">En regardant un peu plus bas dans les codes du programmes, on voit ceci :</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">017F:004511E3  6A00                        PUSH    00
017F:004511E5  668B0D90124500              MOV     CX,[00451290]
snips snips ------------------
017F:00451226  C70510917B0001000000MOV     DWORD   PTR [007B9110],00000001</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Histoire de voir si ce que vous avez soup&ccedil;onn&eacute; est good, un jmp 004511E3
			&agrave; la place du JZ en 0045115D, et n'importe quel s&eacute;rial peut &ecirc;tre accept&eacute;<BR>
			<BR>
			Mieux, on a m&ecirc;me le flag Utilisateur enregistr&eacute;.<BR>
			En posant un BPM dessus et en relan&ccedil;ant le programme, on a aussit&ocirc;t un break sur:<BR>
			<BR>
			017F:0045EF8A C70510917B00FFFFFFFFMOV DWORD PTR [007B9110],FFFFFFFF<BR>
			<BR>
			O&ugrave; il n'y a qu'a remplacer le -1 par 1, et bye bye la protection...</FONT></P>
			<P><FONT SIZE="2" FACE="Arial">L'adresse &agrave; patcher est donc 0045EF8A, en rempla&ccedil;ant FFFFFFFF par
			00000001</FONT></P>
			<P><FONT SIZE="2" FACE="Arial"><BR>
			</FONT><B><U><FONT SIZE="2" FACE="Arial">Patcher l'ex&eacute;cutable:</FONT></U></B><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			Vous pouvez opter pour l'utilisation d'un Memory Patcher, si vous souhaitez laisser le fichier compress&eacute;
			en l'&eacute;tat:<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">R!SC's Process Patcher v1.2 : </FONT></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			R!SC est un Memory Patcher qui utilise un script pour cr&eacute;er un fichier ex&eacute;cutable de 8 ko, et qui
			permettra de lancer l'ex&eacute;cutable sans le modifier &quot; physiquement &quot; (et donc sans avoir &agrave;
			s'inqui&eacute;ter d'&eacute;ventuel Checksum), mais qui interviendra quand le programme sera d&eacute;compress&eacute;
			en m&eacute;moire.<BR>
			Voici un exemple de script qu'il serait possible d'&eacute;crire:</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">T=2000:                           ; temps accord&eacute; pour trouver les bytes &agrave; modifier
F=grapheat.exe:                   ; nom du programme &agrave; patcher
O=loader_grapheat.exe:            ; nom du fichier exe que vous allez cr&eacute;er
P=45EF90/FF,FF,FF,FF/00,00,00,01: ; modifications &agrave; apporter en 0045EF90
$                                 ; ordre de fin de script</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Mais les puristes vous diront que ce n'est pas encore suffisant. Il va falloir r&eacute;ussir
			&agrave; patcher le programme compress&eacute; et/ou crypt&eacute;. Pour y arriver, vous devez commencer par:<BR>
			<BR>
			</FONT><U><FONT SIZE="2" FACE="Arial">Ecrire le Patch</FONT></U><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			La trame des modifications &agrave; apporter, dans le cas de programmes compress&eacute;s sont les suivantes:<BR>
			<BR>
			1- A partir d'une zone clean, apr&egrave;s d&eacute;compresion, et en g&eacute;n&eacute;ral avant ou sur le JMP
			ADDRESSE: Saut vers le patch<BR>
			2- Au besoin, v&eacute;rification que l'adresse (ou les adresses) vis&eacute;e est bien decompress&eacute;e<BR>
			3- Modification des octets (attention: une inscription en m&eacute;moires sup&eacute;rieure &agrave; 8 bits se
			fait &quot; &agrave; l'envers &quot;, d'ou par exemple un B001 (mov bl,01) s'&eacute;crirai 01B0).<BR>
			4- Restauration des octets &eacute;cras&eacute;s par le saut_vers_le_patch, et reprendre le cours des choses...</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">803D90EF4500FF       CMP     BYTE PTR [0045EF90],FF        &gt; </FONT><FONT
			SIZE="2" FACE="Arial">adresse vis&eacute;e decompr&eacute;ss&eacute;e</FONT><FONT SIZE="2" FACE="Courier New">?
750A                 JNZ     00XXXXXX                      &gt; </FONT><FONT SIZE="2" FACE="Arial">non</FONT><FONT
			SIZE="2" FACE="Courier New">-&gt;</FONT><FONT SIZE="2" FACE="Arial"> continue</FONT><FONT SIZE="2" FACE="Courier New">
C70590EF450001000000 </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">MOV     DWORD PTR [0045EF90],00000001</FONT><FONT
			SIZE="2" FACE="Courier New"> &gt; </FONT><FONT SIZE="2" FACE="Arial">oui </FONT><FONT SIZE="2" FACE="Courier New">-&gt;</FONT><FONT
			SIZE="2" FACE="Arial"> modifie la cible</FONT><FONT SIZE="2" FACE="Courier New">
E980FEFFFF           JMP     00XXXXXX                      &gt; </FONT><FONT SIZE="2" FACE="Arial">retour &agrave; la normale</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Une fois que vous connaissez la taille du patch, il ne reste plus qu'&agrave;:<BR>
			<BR>
			</FONT><B><U><FONT SIZE="2" FACE="Arial">Trouver de la place</FONT></U></B><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			Pour pouvoir y glisser les quelques lignes de votre patch.<BR>
			Bien souvent, par facilit&eacute;, je m'installe sur un petit bout de l'ic&ocirc;ne, ou &agrave; la place des informations
			de versions ou de copyright. Dans certain cas, m&ecirc;me ceux ci ont &eacute;t&eacute; cod&eacute;s, et un outil
			comme les Borland Ressources WorkShop ne pourra pas vous aider &agrave; trouver la cha&icirc;ne correspondant &agrave;
			l'ic&ocirc;ne convoit&eacute;e. La seconde solution va consister &agrave; trouver un espace disponible.<BR>
			<BR>
			Partant du principe qu'un compileur compl&egrave;te toujours la fin d'une section par des octets nuls (00 00),
			vous allez descendre dans le listing de SoftIce avec l'ascenseur de la fen&ecirc;tre des codes, ou regarder si
			vous avez de la place &agrave; la fin de la derni&egrave;re section de l'ex&eacute;cutable avec un Hex-&eacute;diteur,
			&agrave; la recherche de ce type de codes:</FONT></P>
			<BLOCKQUOTE>
				<PRE><FONT SIZE="2" FACE="Courier New"> 0000         ADD       [EAX],AL  </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; octets nuls</FONT><FONT
				SIZE="2" FACE="Courier New">
 0000         ADD       [EAX],AL
 0000         ADD       [EAX],AL
 0000         ADD       [EAX],AL
 00FF         ADD       BH,BH
 FFFF         INVALID
 FFFF         INVALID             </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New">&gt; fin de la section</FONT></PRE>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial">Il faudra, avant tout, vous assurez qu'&agrave; aucun moment le compresseur/crypteur
			ne va venir y &eacute;crire quoi que ce soit, ou l'utiliser pour Dieu sait quoi, en posant quelques BPM sur les
			adresses rep&eacute;r&eacute;es.<BR>
			<BR>
			Mais les &quot;m&eacute;thodes&quot; abord&eacute;es ci dessus, m&ecirc;me si elles se r&eacute;v&egrave;lent souvent
			suffisantes, sont assez empiriques, sinon hasardeuses…<BR>
			Pour faire &quot;plus s&eacute;rieux&quot;, voici quelques autres solutions:<BR>
			<BR>
			&middot; pour rajouter le code &agrave; la fin du code du programme compress&eacute;, vous devrez retourner dans
			le PE Header:<BR>
			Pour rappel, tout programme est divis&eacute; en sections, et chaque section poss&egrave;de une entr&eacute;e dans
			le PE Header, ca veut dire que le loader poss&egrave;de une section dans le PE Header. ProcDump va nous permettre
			de conna&icirc;tre les d&eacute;tails de cette section ( celle contenant l'entry point):<BR>
			Par exemple : (</FONT><FONT SIZE="2" FACE="Courier New">.rsrcgr</FONT><FONT SIZE="2" FACE="Arial"> &eacute;tant
			la section qui comprend l'EntryPoint et donc le Loader )</FONT></P>
			<BLOCKQUOTE>
				<PRE><FONT SIZE="2" FACE="Arial">Name                   Virt Size            Virt Offset           Raw Size          Raw Offset    Characteristics</FONT><FONT
				SIZE="2" FACE="Courier New">

.rsrcgr     0000D2DC    004F4000    00001800    00000400   E2000060</FONT></PRE>
			</BLOCKQUOTE>
			<P><FONT SIZE="2" FACE="Arial">La Virtual size de la section est 0000D2DC, ce qui veut dire que la m&eacute;moire
			qui sera allou&eacute;e pour cette section sera de 0000D2DC bytes. Le Virtual Offset de la section, et du code
			appartenant au loader, est de 004F4000, additionn&eacute; &agrave; l'Image base qui vaut 00400000, ca nous donne
			une adresse virtuelle de 004F4000 + 00400000 = 008F4000.<BR>
			La taille sur disque (Raw Size) est de 00001800, ce qui veut dire que le code n'utilise que 00001800 bytes dans
			le fichier GrapheAT.exe. Autrement dit le code s'&eacute;tale de l'adresse 008F4000 jusqu'&agrave; 008F4000 + 00001800
			= 008F5C00.<BR>
			Il est probable que vous pourrez disposer de place avant l'adresse 008F5C00, si le loader ne monopolise pas l'ensemble
			de l'espace qui lui est r&eacute;serv&eacute; pour la d&eacute;compression du programme.<BR>
			<BR>
			</FONT><B><FONT SIZE="2" FACE="Arial">Rem:</FONT></B><FONT SIZE="2" FACE="Arial"> Vu que la taille doit &ecirc;tre
			un multiple, cela veut dire que le compilateur rajoute des 00 pour que la section ait la bonne taille, c'est le
			padding.<BR>
			G&eacute;n&eacute;ralement il y a beaucoup de 00 que vous pouvez modifier. Mais il faut faire attention &agrave;
			une chose quand vous faites cela : Il faut bien v&eacute;rifier que l'adresse o&ugrave; vous allez &eacute;crire
			le code de votre patcher fait toujours partie de la section que vous voulez modifier.<BR>
			</FONT><B><FONT SIZE="2" FACE="Arial">Rem:</FONT></B><FONT SIZE="2" FACE="Arial"> Il vaut mieux &eacute;crire le
			patch &agrave; la place de 00 que sur du code, m&ecirc;me si celui-ci semble inutile au premier coup d'œil.</FONT></P>

			<P><FONT SIZE="2" FACE="Arial">A l'aide de SoftIce, vous allez pouvoir contr&ocirc;ler qu'il y a bien une s&eacute;rie
			de 00 00 (place &quot;disponible&quot;) &agrave; la fin de la section .rsrcgr, quand le loader aura fini son travail,
			c'est &agrave; dire quand vous serez &agrave; l'adresse 008F5625. Un BPR sur la longeur des octets que vous voulez
			r&eacute;server pour votre patch va vous assurer que la zone convoit&eacute;e est bien disponible, et vous pourrez
			vous installer en 00856B3 par exemple.</FONT></P>

			<P><FONT SIZE="2" FACE="Arial">Dans le projet sur les PE Packed, il est parfois impossible d'ins&eacute;rer un
			patch. Il faut alors rajouter du code ou, en d'autre terme, augmenter la grandeur d'une section, voir rajouter
			une section. Comme ce n'est pas le cas i&ccedil;i, nous en parlerons un prochaine fois.</FONT></P>

			<P><FONT SIZE="2" FACE="Arial">Voici le patch en lui m&ecirc;me:</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">:008F56B3  803D90EF4500FF      CMP     BYTE PTR [0045EF90],FF  &gt; </FONT><FONT
			SIZE="2" FACE="Arial">adresse vis&eacute;e decompr&eacute;ss&eacute;e?</FONT><FONT SIZE="2" FACE="Courier New">
:008F56BA  750A                JNZ     008F56C6                &gt; </FONT><FONT SIZE="2" FACE="Arial">non-&gt; continue</FONT><FONT
			SIZE="2" FACE="Courier New">
:008F56BC  C70590EF450001000000MOV     DWORD PTR [0045EF90],01 &gt; </FONT><FONT SIZE="2" FACE="Arial">oui -&gt; modifie</FONT><FONT
			SIZE="2" FACE="Courier New">
:008F56C6  8B86E0B50000        MOV     EAX,[ESI+0000B5E0]      &gt; </FONT><FONT SIZE="2" FACE="Arial">retauration</FONT><FONT
			SIZE="2" FACE="Courier New">
:008F56CC  E980FEFFFF          JMP     008F5551                &gt; </FONT><FONT SIZE="2" FACE="Arial">retour &agrave; la normale</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial"><BR>
			</FONT><B><U><FONT SIZE="2" FACE="Arial">R&eacute;-adressage vers le patch:</FONT></U></B><FONT SIZE="2" FACE="Arial"><BR>
			<BR>
			Le choix de l'adresse &agrave; patcher en premier pour r&eacute;-adresser vers le patch est li&eacute; &agrave;
			la fin de la d&eacute;compression de la zone cibl&eacute;e. Un BPM sur l'adresse 0045EF90 va permettre de trouver
			l'endroit du code dans le loader qui va s'occuper de decompresser cette partie du programme. Il n'y a plus qu'&agrave;
			trouver ensuite une place pour y glisser un JUMP vers_le_patch. Suivant les cas, il vous faudra respecter la place
			occup&eacute;e par les codes d'origines situ&eacute;s dans la zone clean du programme et trouvable par un hex &eacute;diteur,
			comme c'est le cas i&ccedil;i:</FONT></P>
			<PRE><FONT SIZE="2" FACE="Courier New">Codes d'origines:
017F:008F5543  E834ECFFFF    CALL    008F417C           &gt; </FONT><FONT SIZE="2" FACE="Arial">decompression de l'adresse vis&eacute;e</FONT><FONT
			SIZE="2" FACE="Courier New">
017F:008F5548  017D0C        ADD     [EBP+0C],EDI 
017F:008F554B  8B86E0B50000  MOV     EAX,[ESI+0000B5E0] &gt; </FONT><FONT SIZE="2" FACE="Arial">place &agrave; prendre?!</FONT><FONT
			SIZE="2" FACE="Courier New">
017F:008F5551  017DFC        ADD     [EBP-04],EDI

R&eacute;-adressage:
017F:008F5543  E834ECFFFF          CALL    008F417C
017F:008F5548  017D0C              ADD     [EBP+0C],EDI
017F:008F554B  E963010000         </FONT><FONT SIZE="2" COLOR="blue" FACE="Courier New"> JMP     008F56B3</FONT><FONT
			SIZE="2" FACE="Courier New">     &gt; jump vers le patch
017F:008F5550  90                  NOP
017F:008F5551  017DFC              ADD     [EBP-04],EDI &gt; retour i&ccedil;i</FONT></PRE>
			<P><FONT SIZE="2" FACE="Arial">Dans ce cas pr&eacute;cis, il faudra que le patch r&eacute;&eacute;crive les MOV
			EAX,[ESI+0000B5E0]. Apr&egrave;s que les modifications voulues aient &eacute;t&eacute; faites, vous redirigerez
			vers l'adresse 008F5551 pour que l'application continue, comme si de rien n'&eacute;tait.</FONT>
		</TD>
	</TR>
</TABLE>
</P>
</CENTER>

<BLOCKQUOTE>
	<P><FONT SIZE="2" COLOR="white" FACE="Arial">Bonne Journ&eacute;e</FONT></P>

	<P><A HREF="mailto:christal@lemel.fr"><FONT SIZE="2" FACE="Arial">Christal</FONT></A>
</BLOCKQUOTE>
</BODY>
</HTML>




