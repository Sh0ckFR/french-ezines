<html>


<!-- Mirrored from frenchezines.free.fr/tries/shmeitcorp/5/Crazy/solucespudcrackme1.htm by HTTrack Website Copier/3.x [XR&CO'2007], Thu, 07 Aug 2008 04:41:16 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>Comment toujours gagner a Freecell</title>
<body bgcolor="#000000" text="#FFFFFF" link="#FFFFFF" vlink="#FFFFFF" alink="#FFFFFF" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0">
<font face="Arial, Helvetica, sans-serif"> </font> 
<table width="670" border="0">
  <tr> 
    <td><font face="Arial, Helvetica, sans-serif"> 
      <h1><font size="2" face="Arial, Helvetica, sans-serif"><b>Mettre en echec 
        le Crackme1 de Spud... [<a href="Crazy/crackme1.zip">zip</a>]<br>
        <em>(Identifier et casser un serial &quot;crypt&eacute;&quot; par XOR)</em></b></font></h1>
      <p><font size="2" face="Arial, Helvetica, sans-serif"> Nous allons aujourd'hui 
        nous attacher &agrave; cracker le crackme n&deg;1 de Spud.</font><br>
        <font size="2" face="Arial, Helvetica, sans-serif">Ce crackme a l'avantage 
        de sortir un peu de l'ordinaire.</font></p>
      </font> 
      <p><font size="2" face="Arial, Helvetica, sans-serif"><strong>Pr&eacute;sentation 
        sommaire :</strong><br>
        </font><font size="2" face="Arial, Helvetica, sans-serif">- un seul champ 
        &agrave; renseigner (serial unique ?)<br>
        - si le serial est mauvais on quitte direct (radical!)<br>
        - petit &eacute;xecutable de 4ko non proteg&eacute;.</font></p>
      <font size="2" face="Arial, Helvetica, sans-serif">Bon, le code est si petit 
      que je n'ai pas besoin de vous dire comment arriver ici :<br>
      (Hmemcpy ou GetDlgItemTextA feront tr&egrave;s bien l'affaire)<br>
      <br>
      <font size="1">(IMPORTANT : NDOracle:<br>
      Pour des raisons de lisibilit&eacute;, les commentaires sont en <strong>Arial 
      gras</strong> et entre parenth&egrave;se.<br>
      Chaque commentaire concerne <u>la ligne qui le pr&eacute;c&egrave;de.</u><br>
      <font color="#FFFF00">La partie jaune</font> du code est une boucle. <font size="2" face="Arial, Helvetica, sans-serif"><font color="#0000FF" size="1">La 
      partie bleue</font><font size="1"> du code ne sert &agrave; rien! </font><font size="2" face="Arial, Helvetica, sans-serif"><font color="#FF0000" size="1">La 
      partie rouge</font> <font size="1">... bah vous verrez ! :-)</font></font></font><br>
      Voil&agrave; c'est tout merci.)<br>
      <br>
      </font></font><font size="2" face="Courier New, Courier, mono">:00401057 
      E81C010000 Call 00401178<br>
      :0040105C 0BC0 or eax, eax<br>
      :0040105E 0F84A7000000 je 0040110B<br>
      :00401064 60 pushad<br>
      :00401065 33F6 xor esi, esi<br>
      :00401067 33FF xor edi, edi<br>
      :00401069 B908000000 mov ecx, 00000008<br>
      :0040106E 683C304000 push 0040303C<br>
      <font face="Arial, Helvetica, sans-serif"><strong>(Adresse de notre serial, 
      en faisant 'd 40303c' on peut voir l'&eacute;volution du serial.)</strong></font><br>
      :00401073 5E pop esi<br>
      :00401074 8BD6 mov edx, esi<br>
      <font color="#FFFF00"> :00401076 80362C xor byte ptr [esi],</font><br>
      <font color="#FFFFFF" face="Arial, Helvetica, sans-serif"><strong>On prend 
      chaque caract&egrave;re du serial, et on le xor par 2C (1ere constatation 
      le serial fait 8 caract&egrave;res).</strong></font><br>
      <font color="#FFFF00">:00401079 46 inc esi<br>
      :0040107A E2FA loop 00401076</font><br>
      :0040107C 8BF2 mov esi, edx<br>
      :0040107E 8A06 mov al, byte ptr [esi] <font face="Arial, Helvetica, sans-serif"><strong><br>
      (1er caract&egrave;re)</strong></font><br>
      :00401080 8A5E07 mov bl, byte ptr [esi+07]<strong><font face="Arial, Helvetica, sans-serif"><br>
      (8&egrave;me caract&egrave;re)</font></strong><br>
      :00401083 32C3 xor al, bl<br>
      <font color="#FF0000" face="Arial, Helvetica, sans-serif"><strong>((1)Et 
      on xor le 1er caract&egrave;re avec le 8eme caract&egrave;re)</strong></font><br>
      <br>
      :00401085 8802 mov byte ptr [edx], al<br>
      <strong><font face="Arial, Helvetica, sans-serif"> (en 40303C on remplace 
      la valeur existante par la valeur obtenue (idem pour la suite ...))</font></strong><br>
      :00401087 8A4601 mov al, byte ptr [esi+01]<br>
      <strong><font face="Arial, Helvetica, sans-serif">(2&egrave;me caract&egrave;re)</font></strong><br>
      :0040108A 8A5E06 mov bl, byte ptr [esi+06]<br>
      <strong><font face="Arial, Helvetica, sans-serif"> (7&egrave;me caract&egrave;re)</font></strong><br>
      :0040108D 32C3 xor al, bl<br>
      <strong><font color="#FF0000" face="Arial, Helvetica, sans-serif"> ((2) 
      2&egrave;me caract&egrave;re xor 7&egrave;me caract&egrave;re)</font></strong><br>
      <br>
      :0040108F 884201 mov byte ptr [edx+01], al<br>
      <font face="Arial, Helvetica, sans-serif"><strong> (modif du 2&egrave;me 
      caract&egrave;re)</strong></font><br>
      :00401092 8A4602 mov al, byte ptr [esi+02]<br>
      <font face="Arial, Helvetica, sans-serif"><strong> (3&egrave;me caract&egrave;re)</strong></font><br>
      :00401095 8A5E05 mov bl, byte ptr [esi+05]<br>
      <font face="Arial, Helvetica, sans-serif"><strong> (6&egrave;me caract&egrave;re)</strong></font><br>
      :00401098 32C3 xor al, bl<br>
      <strong><font color="#FF0000" face="Arial, Helvetica, sans-serif">((3) 3&egrave;me 
      caract&egrave;re xor 6&egrave;me caract&egrave;re)</font></strong><br>
      <br>
      :0040109A 884202 mov byte ptr [edx+02], al<br>
      <font face="Arial, Helvetica, sans-serif"><strong>(modif du 3&egrave;me 
      caract&egrave;re)</strong></font><br>
      :0040109D 8A4603 mov al, byte ptr [esi+03]<br>
      <font face="Arial, Helvetica, sans-serif"><strong>(4&egrave;me caract&egrave;re)</strong></font><br>
      :004010A0 8A5E04 mov bl, byte ptr [esi+04]<br>
      <font face="Arial, Helvetica, sans-serif"><strong>(5&egrave;me caract&egrave;re)</strong></font><br>
      :004010A3 32C3 xor al, bl<br>
      <font color="#FF0000" face="Arial, Helvetica, sans-serif"><strong>((4) 4&egrave;me 
      caract&egrave;re xor 5&egrave;me caract&egrave;re)</strong></font><br>
      <br>
      :004010A5 884203 mov byte ptr [edx+03], al<br>
      <font face="Arial, Helvetica, sans-serif"><strong>(modif du 4&egrave;me 
      caract&egrave;re)</strong></font>&nbsp; 
      <br>
      :004010A8 8BF2 mov esi, edx</font> 
      <p><font size="2" face="Arial, Helvetica, sans-serif"><strong>(La partie 
        ci-dessous en bleue ne sert &agrave; rien... Peut &ecirc;tre pour nous 
        embrouiller?)</strong></font><font size="2" face="Courier New, Courier, mono"><br>
        <font color="#0000FF">:004010AA 8A06 mov al, byte ptr [esi]<br>
        :004010AC 8A5E02 mov bl, byte ptr [esi+02]<br>
        :004010AF 32C3 xor al, bl<br>
        :004010B1 8A5E01 mov bl, byte ptr [esi+01]<br>
        :004010B4 8A4E03 mov cl, byte ptr [esi+03]<br>
        :004010B7 32D9 xor bl, cl<br>
        :004010B9 32C3 xor al, bl<br>
        :004010BB 5E pop esi<br>
        :004010BC B908000000 mov ecx, 00000008<br>
        :004010C1 3006 xor byte ptr [esi], al<br>
        :004010C3 46 inc esi<br>
        :004010C4 E2FB loop 004010C1</font><br>
        :004010C6 B908000000 mov ecx, 00000008<br>
        :004010CB 8BF2 mov esi, edx<br>
        :004010CD 83C608 add esi, 00000008<br>
        :004010D0 8BFE mov edi, esi<br>
        :004010D2 83EE08 sub esi, 00000008<br>
        :004010D5 B8241F1C48 mov eax, 481C1F24<br>
        :004010DA 8907 mov dword ptr [edi], eax<br>
        :004010DC B844434049 mov eax, 49404344<br>
        :004010E1 894704 mov dword ptr [edi+04], eax<br>
        :004010E4 8A06 mov al, byte ptr [esi]<br>
        :004010E6 8A1F mov bl, byte ptr [edi]<br>
        :004010E8 38D8 cmp al, bl<br>
        :004010EA 7517 jne 00401103<br>
        :004010EC 46 inc esi<br>
        :004010ED 47 inc edi<br>
        :004010EE E2F4 loop 004010E4<br>
        :004010F0 6A00 push 00000000</font></p>
      <p><font size="2" face="Courier New, Courier, mono">* Possible StringData 
        Ref from Data Obj -&gt;&quot;CRACKED&quot; =&gt; bingo<br>
        |<br>
        :004010F2 682D304000 push 0040302D</font></p>
      <p><font size="2" face="Courier New, Courier, mono">* Possible StringData 
        Ref from Data Obj -&gt;&quot;Crackme crack&quot;<br>
        |<br>
        :004010F7 681A304000 push 0040301A<br>
        :004010FC 6A00 push 00000000</font></p>
      <p><font size="2" face="Courier New, Courier, mono">* Reference To: USER32.MessageBoxA, 
        Ord:01BBh<br>
        |<br>
        :004010FE E86F000000 Call 00401172</font></p>
      <p><font size="2" face="Courier New, Courier, mono">* Referenced by a 
        (U)nconditional or (C)onditional Jump at Address:<br>
        |:004010EA(C)<br>
        |<br>
        :00401103 6A00 push 00000000</font></p>
      <p><font size="2" face="Courier New, Courier, mono">* Reference To: KERNEL32.ExitProcess, 
        Ord:0075h <strong><font face="Arial, Helvetica, sans-serif">(=&gt; bye 
        bye...)</font></strong><br>
        |<br>
        :00401105 E856000000 Call 00401160<br>
        :0040110A 61 popad</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">A la fin, notre serial 
        doit &ecirc;tre &eacute;gal &agrave; ca : </font></p>
      <p><font size="2" face="Courier New, Courier, mono">:004010D5 B8241F1C48 
        mov eax, 481C1F24<br>
        :004010DA 8907 mov dword ptr [edi], eax<br>
        :004010DC B844434049 mov eax, 49404344<br>
        :004010E1 894704 mov dword ptr [edi+04], eax<br>
        <font face="Arial, Helvetica, sans-serif"><strong>(EDI = 241F1C4844434049)</strong></font><br>
        :004010E4 8A06 mov al, byte ptr [esi]<br>
        :004010E6 8A1F mov bl, byte ptr [edi]<br>
        :004010E8 38D8 cmp al, bl<br>
        <font face="Arial, Helvetica, sans-serif"><strong> (Comparaison entre 
        ESI (notre serial) et EDI)</strong></font><br>
        </font><font size="2" face="Arial, Helvetica, sans-serif"><br>
        Donc ce qu'il faut obtenir au terme des diff&eacute;rentes transformations 
        c'est une cha&icirc;ne &eacute;gale &agrave; : <br>
        <img src="Crazy/cequilfautobtenir.jpg" width="433" height="41"> </font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">On va d'abord s'attacher 
        &agrave; trouver la partie la plus facile du serial : </font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Il s'agit des 4 derniers 
        caract&egrave;res, en effet ils ne subissent qu'une seule transformation.</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Donc il nous faut 
        trouver ceci : </font></p>
      <p><font size="2" face="Courier New, Courier, mono"> 5&egrave;me caract&egrave;re 
        Xor 2C = 44 (valeur h&eacute;xa &eacute;videmment)<br>
        6&egrave;me caract&egrave;re Xor 2C = 43<br>
        7&egrave;me caract&egrave;re Xor 2C = 40<br>
        8&egrave;me caract&egrave;re Xor 2C = 49</font><font size="2" face="Arial, Helvetica, sans-serif"><br>
        <br>
        Pour cela, il y a deux m&eacute;thodes : </font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif"> <strong>M&eacute;thode 
        1) On est malin (bon c'est quoi l'autre solution ?)</strong><br>
        Tout d'abord 
        un petit rappel, je me permets de citer un passage du texte : <strong><em>'Cryptosysteme 
        - XOR Par Sabrina'</em> </strong></font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif"><em>&quot;Avant, d'&ecirc;tre 
        consid&eacute;r&eacute; comme une m&eacute;thode de cryptage, le XOR est 
        avant tout une op&eacute;ration logique. En effet, le XOR est un op&eacute;rateur 
        binaire qui poss&egrave;de 2 op&eacute;randes et qui renvoie 1 r&eacute;sultat. 
        Le XOR se manipule bit &agrave; bit de la fa&ccedil;on suivante:</em></font></p>
      <p><em><font size="2" face="Arial, Helvetica, sans-serif">1 XOR 1 = 0<br>
        1 XOR 0 = 1<br>
        0 XOR 1 = 1<br>
        0 XOR 0 = 0<br>
        [...]</font></em></p>
      <p><em><font size="2" face="Arial, Helvetica, sans-serif"><strong>CASSER 
        LE XOR<br>
        </strong></font><font size="2" face="Arial, Helvetica, sans-serif">Il 
        faut bien voir que la donn&eacute;e de C (cl&eacute;) permet de retrouver 
        enti&egrave;rement M (message initial en clair). Toute la s&eacute;curit&eacute; 
        du XOR r&eacute;side donc dans la possession de la cl&eacute; C. Ainsi, 
        on cherchera avant tout &agrave; d&eacute;terminer la cl&eacute;.&quot;</font></em></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif"><strong>Fin de citation.</strong></font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Ici, nous on va un 
        petit peu adapter, car en effet, ici on connait C (la cl&eacute;) il s'agit 
        de 2C.<br>
        Si Caract&egrave;re 
        Crypt&eacute; = Caract&egrave;re initial Xor Cl&eacute;<br>
        Alors Caract&egrave;re 
        Crypt&eacute; Xor Cl&eacute; = Caract&egrave;re initial (ce qui nous int&eacute;resse 
        en l'occurrence)</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Ainsi : </font><br>
        <font size="2" face="Arial, Helvetica, sans-serif">Si 5&egrave;me caract&egrave;re 
        Xor 2C = 44 il faut faire : 44 Xor 2C = 68<br>
        Si 6&egrave;me caract&egrave;re Xor 2C = 43 il faut faire : 43 Xor 2C 
        = 6F<br>
        Si 7&egrave;me caract&egrave;re Xor 2C = 40 il faut faire : 40 Xor 2C 
        = 6C<br>
        Si 8&egrave;me caract&egrave;re Xor 2C = 49 il faut faire : 49 Xor 2C 
        = 65<br>
        NB : utilisez 
        la calculatrice windows en mode scientifique et utilisez la fonction Xor.<br>
        <br>
        <strong>M&eacute;thode 
        2) On est plut&ocirc;t bourrin</strong><br>
        <br>
        On peut se cr&eacute;er un p'tit programme en VB par exemple (<font size="1">Oui 
        je sais je vais encore me faire huer</font>) qui pourrait ressembler &agrave; 
        &ccedil;a : </font></p>
      <p><font size="2" face="Courier New, Courier, mono">Private Sub Command1_Click()</font></p>
      <font size="2" face="Courier New, Courier, mono">X = 0<br>
      begin:<br>
      A = X Xor 44<br>
      <font color="#00FF00">'44d = 2C en h&eacute;xa</font><br>
      If A = 68 Then<br>
      <font color="#00FF00"> '68d = 44h</font><br>
      <br>
      MsgBox Hex((A)) &amp; &quot; soit &quot; &amp; Chr(X)<br>
      <font color="#00FF00">'donne la valeur en h&eacute;xa et le caract&egrave;re 
      correspondant</font><br>
      Else<br>
      X = X + 1<br>
      GoTo begin</font> 
      <p><font size="2" face="Courier New, Courier, mono">End If<br>
        End Sub</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Evidemment, ici il 
        faut &agrave; modifier &agrave; chaque fois les valeurs &agrave; trouver. 
        Par exemple, pour trouver le 6&egrave;me caract&egrave;re, il faudrait 
        modifier cette ligne : </font><br>
        <font size="2" face="Courier New, Courier, mono">If A = 68 Then ==&gt;&gt; 
        If A = 67 then <font color="#00FF00">'67d = 43h</font></font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Bref, quelque que 
        soit la mani&egrave;re retenue nous avons &agrave; pr&eacute;sent les 
        4 derniers caract&egrave;res du serial ce qui nous donne en h&eacute;xa 
        686F6C65. Ce qui en ASCII nous donne : 'hole'</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Maintenant, on peut 
        s'attaquer &agrave; trouver les valeurs des 4 premiers caract&egrave;res.<br>
        On connait les valeurs de [ESI+04] &agrave; [ESI+07]<br>
        <br>
        Pour trouver 
        valeurs manquantes, il nous faut r&eacute;soudre ceci : </font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif"> <font face="Courier New, Courier, mono">[ESI] 
        Xor 44 = 24 (en effet, 44 correspond &agrave; ESI+04)<br>
        [ESI] Xor 43 = 1F ( &quot; 43 &quot; &quot; ESI+05)<br>
        [ESI] Xor 40 = 1C ( &quot; 40 &quot; &quot; ESI+06)<br>
        [ESI] Xor 49 = 48 ( &quot; 49 &quot; &quot; ESI+07)</font><br>
        <br>
        </font><font size="2" face="Courier New, Courier, mono">Si (1er caract&egrave;re 
        Xor 2C) Xor 49 = 24 il faut faire ceci : (49 Xor 2C) Xor 24 = 41<br>
        Si (2&egrave;me caract&egrave;re Xor 2C) Xor 40 = 1F &quot; &quot; (40 
        Xor 2C) Xor 1F = 73<br>
        Si (3&egrave;me caract&egrave;re Xor 2C) Xor 43 = 1C &quot; &quot; (43 
        Xor 2C) Xor 1C = 73<br>
        Si (4&egrave;me caract&egrave;re Xor 2C) Xor 44 = 48 &quot; &quot; (44 
        Xor 2C) Xor 48 = 20</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Ainsi les 4 premiers 
        caract&egrave;res sont 41737320 en h&eacute;xa, ce qui en ASCII nous donne 
        : 'Ass ' [<em>on peut ici &eacute;videmment refaire un ptit programme 
        en VB ou autre pour retrouver ces m&ecirc;mes valeurs avec la m&eacute;thode 
        force brute</em>]</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Au final le serial 
        est : <font color="#333333">Ass hole</font><br>
        <strong>On teste ...</strong> et Crackme crack&eacute;, Bingo ;)</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif">Voili, Voilou, en 
        esp&eacute;rant avoir &eacute;t&eacute; compr&eacute;hensible.</font></p>
      <p><font size="2" face="Arial, Helvetica, sans-serif"> <img src="images/crazy.jpg" width="260" height="32"></font></p></td>
  </tr>
</table>

<!-- Mirrored from frenchezines.free.fr/tries/shmeitcorp/5/Crazy/solucespudcrackme1.htm by HTTrack Website Copier/3.x [XR&CO'2007], Thu, 07 Aug 2008 04:41:16 GMT -->
</html>
