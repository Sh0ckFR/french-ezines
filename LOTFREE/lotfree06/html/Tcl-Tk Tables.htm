<TITLE>Tcl/Tk: Tables</TITLE>

<H1>Tcl/Tk: Tables</H1>
<HR>
<H2>Table of Contents</H2>

<UL>
<UL>
<A HREF="Tcl-Tk Tables.htm#HDR1.1"> 1.1.   Les diff&eacute;rentes s&eacute;quences backslash sp&eacute;ciales (\ )</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR1.2"> 1.2.   Les op&eacute;rateurs arithm&eacute;tiques</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR1.3"> 1.3.   Les fonctions math&eacute;matiques</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR1.4"> 1.4.   Les variables r&eacute;serv&eacute;es</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR1.5"> 1.5.   Les options de la commande info</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR2.1"> 2.1.   Les commandes concernant les listes</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR2.2"> 2.2.   Les commandes concernant les arrays</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR3.1"> 3.1.   Les options de la commande string</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR3.2"> 3.2.   La syntaxe des expressions r&eacute;guli&egrave;res</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR4.1"> 4.1.   La syntaxe des redirections pour la commande exec</A>
<BR>
<A HREF="Tcl-Tk Tables.htm#HDR4.2"> 4.2.   Les options de la commande file</A>

<BR>
<A HREF="Tcl-Tk Tables.htm#HDR4.3"> 4.3.   Les commandes concernant l'acc&egrave;s aux fichiers</A>
</UL>
</UL>
Tous ces tableaux sont repris du draft du livre de <I>Brent Welch</I> qui doit sortir en mai 95.

<HR>
<H2><A NAME="HDR1.1"> 1.1 Les diff&eacute;rentes s&eacute;quences backslash sp&eacute;ciales (\ )</A></H2>
<B><A NAME="table_backslash">Backslash Sequences</A></B>
<PRE>
\a             Bell.(0x7)

\b             Backspace.(0x8)

\f             Form feed.(0xc)

\n             Newline.(0xa)

\r             Carriage return.(0xd)

\t             Tab (0x9)

\v             Vertical tab.(0xb)

\&lt;newline&gt;     Replace newline and all leading whitespace on the following line
               with a single space.

\\             Backslash.('\')

\<I>ooo</I>           Octal specification of character code. 1,2, or 3 digits.

\<I>xhh</I>           Hexadecimal specification of character code. 1, or 2 digits.

\<I>c</I>             Replaced with literal <I>c</I> if <I>c</I> is not one of the cases listed above. In
               particular, \$,\",\{ and\[ are used to obtain these characters.
</PRE>

<H2><A NAME="HDR1.2"> 1.2 Les op&eacute;rateurs arithm&eacute;tiques</A></H2>
<B><A NAME="table_arithmetic">Arithmetic Operators from highest to lowest precedence</A></B>
<PRE>
- ~ !        Unary minus, bitwise NOT, logical NOT.

* / %        Multiply, divide, remainder.

+ -          Add, substract.

« »          Left shift, right shift.

< > <= >=    Comparison: less, greater, less or equal, greater or equal.

== !=        Equal, not equal.

&            Bitwise AND.

^            Bitwise NOT.

|            Bitwise OR.

&&           Logical AND.

||           Logical OR.

x?y:z        If <I>x</I> then <I>y</I> else <I>z</I>.
</PRE>

<H2><A NAME="HDR1.3"> 1.3 Les fonctions math&eacute;matiques</A></H2>
<B><A NAME="table_math">Built-in Math functions</A></B>

<PRE>
acos(x)           Arc-cosine of x.
asin(x)           Arc-sine of x.
atan(x)           Arc-tangent of x.
atan2(y,x)        Rectangular (x,y) to polar(r,th).atan2 gives th
ceil(x)           Least integral value greater than or equal to x.
cos(x)            Cosine of x.
cosh(x)           hyperbolic cosine of x.
exp(x)            Exponential, exp(x)
floor(x)          Greatest integral value less than or equal to x.
fmod(x,y)         Floating point remainder of x/y.
hypot(x,y)        Returns sqrt (x*x + y*y). r part of polar coordinates.
log(x)            Natural log of x.
log10(x)          Log base 10 of x.
pow(x,y)          x to the y power
sin(x)            Sine of x.
sinh(x)           Hyperbolic sine of x.
sqrt(x)           Square root of x.
tan(x)            Tangent of x.
tanh(x)           Hyperbolic tangent of x.
abs(x)            Absolute value of x.
double(x)         Promote x to floating point.
int(x)            Truncate x to an integer.
round(x)          Round x to an integer.
</PRE>

<H2><A NAME="HDR1.4"> 1.4 Les variables r&eacute;serv&eacute;es</A></H2>
<B><A NAME="table_variables">Variables defined by <I>tclsh</I></A></B>
<PRE>
argc                   The number of command line arguments.

argv                   A list of the command line arguments.

argv0                  The name of the script being executed. If being used interac-
                       tively, argv0 is the name of the shell program.

env                    An array of the environment variables. See page 38.

tcl_interactive        True (one) if the <I>tclsh</I> is prompting for commands.

tcl_prompt1            If defined, this is a command that outputs the prompt.

tcl_prompt2            If defined, this is a command that outputs the prompt if the
                       current command is not yet complete.

auto_path              The search path for script library directories. See page 90
                       of Welsh draft.

auto_index             A map from command name to a Tcl command that defines it.

auto_noload            If set, the library facility is disabled.

auto_noexec            If set, the auto execute facility is disabled.

geometry               (<I>wish</I> only). The value of the -geometry argument.
</PRE>

<H2><A NAME="HDR1.5"> 1.5 Les options de la commande info</A></H2>
<B><A NAME="table_info">The info command</A></B>

<PRE>
info args procedure          A list of <I>procedure</I>'s arguments.

info body procedure          The commands in the body of <I>procedure</I>.

info cmdcount                The number of commands executed so far.

info commands ?pattern?      A list of all commands, or those matching
                             <I>pattern</I>. Includes built-ins and Tcl procedures.

info complete string         True if <I>string</I> contains a complete Tcl command.

info default proc arg var    True if <I>arg</I> has a default parameter value in pro-
                             cedure <I>proc</I>. The default value is stored into <I>var</I>.

info exists variable         True if <I>variable</I> is defined.

info globals ?pattern?       A list of all global variables, or those matching
                             <I>pattern</I>.

info level                   The stack level of the current procedure, or 0 for
                             the global scope.

info level number            A list of the command and its arguments at the
                             specified level of the stack.

info library                 The pathname of the Tcl library directory.

info locals ?pattern?        A list of t all local variables, or those matching
                             <I>pattern</I>.

info patchlevel              The release patchlevel fot Tcl.

info procs ?pattern?         A list of all Tcl procedures, or those that match
                             <I>pattern</I>.

info script                  The name of the file being processed, or NULL.

info tclversion              The version number of Tcl.

info vars ?pattern?          A list of all visible variables, or those matching
                             pattern.
</PRE>

<HR>
<H2><A NAME="HDR2.1"> 2.1 Les commandes concernant les listes</A></H2>
<B><A NAME="table_list">List-related commands</A></B>

<PRE>
list arg1 arg2...               Creates a list out of all its arguments.

lindex list i                   Returns the <I>i</I>'th element from <I>list</I>.

llength list                    Returns the number of elements in <I>list</I>.

lrange list i j                 Returns the <I>i</I>'th through <I>j</I>'th elements
                                from <I>list</I>.

lappend listVar arg arg ...     Append a elements to the value of <I>listVar</I>.

linsert list index arg arg ...  Insert elements into <I>list</I> before the element at
                                position <I>index</I>. Returns a new list.

lreplace list i j arg arg ...   Replace elements <I>i</I> through <I>j</I> of <I>list</I>
                                with the <I>args</I>. Returns a new list.

lsearch mode list value         Return the index of the element in <I>list</I> that
                                matches the <I>value</I> according to the mode, which
                                is -exact, -glob, or -regexp. -glob is the
                                default. Return -1 if not found.

lsort switches list             Sort elements of the list according to the switches:
                                -ascii, -integer, -real, -increasing, -decreasing,
                                -command <I>command</I>. Returns a new list.

concat arg arg arg ...          Join multiple lists together into one list.

join list joinString            Merge the elements of a list together by separat-
                                ing them with <I>joinString</I>.

split string splitChars         Split a string up into list elements, using (and dis-
                                carding) the characters in <I>splitChars</I> as bound-
                                aries between list elements.
</PRE>

<H2><A NAME="HDR2.1"> 2.2 Les commandes concernant les arrays</A></H2>
<B><A NAME="table_array">The array command</A></B>
<PRE>
array exists arr             Returns 1 if <I>arr</I> is an array variable.

array get arr                Returns a list that alternates between an index
                             and the corresponding array value.

array names arr?pattern?     Return the list of all indices defined for <I>arr</I>, or
                             those that match the string match <I>pattern</I>.

array set arr list           Initialize the array <I>arr</I> from <I>list</I>, which should
                             have the same form as the list returned by get.

array size arr               Return the number of indices defined for <I>arr</I>.

array startsearch arr        Return a search id key for a search through <I>arr</I>.

array nextelement arrid      Return the value of the next element in <I>array</I> in
                             the search identified by <I>id</I>. Returns an empty
                             string if no more elements remain in the search.

array anymore arr id         Returns 1 if more elements remain in the search.

array donesearch arr id      End the search identified by <I>id</I>.
</PRE>

<HR>
<H2><A NAME="HDR3.1"> 3.1 Les options de la commande string</A></H2>
<B><A NAME="table_string">The string command</A></B>

<PRE>
string compare str1 str2           Compare strings lexicographically.Returns 0 if
                                   equal, -1 if <I>str1</I> sorts before<I>str2</I>, else 1.

string first str1 str2             Return the index in <I>str2</I> of the first occurrence of
                                   <I>str1</I>, or -1 if <I>str1</I> is not found.

string index string index          Return the character at the specified <i>index</I>.

string last str1 str2              Return the index in <I>str2</I> of the last occurrence of
                                   <I>str1</I>, or -1 if <I>str1</I> is not found.

string length string               Return the number of characters in string.

string match pattern str           Return 1 if <I>str</I> matches the <I>pattern</I>, else 0.
                                   Glob-style matching is used. See page 24.

string range str i j               Return the range of characters in str from <I>i</I> to <I>j</I>.

string tolower string              Return <I>string</I> in lower case.

string toupper string              Return <I>string</I> in upper case.

string trim string ?chars?         Trim the characters in <I>chars</I> from both ends of
                                   <I>string.chars</I> defaults to whitespace.

string trimleft string ?chars?     Trim the characters in <I>chars</I> from the beginning of
                                   <I>string.chars</I>defaults to whitespace.

string trimright string ?chars?    Trim the characters in <I>chars</I> from the end of 
                                   <I>string.chars</I> defaults to whitespace.

string wordend str ix              Return the index in <I>str</I> of the character after the
                                   word containing the character at index <I>ix</I>.

string wordstart str ix            Return the index in <I>str</I> of the first character in
                                   the word containing the character at index <I>ix</I>.
</PRE>

<H2><A NAME="HDR3.2"> 3.2 La syntaxe des expressions r&eacute;guli&egrave;res</A></H2>
<B><A NAME="table_regexp">Regular Expression Syntax</A></B>

<PRE>
.          Matches any character.

*          Matches zero or more.

+          Matches one or more.

?          Matches zero or one.

()         Groups a sub-pattern. The repetition and alternation operators apply to
           the whole proceeding sub-pattern.

|          Alternation.

[]         Delimit a set of characters. Ranges are specified as [x-y]. If the first
           character in the set is ^, then there is a match if the remaining characters
           in the set are <I>not</I> present.

^          Anchor the pattern to the beginning of the string. Only when first.

$          Anchor the pattern to the end of the string. Only when last.
</PRE>


<HR>
<H2><A NAME="HDR4.1"> 4.1 La syntaxe des redirections pour la commande exec</A></H2>
<B><A NAME="table_exec">Summary of the exec syntax for I/O redirection</A></B>
<PRE>
-keepnewline    (First arg only.) Do not discard trailing newline from the result.

|               Pipe standard output from one process into another.

|&              Pipe both standard output and standard error output.

< fileName      Take input from the named file.

<@ fileId       Take input from the I/O stream identified by <I>fileId</I>.

<< value        Take input from the given value.

> fileName      Overwrite <I>fileName</I> with standard output.

2> fileName     Overwrite <I>fileName</I> with standard error output.

>& fileName     Overwrite <I>fileName</I> with both standard error and standard out.

>> fileName     Append standard output to the named file.

2>> fileName    Append standard error to the named file.

>>& fileName    Append both standard error and standard output to the named file.

>@ fileId       Direct standard output to the I/O stream identified by <I>fileId</I>.

2>@ fileId      Direct standard error to the I/O stream identified by <I>fileId</I>.

>&@ fileId      Direct both standard error and standard output to the I/O stream.

&               As the last argument, indicates pipeline should run in background.
</PRE>

<H2><A NAME="HDR4.2"> 4.2 Les options de la commande file</A></H2>
<B><A NAME="table_file">The Tcl file command options</A></B>
<PRE>
file atime name          Return access time as a decimal string.

file dirname name        Return parent directory of file <I>name</I>.

file executable name     Return 1 if <I>name</I> has execute permission, else 0.

file exists name         Return 1 if <I>name</I> exists, else 0.

file extension name      Return the part of <I>name</I> from the last dot '.' to the end.

file isdirectory name    Return 1 if <I>name</I> is a directory, else 0.

file isfile name         Return 1 if <I>name</I> is not a directory, symbolic link, or
                         device, else 0.

file lstat name var      Place stat results about the link <I>name</I> into <I>var</I>.

file mtime name          Return modify time of <I>name</I> as a decimal string.

file owned name          Return 1 if current user owns the file <I>name</I>, else 0.

file readable name       Return 1 if <I>name</I> has read permission, else 0.

file readlink name       Return the contents of the symbolic link <I>name</I>.

file rootname name       Return all but the extension ('.' and onwards) of <I>name</I>.

file size name           Return the number of bytes in <I>name</I>.

file stat name var       Place stat results about <I>name</I> into array <I>var</I>. The ele-
                         ments defined for <I>var</I> are: atime, ctime, dev, gid,
                         ino, mode, mtime, nlink, size, type, and uid.

file tail name           Return all characters after last '/' in <I>name</I>.

file type name           Return type identifier, which is one of: file,
                         directory, characterSpecial, blockSpecial, fifo,
                         link, or socket.

file writable name       Return 1 if <I>name</I> has write permission, else 0.
</PRE>

<H2><A NAME="HDR4.3"> 4.3 Les commandes concernant l'acc&egrave;s aux fichiers</A></H2>
<B><A NAME="table_I/O">Tcl commands used for file access</A></B>
<PRE>
open what ?access? ?permissions?       Open a file or pipeline.

puts ?-nonewline? ?stream? string      Write a string.

gets stream ?varname?                  Read a line.

read ?-nonewline? stream ?numBytes?    Read bytes.

tell stream                            Return the seek offset.

seek stream offset ?origin?            Set the seek offset. <I>origin</I> is one of
                                       start, current, or end.

eof stream                             Query end-of-file status.

flush stream                           Write out buffers of a stream.

close stream                           Close an I/O stream.
</PRE>
<HR>
<ADDRESS>Anne Possoz</ADDRESS>
Tricoté avec patience par <I>Marielle Flutsch</I>
